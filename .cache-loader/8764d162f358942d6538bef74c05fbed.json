{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/roles/add/logs-role-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/roles/add/logs-role-add.controller.js","mtime":1539717142140},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsRoleAddModalCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsRoleAddModalCtrl.$inject = [\"$q\", \"$stateParams\", \"$uibModalInstance\", \"ControllerHelper\", \"LogsRolesService\", \"options\", \"quota\", \"roleInfo\"];\n\n  function LogsRoleAddModalCtrl($q, $stateParams, $uibModalInstance, ControllerHelper, LogsRolesService, options, quota, roleInfo) {\n    _classCallCheck(this, LogsRoleAddModalCtrl);\n\n    this.$stateParams = $stateParams;\n    this.$q = $q;\n    this.ControllerHelper = ControllerHelper;\n    this.options = options;\n    this.quota = quota;\n    this.roleInfo = roleInfo;\n    this.LogsRolesService = LogsRolesService;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = $stateParams.serviceName;\n    this.role = this.LogsRolesService.getNewRole();\n  }\n\n  _createClass(LogsRoleAddModalCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.isEdit = this.constructor.checkIsEdit(this.roleInfo);\n\n      if (this.isEdit) {\n        this.populateRole();\n      } else {\n        this.clearRole();\n      }\n    }\n  }, {\n    key: \"clearRole\",\n    value: function clearRole() {\n      this.title = 'logs_role_modal_add_title';\n      this.role.description = '';\n      this.role.name = '';\n      this.role.optionId = null;\n    }\n  }, {\n    key: \"populateRole\",\n    value: function populateRole() {\n      this.title = 'logs_role_modal_edit_title';\n      this.role.description = this.roleInfo.description;\n      this.role.name = this.roleInfo.name;\n      this.role.optionId = this.roleInfo.optionId;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      if (this.isEdit) {\n        this.updateRole();\n      } else {\n        this.saveRole();\n      }\n    }\n  }, {\n    key: \"saveRole\",\n    value: function saveRole() {\n      var _this = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsRolesService.addRole(_this.serviceName, _this.role).then(function (response) {\n            return _this.$uibModalInstance.close(response);\n          }).catch(function (response) {\n            return _this.$uibModalInstance.dismiss(response);\n          }).finally(function () {\n            return _this.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }, {\n    key: \"updateRole\",\n    value: function updateRole() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsRolesService.updateRole(_this2.serviceName, _this2.roleInfo.roleId, _this2.role).then(function (response) {\n            return _this2.$uibModalInstance.close(response);\n          }).catch(function (response) {\n            return _this2.$uibModalInstance.dismiss(response);\n          }).finally(function () {\n            return _this2.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }], [{\n    key: \"checkIsEdit\",\n    value: function checkIsEdit(roleInfo) {\n      return roleInfo !== undefined;\n    }\n  }]);\n\n  return LogsRoleAddModalCtrl;\n}();\n\nangular.module('managerApp').controller('LogsRoleAddModalCtrl', LogsRoleAddModalCtrl);",null]}