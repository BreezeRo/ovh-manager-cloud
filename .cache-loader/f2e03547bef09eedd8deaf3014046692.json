{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-request-helper.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-request-helper.service.js","mtime":1539717142186},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ControllerRequestHelper =\n/*#__PURE__*/\nfunction () {\n  ControllerRequestHelper.$inject = [\"$q\"];\n\n  function ControllerRequestHelper($q) {\n    _classCallCheck(this, ControllerRequestHelper);\n\n    this.$q = $q;\n  }\n\n  _createClass(ControllerRequestHelper, [{\n    key: \"getHashLoader\",\n    value: function getHashLoader(config) {\n      var loader = {\n        loading: false,\n        data: {},\n        hasErrors: false\n      };\n      return this.getLoader(loader, config);\n    }\n  }, {\n    key: \"getArrayLoader\",\n    value: function getArrayLoader(config) {\n      var loader = {\n        loading: false,\n        data: undefined,\n        promise: undefined,\n        hasErrors: false\n      };\n      return this.getLoader(loader, config);\n    }\n  }, {\n    key: \"getLoader\",\n    value: function getLoader() {\n      var _this = this;\n\n      var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var configParam = arguments.length > 1 ? arguments[1] : undefined;\n      var loader = initialData;\n      var config = configParam;\n\n      if (_.isFunction(config)) {\n        config = {\n          loaderFunction: config\n        };\n      }\n\n      loader.load = function () {\n        if (_.isArray(initialData.data) || _.keys(initialData.data).length === 0) {\n          loader.loading = true;\n        }\n\n        var promise = _this.$q.when(config.loaderFunction()).then(function (response) {\n          loader.data = response.data || response;\n          loader.hasErrors = false;\n\n          if (config.successHandler) {\n            config.successHandler(response);\n          }\n\n          return response;\n        }).catch(function (response) {\n          loader.hasErrors = true;\n\n          if (config.errorHandler) {\n            config.errorHandler(response);\n          }\n\n          return _this.$q.reject(response);\n        }).finally(function () {\n          loader.loading = false;\n        });\n\n        loader.promise = promise;\n        return promise;\n      };\n\n      return loader;\n    }\n  }]);\n\n  return ControllerRequestHelper;\n}();\n\nangular.module('managerApp').service('ControllerRequestHelper', ControllerRequestHelper);",null]}