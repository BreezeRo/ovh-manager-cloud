{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/auth/auth.config.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/auth/auth.config.js","mtime":1539717142349},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp')\n  .config((ssoAuthenticationProvider, ssoAuthModalPluginFctProvider, $httpProvider, CONFIG_API) => {\n    ssoAuthenticationProvider.setLoginUrl(CONFIG_API.loginUrl);\n    ssoAuthenticationProvider.setLogoutUrl(`${CONFIG_API.loginUrl}?action=disconnect`);\n\n    if (CONFIG_API.userUrl) {\n      ssoAuthenticationProvider.setUserUrl(CONFIG_API.userUrl);\n    }\n\n    ssoAuthenticationProvider.setConfig(CONFIG_API.apis);\n\n    $httpProvider.interceptors.push('ssoAuthInterceptor');\n  })\n  .run(($transitions, ssoAuthentication) => {\n    ssoAuthentication.login();\n\n    // use of onStateChangeStart event to detect if state needs authentification\n    // this is useful when application is first runned\n\n    ssoAuthentication.isLogged().then((isLogged) => {\n      $transitions.onStart({}, (transition) => {\n        const toState = transition.to();\n\n        const needToBeAuthenticate = toState.authenticate !== undefined\n          ? toState.authenticate\n          : true;\n\n        if (needToBeAuthenticate && !isLogged) {\n          event.preventDefault(); // eslint-disable-line\n          ssoAuthentication.goToLoginPage();\n        }\n      });\n    });\n  });\n"]}