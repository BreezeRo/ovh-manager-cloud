{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vrack/modals/selectVrack.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vrack/modals/selectVrack.controller.js","mtime":1539717142311},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SelectVrackCtrl =\n/*#__PURE__*/\nfunction () {\n  SelectVrackCtrl.$inject = [\"$q\", \"$window\", \"$uibModalInstance\", \"$stateParams\", \"params\"];\n\n  function SelectVrackCtrl($q, $window, $uibModalInstance, $stateParams, params) {\n    _classCallCheck(this, SelectVrackCtrl);\n\n    this.$q = $q;\n    this.projectId = $stateParams.projectId;\n    this.orderUrl = params.orderUrl;\n    this.modal = $uibModalInstance;\n    this.$window = $window; // get vRacks for current user, shown in left side bar\n\n    this.vRacks = params.vRacks;\n    this.loaders = {\n      activate: false\n    }; // activate options ENUM\n\n    this.activateOptions = _.indexBy(['EXISTING', 'NEW']); // selected activate option\n\n    this.selectedActivateOption = this.activateOptions.EXISTING; // selected vRack\n\n    this.selectedVrack = null;\n  }\n  /**\n   * validates vRack selection field. Returns false if no value is selected.\n   *\n   * @param {any} value, selected index\n   * @returns\n   * @memberof AddVRackCtrl\n   */\n\n\n  _createClass(SelectVrackCtrl, [{\n    key: \"orderNewVrack\",\n\n    /**\n     * open order new vRack url in new window\n     *\n     * @memberof AddVRackCtrl\n     */\n    value: function orderNewVrack() {\n      this.modal.close();\n      this.$window.open(this.orderUrl, '_blank');\n    }\n    /**\n     * close modal and return the chosen vrack\n     *\n     * @memberof AddVRackCtrl\n     */\n\n  }, {\n    key: \"selectVrack\",\n    value: function selectVrack() {\n      return this.modal.close({\n        name: this.selectedVrack.displayName,\n        serviceName: this.selectedVrack.serviceName\n      });\n    }\n    /**\n     * action handler method called on click of active button on UI\n     *\n     * @memberof AddVRackCtrl\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      if (this.selectedActivateOption === this.activateOptions.EXISTING) {\n        return this.selectVrack();\n      }\n\n      return this.orderNewVrack();\n    }\n    /**\n     * action handler method called on click of cancel button on UI\n     *\n     * @memberof AddVRackCtrl\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.modal.dismiss('cancel');\n    }\n  }], [{\n    key: \"validateSelection\",\n    value: function validateSelection(value) {\n      return value && value !== '0';\n    }\n  }]);\n\n  return SelectVrackCtrl;\n}();\n\nangular.module('managerApp').controller('SelectVrackCtrl', SelectVrackCtrl);",null]}