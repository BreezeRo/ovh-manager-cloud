{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/consumption/estimate/alert/add/cloud-project-billing-consumption-estimate-alert-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/consumption/estimate/alert/add/cloud-project-billing-consumption-estimate-alert-add.controller.js","mtime":1539717141956},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectBillingConsumptionEstimateAlertAddCtrl',\n  function CloudProjectBillingConsumptionEstimateAlertAddCtrl($uibModalInstance, $stateParams,\n    $scope, $translate, $q, OvhApiMe, OvhApiCloudProjectAlerting, CloudMessage, dataContext) {\n    const self = this;\n\n    self.model = {\n      email: '',\n      threshold: null,\n    };\n\n    self.alerting = {\n      email: '',\n      threshold: 0,\n      currency: '',\n      defaultDelay: 3600, // user cannot choose one so we use a default value\n    };\n\n    self.loaders = {\n      saveAlert: false,\n    };\n\n    function initCurrency() {\n      self.alerting.currency = dataContext.currencySymbol;\n    }\n\n    function initAlert() {\n      if (dataContext.alert) {\n        self.model.email = dataContext.alert.email;\n        self.model.threshold = dataContext.alert.monthlyThreshold;\n        self.alerting.id = dataContext.alert.id;\n        self.alerting.email = self.model.email;\n        self.alerting.threshold = self.model.threshold;\n      } else {\n        self.alerting.id = null;\n        self.model.email = '';\n        self.alerting.email = '';\n        self.model.threshold = null;\n        self.alerting.threshold = null;\n      }\n    }\n\n    function init() {\n      initAlert();\n      initCurrency();\n    }\n\n    function createAlert() {\n      return OvhApiCloudProjectAlerting.v6().save({\n        serviceName: $stateParams.projectId,\n      }, {\n        delay: self.alerting.defaultDelay,\n        email: self.model.email,\n        monthlyThreshold: self.model.threshold,\n      }).$promise.then(() => {\n        CloudMessage.success($translate.instant('cpbea_estimate_alert_success'));\n      });\n    }\n\n    function editAlert(alertId) {\n      return OvhApiCloudProjectAlerting.v6().put({\n        serviceName: $stateParams.projectId,\n        alertId,\n      }, {\n        delay: self.alerting.defaultDelay,\n        email: self.model.email,\n        monthlyThreshold: self.model.threshold,\n      }).$promise.then(() => {\n        $uibModalInstance.close();\n        CloudMessage.success($translate.instant('cpbea_estimate_alert_success'));\n      });\n    }\n\n    self.saveAlert = function () {\n      this.loaders.saveAlert = true;\n      (!self.alerting.id ? createAlert() : editAlert(self.alerting.id))\n        .catch((err) => {\n          CloudMessage.error([$translate.instant('cpbea_estimate_alert_error'), (err.data && err.data.message) || ''].join(' '));\n        }).finally(() => {\n          $uibModalInstance.close();\n          self.loaders.saveAlert = false;\n        });\n    };\n\n    self.closeModal = function () {\n      $uibModalInstance.dismiss();\n    };\n\n    init();\n  });\n"]}