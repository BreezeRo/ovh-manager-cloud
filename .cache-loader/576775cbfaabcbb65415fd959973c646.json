{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/backup-storage/delete-backup-storage.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/backup-storage/delete-backup-storage.controller.js","mtime":1539717142291},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class DeleteBackupStorageCtrl {\n  constructor($translate, $uibModalInstance, ControllerHelper, CloudMessage, access, serviceName,\n    VpsService) {\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.access = access;\n    this.serviceName = serviceName;\n    this.VpsService = VpsService;\n    this.ControllerHelper = ControllerHelper;\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n\n  confirm() {\n    this.CloudMessage.flushChildMessage();\n    this.delete = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.deleteBackupStorageAccess(this.serviceName, this.access)\n        .then(() => this.CloudMessage.success(this.$translate.instant('vps_backup_storage_access_delete_success', { ipBlock: this.access })))\n        .catch(() => this.CloudMessage.error(this.$translate.instant('vps_backup_storage_access_delete_failure', { ipBlock: this.access })))\n        .finally(() => this.$uibModalInstance.close()),\n    });\n    return this.delete.load();\n  }\n}\n\nangular.module('managerApp').controller('DeleteBackupStorageCtrl', DeleteBackupStorageCtrl);\n"]}