{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/account/logs-home-account.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/account/logs-home-account.controller.js","mtime":1539717142081},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsHomeAccountCtrl {\n  constructor($location, $stateParams, $uibModalInstance, CloudMessage, ControllerHelper,\n    LogsHomeService, LogsConstants) {\n    this.$location = $location;\n    this.serviceName = $stateParams.serviceName;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.LogsConstants = LogsConstants;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsHomeService = LogsHomeService;\n    this.initLoaders();\n  }\n\n  $onInit() {\n    this.accountDetails.load()\n      .then(() => {\n        this.displayName = this.accountDetails.data.service.displayName;\n      });\n  }\n\n  /**\n   * initializes the account details and contacts\n   *\n   * @memberof LogsHomeAccountCtrl\n   */\n  initLoaders() {\n    this.accountDetails = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsHomeService.getAccountDetails(this.serviceName),\n    });\n  }\n\n  /**\n   * Closes the info pop-up\n   *\n   * @memberof LogsHomeAccountCtrl\n   */\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n\n  /**\n   * Updates the contact\n   *\n   * @memberof LogsHomeAccountCtrl\n   */\n  updateDisplayName() {\n    if (this.form.$invalid) {\n      return this.$q.reject();\n    }\n\n    this.CloudMessage.flushChildMessage();\n    this.saving = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsHomeService\n        .updateDisplayName(this.serviceName, this.accountDetails.data.service.displayName)\n        .finally(() => {\n          this.ControllerHelper.scrollPageToTop();\n          this.$uibModalInstance.close();\n        }),\n    });\n    return this.saving.load();\n  }\n}\n\nangular.module('managerApp').controller('LogsHomeAccountCtrl', LogsHomeAccountCtrl);\n"]}