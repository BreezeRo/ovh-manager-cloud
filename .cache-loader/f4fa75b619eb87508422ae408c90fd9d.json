{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/delete/cloud-project-delete.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/delete/cloud-project-delete.controller.js","mtime":1539717142042},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectDeleteCtrl', [\"$scope\", \"$uibModalInstance\", \"$translate\", \"CloudMessage\", \"$stateParams\", \"$q\", \"OvhApiCloudProjectInstance\", \"OvhApiCloudProjectVolume\", \"OvhApiCloudProjectSnapshot\", \"$state\", \"OvhApiCloudProjectStorage\", \"OvhApiCloudProjectIpFailover\", \"OvhApiCloudProjectIpV6\", \"OvhApiCloudProject\", \"OvhApiCloudProjectUsageCurrent\", \"OvhApiCloudProjectCredit\", \"CloudProjectBillingService\", \"TARGET\", function CloudProjectDeleteCtrl($scope, $uibModalInstance, $translate, CloudMessage, $stateParams, $q, OvhApiCloudProjectInstance, OvhApiCloudProjectVolume, OvhApiCloudProjectSnapshot, $state, OvhApiCloudProjectStorage, OvhApiCloudProjectIpFailover, OvhApiCloudProjectIpV6, OvhApiCloudProject, OvhApiCloudProjectUsageCurrent, OvhApiCloudProjectCredit, CloudProjectBillingService, TARGET) {\n  var self = this;\n  var projectId = $stateParams.projectId;\n  var now = moment();\n  self.resources = {\n    instance: 0,\n    volume: 0,\n    snapshot: 0,\n    storage: 0,\n    ipFailoverOvh: 0,\n    ipFailoverCloud: 0\n  };\n  self.bill = undefined;\n  self.hasCredits = false;\n  self.error = false;\n  self.loaders = {\n    init: false,\n    deleting: false\n  };\n\n  function getConsumption() {\n    return OvhApiCloudProjectUsageCurrent.v6().get({\n      serviceName: projectId\n    }).$promise.then(function (response) {\n      return CloudProjectBillingService.getConsumptionDetails(response, response);\n    }).then(function (data) {\n      self.bill = \"\".concat(data.totals.hourly.total.toFixed(2), \" \").concat(data.totals.currencySymbol);\n    }).catch(function (err) {\n      return $q.reject(err);\n    });\n  }\n\n  function getCredits() {\n    function isNotExpired(credit) {\n      var validity = credit.validity;\n      return (!validity.from || now.isAfter(validity.from)) && (!validity.to || now.isBefore(validity.to));\n    }\n\n    return OvhApiCloudProjectCredit.Aapi().query({\n      serviceName: projectId\n    }).$promise.then(function (credits) {\n      self.hasCredits = credits.some(function (credit) {\n        return isNotExpired(credit) && credit.available_credit.value > 0;\n      });\n    });\n  }\n\n  function initRemainingResources() {\n    return $q.all({\n      instance: OvhApiCloudProjectInstance.v6().query({\n        serviceName: projectId\n      }).$promise,\n      volume: OvhApiCloudProjectVolume.v6().query({\n        serviceName: projectId\n      }).$promise,\n      snapshot: OvhApiCloudProjectSnapshot.v6().query({\n        serviceName: projectId\n      }).$promise,\n      storage: OvhApiCloudProjectStorage.v6().query({\n        projectId: projectId\n      }).$promise,\n      ipFailoverOvh: OvhApiCloudProjectIpFailover.v6().query({\n        serviceName: projectId\n      }).$promise,\n      ipFailoverCloud: OvhApiCloudProjectIpV6.query({\n        serviceName: projectId\n      }).$promise\n    }).then(function (result) {\n      self.resources = _.mapValues(result, function (arr) {\n        return arr.length;\n      });\n    });\n  }\n\n  this.init = function () {\n    if (TARGET !== 'US') {\n      self.loaders.init = true;\n      $q.all([getConsumption(), getCredits(), initRemainingResources()]).then(function () {\n        self.error = false;\n      }, function () {\n        self.error = true;\n      }).finally(function () {\n        self.loaders.init = false;\n      });\n    }\n  }; // ---------MODAL---------\n\n\n  function deleteProject() {\n    self.loaders.deleting = true;\n    return OvhApiCloudProject.v6().delete({\n      serviceName: projectId\n    }, {}).$promise.then(function () {\n      self.errors = false;\n    }, function (err) {\n      self.errors = true;\n      return $q.reject(err);\n    }).finally(function () {\n      self.loaders.deleting = false;\n    });\n  }\n\n  self.confirm = function () {\n    return deleteProject().then(function () {\n      CloudMessage.success($translate.instant('cloud_project_delete_email_sent'));\n      $uibModalInstance.close();\n    }, function () {\n      CloudMessage.error($translate.instant('cloud_project_delete_error'));\n    });\n  };\n\n  self.cancel = $uibModalInstance.dismiss;\n\n  self.goToSupport = function () {\n    self.cancel();\n    $state.go('otrs-list');\n  };\n\n  self.resetCache = function () {\n    OvhApiCloudProjectInstance.v6().resetQueryCache();\n    OvhApiCloudProjectVolume.v6().resetQueryCache();\n    OvhApiCloudProjectSnapshot.v6().resetQueryCache();\n    OvhApiCloudProjectIpFailover.v6().resetQueryCache();\n    OvhApiCloudProjectIpV6.resetQueryCache();\n    self.init();\n  };\n\n  self.init();\n}]);",null]}