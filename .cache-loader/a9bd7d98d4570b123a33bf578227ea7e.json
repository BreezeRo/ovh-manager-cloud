{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/compute/compute.factory.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/compute/compute.factory.js","mtime":1539717142379},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').factory('CloudProjectComputeFactory', [\"CloudProjectComputeInfrastructureFactory\", \"CloudProjectComputeVolumesFactory\", function (CloudProjectComputeInfrastructureFactory, CloudProjectComputeVolumesFactory) {\n  /**\n   *  Defines a cloud project compute\n   *\n   *  @param    {Object}  options\n   *                      Options for creating a new CloudProjectCompute\n   *  @param    {Object}  options.infrastructure\n   *                      Options of the CloudProjectCompute infrastructure\n   *  @param    {Object}  options.volumes\n   *                      Options of the CloudProjectCompute volumes\n   */\n  var ComputeFactory = function () {\n    return function CloudProjectComputeFactory(optionsParam) {\n      var options = optionsParam;\n\n      if (!options) {\n        options = {};\n      }\n\n      this.serviceName = options.serviceName || null;\n      this.infrastructure = new CloudProjectComputeInfrastructureFactory(angular.extend(options.infrastructure || {}, {\n        serviceName: this.serviceName\n      }));\n      this.volumes = new CloudProjectComputeVolumesFactory(angular.extend(options.volumes || {}, {\n        serviceName: this.serviceName\n      }));\n    };\n  }(); // /////////////////////////////\n  // /         METHODS          //\n  // /////////////////////////////\n\n  /**\n   *  Prepare object to json encode function to avoid function being encoded\n   */\n\n\n  ComputeFactory.prototype.prepareToJson = function () {\n    return {\n      infrastructure: this.infrastructure.prepareToJson()\n    };\n  };\n\n  return ComputeFactory;\n}]);",null]}