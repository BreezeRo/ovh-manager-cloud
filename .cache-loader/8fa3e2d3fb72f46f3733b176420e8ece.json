{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/zone/iplb-zone-delete.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/zone/iplb-zone-delete.controller.js","mtime":1539717142229},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerZoneDeleteCtrl =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerZoneDeleteCtrl.$inject = [\"$q\", \"$stateParams\", \"CloudMessage\", \"CloudNavigation\", \"ControllerHelper\", \"IpLoadBalancerZoneDeleteService\"];\n\n  function IpLoadBalancerZoneDeleteCtrl($q, $stateParams, CloudMessage, CloudNavigation, ControllerHelper, IpLoadBalancerZoneDeleteService) {\n    _classCallCheck(this, IpLoadBalancerZoneDeleteCtrl);\n\n    this.$q = $q;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.ControllerHelper = ControllerHelper;\n    this.IpLoadBalancerZoneDeleteService = IpLoadBalancerZoneDeleteService;\n    this.serviceName = $stateParams.serviceName;\n    this.initLoaders();\n    this.initModel();\n  }\n\n  _createClass(IpLoadBalancerZoneDeleteCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.previousState = this.CloudNavigation.getPreviousState();\n      this.zones.load();\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      var _this = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = true;\n      this.CloudMessage.flushChildMessage();\n      return this.IpLoadBalancerZoneDeleteService.deleteZones(this.serviceName, this.model.zones.value).then(function () {\n        _this.previousState.go();\n      }).finally(function () {\n        _this.saving = false;\n      });\n    }\n  }, {\n    key: \"getDeletableZoneCount\",\n    value: function getDeletableZoneCount() {\n      return _.filter(this.zones.data, function (zone) {\n        return zone.selectable.value !== false;\n      }).length;\n    }\n  }, {\n    key: \"isLoading\",\n    value: function isLoading() {\n      return this.saving || this.zones.loading;\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this2 = this;\n\n      this.zones = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.IpLoadBalancerZoneDeleteService.getDeletableZones(_this2.serviceName);\n        }\n      });\n    }\n  }, {\n    key: \"initModel\",\n    value: function initModel() {\n      this.model = {\n        zones: {\n          value: []\n        }\n      };\n    }\n  }]);\n\n  return IpLoadBalancerZoneDeleteCtrl;\n}();\n\nangular.module('managerApp').controller('IpLoadBalancerZoneDeleteCtrl', IpLoadBalancerZoneDeleteCtrl);",null]}