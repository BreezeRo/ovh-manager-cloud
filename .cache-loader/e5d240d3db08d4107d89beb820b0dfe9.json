{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/docs/docs.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/docs/docs.service.js","mtime":1539717142401},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DocsService =\n/*#__PURE__*/\nfunction () {\n  DocsService.$inject = [\"$translate\", \"TranslateService\", \"TARGET\", \"DOCS_ALL_GUIDES\", \"DOCS_HOMEPAGE_GUIDES\"];\n\n  function DocsService($translate, TranslateService, TARGET, DOCS_ALL_GUIDES, DOCS_HOMEPAGE_GUIDES) {\n    _classCallCheck(this, DocsService);\n\n    this.$translate = $translate;\n    this.TranslateService = TranslateService;\n    this.TARGET = TARGET;\n    this.DOCS_ALL_GUIDES = DOCS_ALL_GUIDES;\n    this.DOCS_HOMEPAGE_GUIDES = DOCS_HOMEPAGE_GUIDES;\n  }\n\n  _createClass(DocsService, [{\n    key: \"getDomainOfGuides\",\n    value: function getDomainOfGuides() {\n      if (this.TARGET === 'US') {\n        return 'US';\n      }\n\n      var locale = this.TranslateService.getGeneralLanguage();\n\n      if (locale === 'fr') {\n        return 'FR';\n      }\n\n      return 'EN';\n    }\n  }, {\n    key: \"getAllGuidesLink\",\n    value: function getAllGuidesLink() {\n      var userLocale = this.TranslateService.getUserLocale().toUpperCase();\n      var domain = this.getDomainOfGuides();\n      return _.get(this.DOCS_ALL_GUIDES, userLocale, _.get(this.DOCS_ALL_GUIDES, domain, this.DOCS_ALL_GUIDES.EN));\n    }\n  }, {\n    key: \"getGuidesOfSection\",\n    value: function getGuidesOfSection(section) {\n      var _this = this;\n\n      var userLocale = this.TranslateService.getUserLocale().toUpperCase();\n      var domain = this.getDomainOfGuides();\n\n      var sectionContent = _.get(this.DOCS_HOMEPAGE_GUIDES, \"\".concat(userLocale, \".\").concat(section), this.DOCS_HOMEPAGE_GUIDES[domain][section]);\n\n      sectionContent.list = _.map(sectionContent.list, function (guide) {\n        _.set(guide, 'text', _this.$translate.instant(guide.text));\n\n        return guide;\n      });\n      return sectionContent;\n    }\n  }]);\n\n  return DocsService;\n}();\n\nangular.module('managerApp').service('DocsService', DocsService);",null]}