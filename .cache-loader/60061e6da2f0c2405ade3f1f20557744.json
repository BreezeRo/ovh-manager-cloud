{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/veeam/vps-veeam.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/veeam/vps-veeam.controller.js","mtime":1539717142305},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VpsVeeamCtrl {\n  constructor($scope, $stateParams, $translate, CloudMessage, ControllerHelper, VpsActionService,\n    VpsService) {\n    this.$scope = $scope;\n    this.serviceName = $stateParams.serviceName;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.serviceName = $stateParams.serviceName;\n    this.VpsActionService = VpsActionService;\n    this.VpsService = VpsService;\n\n    this.loaders = {\n      init: false,\n      checkOrder: false,\n      polling: false,\n      veeamTab: false,\n    };\n\n    this.vps = {\n      hasVeeam: false,\n      canOrder: false,\n    };\n  }\n\n  initLoaders() {\n    this.veeam = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.getVeeam(this.serviceName),\n    });\n    this.veeamTab = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.getTabVeeam(this.serviceName, 'available', true)\n        .then(data => data.map(id => ({ id }))),\n    });\n    this.vps = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.getSelectedVps(this.serviceName),\n    });\n  }\n\n  load() {\n    this.veeam.load().then(() => {\n      if (this.veeam.data.state !== 'disabled') {\n        this.veeamTab.load();\n        this.loadRestorePoint();\n      } else {\n        this.vps.load();\n      }\n    });\n  }\n\n  $onInit() {\n    this.initLoaders();\n    this.load();\n    this.$scope.$on('tasks.pending', (event, opt) => {\n      if (opt === this.serviceName) {\n        this.loaders.polling = true;\n      }\n    });\n    this.$scope.$on('tasks.success', (event, opt) => {\n      if (opt === this.serviceName) {\n        this.loaders.polling = false;\n        this.load();\n      }\n    });\n  }\n\n  loadRestorePoint() {\n    this.veeamTab.loading = true;\n    this.VpsService.getTabVeeam(this.serviceName, 'restoring', false)\n      .then((data) => {\n        if (data.length) {\n          this.veeam.data.state = 'MOUNTING';\n        }\n      })\n      .catch(err => this.CloudMessage.error(err))\n      .finally(() => { this.veeamTab.loading = false; });\n  }\n\n  restore(restorePoint) {\n    this.VpsActionService.restore(this.serviceName, restorePoint);\n  }\n\n  mount(restorePoint) {\n    this.VpsActionService.mount(this.serviceName, restorePoint);\n  }\n\n  unmount(restorePoint) {\n    this.VpsActionService.unmount(this.serviceName, restorePoint);\n  }\n}\n\nangular.module('managerApp').controller('VpsVeeamCtrl', VpsVeeamCtrl);\n"]}