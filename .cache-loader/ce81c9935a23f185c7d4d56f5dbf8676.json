{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cda/pool/list/cda-pool-list.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cda/pool/list/cda-pool-list.controller.js","mtime":1539717141939},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp')\n  .controller('CdaPoolListCtrl', function ($q, $stateParams, $uibModal, $translate, OvhApiDedicatedCeph, CloudMessage) {\n    const self = this;\n\n    self.loading = false;\n\n    self.datas = {\n      pools: undefined,\n    };\n\n    self.modals = {\n      add: {\n        templateUrl: 'app/cda/pool/add/cda-pool-add.html',\n        controller: 'CdaPoolAddCtrl',\n      },\n      remove: {\n        templateUrl: 'app/cda/pool/delete/cda-pool-delete.html',\n        controller: 'CdaPoolDeleteCtrl',\n      },\n    };\n\n    function initPools() {\n      OvhApiDedicatedCeph.Pool().v6().resetAllCache();\n\n      return OvhApiDedicatedCeph.Pool().v6().query({\n        serviceName: $stateParams.serviceName,\n      }).$promise.then((pools) => {\n        self.datas.pools = pools;\n        return pools;\n      });\n    }\n\n    function displayError(error) {\n      CloudMessage.error([$translate.instant('ceph_common_error'), (error.data && error.data.message) || ''].join(' '));\n    }\n\n    function init() {\n      self.loading = true;\n      initPools()\n        .catch((error) => {\n          displayError(error);\n        }).finally(() => {\n          self.loading = false;\n        });\n    }\n\n    self.openAddModal = function () {\n      self.openModal(self.modals.add.templateUrl, self.modals.add.controller);\n    };\n\n    self.openDeleteModal = function (pool) {\n      self.openModal(self.modals.remove.templateUrl, self.modals.remove.controller, { pool });\n    };\n\n    self.openModal = function (template, controller, params) {\n      const modal = $uibModal.open({\n        windowTopClass: 'cui-modal',\n        templateUrl: template,\n        controller,\n        controllerAs: controller,\n        resolve: {\n          items: () => params,\n        },\n      });\n\n      modal.result.then(() => {\n        initPools();\n      });\n    };\n\n    init();\n  });\n"]}