{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/privateNetwork/dialog/cloud-project-compute-infrastructure-privateNetwork-dialog-uniqueVlanId.directive.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/privateNetwork/dialog/cloud-project-compute-infrastructure-privateNetwork-dialog-uniqueVlanId.directive.js","mtime":1539717141997},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').directive('uniqueVlanId', [\"$q\", \"$stateParams\", \"OvhApiCloudProjectNetworkPrivate\", function ($q, $stateParams, OvhApiCloudProjectNetworkPrivate) {\n  return {\n    require: 'ngModel',\n    restrict: 'A',\n    link: function link(scope, elm, attrs, ngModel) {\n      _.set(ngModel, '$asyncValidators.uniqueVlanId', function (value) {\n        if (ngModel.$isEmpty(value)) {\n          return $q.when();\n        }\n\n        var defer = $q.defer();\n        OvhApiCloudProjectNetworkPrivate.v6().query({\n          serviceName: $stateParams.projectId\n        }).$promise.then(function (networks) {\n          if (_.find(networks, {\n            vlanId: value\n          })) {\n            defer.reject();\n          } else {\n            defer.resolve();\n          }\n        }, function () {\n          defer.resolve();\n        });\n        return defer.promise;\n      });\n    }\n  };\n}]);",null]}