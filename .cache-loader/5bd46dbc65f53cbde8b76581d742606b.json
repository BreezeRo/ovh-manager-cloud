{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/ssh/cloud-project-compute-ssh.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/ssh/cloud-project-compute-ssh.controller.js","mtime":1539717142036},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudProjectComputeSshCtrl {\n  constructor(OvhApiCloudProjectSshKey, CloudProjectSSHKeyService, $translate,\n    ControllerHelper, CloudMessage, $stateParams, ovhDocUrl) {\n    this.OvhApiCloudProjectSshKey = OvhApiCloudProjectSshKey;\n    this.CloudProjectSSHKeyService = CloudProjectSSHKeyService;\n    this.$translate = $translate;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.$stateParams = $stateParams;\n    this.ovhDocUrl = ovhDocUrl;\n\n    this.serviceName = $stateParams.projectId;\n    this.addSshKeyForm = null;\n    this.searchSshKeysForm = null;\n\n    this.table = {\n      sshKeysFilter: [],\n    };\n    this.toggle = {\n      openAddSsh: false,\n      sshDeleteId: null,\n    };\n    this.order = {\n      by: 'name',\n      reverse: false,\n    };\n    this.search = null;\n  }\n\n  $onInit() {\n    this.initLoaders();\n\n    this.getSshKeys();\n    this.initGuides();\n    this.initNewSshKey();\n  }\n\n  initLoaders() {\n    this.createKey = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.CloudProjectSSHKeyService.createSSHKey(\n        this.serviceName,\n        this.sshKey,\n      ),\n      errorHandler: err => this.CloudMessage.error([this.$translate.instant('cpc_ssh_add_submit_error'), (err.data && err.data.message) || ''].join(' ')),\n      successHandler: () => {\n        this.toggleAddSshKey();\n        this.getSshKeys(true);\n        this.CloudMessage.success(this.$translate.instant('cpc_ssh_add_submit_success'));\n      },\n    });\n\n    this.keys = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.CloudProjectSSHKeyService.getSSHKeys(this.serviceName),\n      errorHandler: err => this.CloudMessage.error([this.$translate.instant('cpc_ssh_error'), (err.data && err.data.message) || ''].join(' ')),\n      successHandler: () => this.filterSshKeys(),\n    });\n  }\n\n  getSshKeys(clearCache) {\n    if (this.keys.loading) {\n      return;\n    }\n    this.toggle.sshDeleteId = null;\n    if (clearCache) {\n      this.OvhApiCloudProjectSshKey.v6().resetQueryCache();\n    }\n    this.keys.load();\n  }\n\n  postSshKey() {\n    if (this.createKey.loading) {\n      return;\n    }\n    const notUnique = _.find(this.keys.data, sshkey => sshkey.name === this.sshKey.name);\n    if (notUnique) {\n      this.CloudMessage.error(this.$translate.instant('cpc_ssh_add_submit_name_error'));\n      return;\n    }\n    this.createKey.load();\n  }\n\n  openDeleteSshKey(sshKey) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/cloud/project/compute/ssh/delete/compute-ssh-delete.html',\n        controller: 'CloudProjectComputeSshDeleteCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => this.serviceName,\n          sshKey: () => sshKey,\n        },\n      },\n      successHandler: () => {\n        this.getSshKeys(true);\n        this.CloudMessage.success(this.$translate.instant('cpc_ssh_delete_success'));\n      },\n      errorHandler: err => this.CloudMessage.error([this.$translate.instant('cpc_ssh_delete_error'), (err.data && err.data.message) || ''].join(' ')),\n    });\n  }\n\n  initNewSshKey() {\n    this.sshKey = {\n      name: null,\n      publicKey: null,\n    };\n  }\n\n  initGuides() {\n    this.guides = {\n      create: this.ovhDocUrl.getDocUrl('g1769.creating_ssh_keys'),\n      add: this.ovhDocUrl.getDocUrl('g1924.configuring_additionnal_ssh_key'),\n      change: this.ovhDocUrl.getDocUrl('g2069.replacing_your_lost_ssh_key_pair'),\n    };\n  }\n\n  filterSshKeys() {\n    if (this.searchSshKeysForm && this.searchSshKeysForm.$valid) {\n      const filteredKeys = _.filter(\n        this.keys.data,\n        sshKey => this.isSshKeyMatchSearchCriterias(sshKey),\n      );\n\n      this.table.sshKeysFilter = filteredKeys;\n\n      if (this.table.sshKeysFilter.length) {\n        this.orderBy();\n      }\n    }\n  }\n\n  isSshKeyMatchSearchCriterias(sshKey) {\n    if (this.search && sshKey.name) {\n      return sshKey.name.toLowerCase().indexOf(this.search.toLowerCase()) !== -1;\n    }\n\n    return true;\n  }\n\n  toggleAddSshKey() {\n    if (this.toggle.openAddSsh) {\n      this.initNewSshKey();\n    }\n    this.toggle.openAddSsh = !this.toggle.openAddSsh;\n  }\n\n  orderBy(by) {\n    if (by) {\n      if (this.order.by === by) {\n        this.order.reverse = !this.order.reverse;\n      } else {\n        this.order.by = by;\n      }\n    }\n  }\n\n  static selectSshKey(id, active) {\n    if (active) {\n      setTimeout(() => {\n        const sshKeyObject = $(`#sshkey_${id}`);\n        const areaHeight = sshKeyObject.prop('scrollHeight');\n        sshKeyObject.height(areaHeight).select();\n      }, 0);\n    }\n  }\n}\n\nangular.module('managerApp').controller('CloudProjectComputeSshCtrl', CloudProjectComputeSshCtrl);\n"]}