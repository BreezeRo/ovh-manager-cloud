{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/image.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/image.service.js","mtime":1539717141977},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var cloudApplicationList = ['docker', 'plesk', 'kubernetes', 'swarm', 'cozycloud', 'wordpress', 'prestashop', 'lamp', 'cassandra', 'hadoop', 'mongodb', 'elasticsearch', 'gitlab', 'cpanel', 'spark', 'postgre', 'owncloud', 'sqlserver', 'ansible', 'rancheros', 'routeros', 'joomla', 'drupal', 'mariadb', 'kafka', 'hbase', 'marathon', 'mesos', 'pfsense', 'opensuse', 'dcos', 'openvpn', 'vestacp', 'virtualmin', 'datascience', 'deeplearning', 'rstudio', 'minikube'];\n\n  var CloudImageService =\n  /*#__PURE__*/\n  function () {\n    function CloudImageService() {\n      _classCallCheck(this, CloudImageService);\n    }\n\n    _createClass(CloudImageService, [{\n      key: \"groupImagesByType\",\n\n      /* eslint-disable no-nested-ternary */\n      value: function groupImagesByType(images, imagesTypes) {\n        var region = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var filteredImages = this.constructor.getImagesByType(images, imagesTypes, region);\n        var groupedImages = {};\n\n        _.forEach(filteredImages, function (list, type) {\n          groupedImages[type] = _.groupBy(list, 'distribution');\n\n          _.forEach(groupedImages[type], function (version, distribution) {\n            groupedImages[type][distribution] = _.uniq(_.forEach(version, function (image) {\n              delete image.region; // eslint-disable-line\n\n              delete image.id; // eslint-disable-line\n            }), 'name').sort(function (image1, image2) {\n              return image1.name > image2.name ? -1 : image1.name < image2.name ? 1 : 0;\n            });\n          });\n        });\n\n        return groupedImages;\n      }\n      /* eslint-enable no-nested-ternary */\n\n    }], [{\n      key: \"augmentImage\",\n      value: function augmentImage(image) {\n        if (!image) {\n          return null;\n        }\n\n        var augmentedImage = _.cloneDeep(image);\n\n        if (_.includes(augmentedImage.tags, 'application')) {\n          augmentedImage.apps = true;\n          augmentedImage.applications = _.intersection(augmentedImage.tags, cloudApplicationList);\n        } else {\n          augmentedImage.apps = false;\n        }\n\n        if (image.flavorType) {\n          augmentedImage.flavorType = image.flavorType.split(',');\n        }\n\n        return augmentedImage;\n      }\n    }, {\n      key: \"getImageTypes\",\n      value: function getImageTypes(images) {\n        return _.uniq(_.map(images, 'type'));\n      }\n    }, {\n      key: \"getImagesByType\",\n      value: function getImagesByType(images, imagesTypes) {\n        var region = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var filteredImages = {};\n        var filter = {\n          apps: false,\n          status: 'active'\n        };\n\n        if (_.isString(region)) {\n          filter.region = region;\n        }\n\n        _.forEach(imagesTypes, function (imageType) {\n          filter.type = imageType;\n          filteredImages[imageType] = _.filter(_.cloneDeep(images), filter);\n        });\n\n        return filteredImages;\n      }\n    }, {\n      key: \"getApps\",\n      value: function getApps(images) {\n        var region = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var filter = {\n          apps: true,\n          status: 'active'\n        };\n\n        if (_.isString(region)) {\n          _.set(filter, 'region', region);\n        }\n\n        return _.filter(_.cloneDeep(images), filter);\n      }\n    }, {\n      key: \"isSnapshot\",\n      value: function isSnapshot(image) {\n        return _.get(image, 'visibility', '') === 'private';\n      }\n    }]);\n\n    return CloudImageService;\n  }();\n\n  angular.module('managerApp').service('CloudImageService', CloudImageService);\n})();",null]}