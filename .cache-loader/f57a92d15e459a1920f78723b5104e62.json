{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/modal/cipher/iplb-cipher-change.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/modal/cipher/iplb-cipher-change.controller.js","mtime":1539717142210},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerCipherChangeCtrl {\n  constructor($uibModalInstance, serviceName, ControllerHelper, IpLoadBalancerCipherService) {\n    this.$uibModalInstance = $uibModalInstance;\n\n    this.serviceName = serviceName;\n    this.ControllerHelper = ControllerHelper;\n\n    this.IpLoadBalancerCipherService = IpLoadBalancerCipherService;\n\n    this.cipher = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.IpLoadBalancerCipherService.getCipher(this.serviceName),\n      successHandler: () => { this.model.cipherType.value = this.cipher.data.type; },\n    });\n\n    this.cipherTypes = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.IpLoadBalancerCipherService.getCipherTypes(this.serviceName),\n    });\n\n    this.model = {\n      cipherType: {\n        value: '',\n      },\n    };\n  }\n\n  $onInit() {\n    this.cipher.load();\n    this.cipherTypes.load();\n  }\n\n  confirm() {\n    this.saving = true;\n    return this.IpLoadBalancerCipherService\n      .updateCipher(this.serviceName, this.model.cipherType.value)\n      .then(response => this.$uibModalInstance.close(response))\n      .catch(response => this.$uibModalInstance.dismiss(response))\n      .finally(() => {\n        this.saving = false;\n      });\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n\n  isModalLoading() {\n    return this.cipher.loading || this.cipherTypes.loading || this.saving;\n  }\n}\n\nangular.module('managerApp').controller('IpLoadBalancerCipherChangeCtrl', IpLoadBalancerCipherChangeCtrl);\n"]}