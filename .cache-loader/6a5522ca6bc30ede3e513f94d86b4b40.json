{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/follow/streams-follow.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/follow/streams-follow.controller.js","mtime":1539717142151},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsStreamsFollowCtrl {\n  constructor($scope, $stateParams, $translate, ControllerHelper, UrlHelper, CloudMessage,\n    LogsStreamsService, LogsStreamsFollowService, LogsConstants) {\n    this.$scope = $scope;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.ControllerHelper = ControllerHelper;\n    this.UrlHelper = UrlHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsStreamsService = LogsStreamsService;\n    this.LogsStreamsFollowService = LogsStreamsFollowService;\n    this.LogsConstants = LogsConstants;\n\n    this.initLoaders();\n\n    $scope.$on('$destroy', () => {\n      this.closeConnection();\n    });\n  }\n\n  initLoaders() {\n    this.stream = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsStreamsService\n        .getAapiStream(this.$stateParams.serviceName, this.$stateParams.streamId)\n        .then((stream) => {\n          this.LogsStreamsFollowService.openConnection(stream);\n          return stream;\n        }),\n    });\n    this.stream.load();\n\n    this.testClientUrls = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsStreamsFollowService\n        .getTestClientUrls(this.$stateParams.serviceName)\n        .then((serviceInfo) => {\n          this.rfc5424Url = this.UrlHelper.constructor\n            .findUrl(serviceInfo, this.LogsConstants.RFC_URL, false);\n          this.ltsvUrl = this.UrlHelper.constructor\n            .findUrl(serviceInfo, this.LogsConstants.LTSV_URL, false);\n          this.gelfUrl = this.UrlHelper.constructor\n            .findUrl(serviceInfo, this.LogsConstants.GELF_URL, false);\n        }),\n    });\n    this.testClientUrls.load();\n  }\n\n  getMessages() {\n    return this.LogsStreamsFollowService.getMessages();\n  }\n\n  getAlertType(level) {\n    return this.LogsStreamsFollowService.getAlertType(level);\n  }\n\n  getAlertLabel(level) {\n    return this.LogsStreamsFollowService.getAlertLabel(level);\n  }\n\n  closeConnection() {\n    this.CloudMessage.flushChildMessage();\n    this.LogsStreamsFollowService.closeConnection();\n  }\n\n  openConnection() {\n    this.CloudMessage.flushChildMessage();\n    this.LogsStreamsFollowService.openConnection(this.stream.data);\n  }\n\n  isConnectionClosed() {\n    return this.LogsStreamsFollowService.isConnectionClosed();\n  }\n\n  isWaitingForMessages() {\n    return this.LogsStreamsFollowService.isWaitingForMessages();\n  }\n\n  copyAddress() {\n    this.CloudMessage.flushChildMessage();\n    this.LogsStreamsFollowService.copyWebSocketAddress(this.stream.data);\n  }\n\n  testFlow(type) {\n    switch (type) {\n      case this.LogsStreamsFollowService.testTypeEnum.GELF:\n        this.LogsStreamsFollowService.copyGELCommandLine(this.stream.data, this.gelfUrl);\n        break;\n      case this.LogsStreamsFollowService.testTypeEnum.LTSV:\n        this.LogsStreamsFollowService.copyLTSVCommandLine(this.stream.data, this.ltsvUrl);\n        break;\n      case this.LogsStreamsFollowService.testTypeEnum.RFC5424:\n        this.LogsStreamsFollowService.copyRFCCommandLine(this.stream.data, this.rfc5424Url);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getLastEvent() {\n    return this.LogsStreamsFollowService.getLastEvent();\n  }\n\n  getTotalMessages() {\n    return this.LogsStreamsFollowService.getTotalMessages();\n  }\n}\n\nangular.module('managerApp').controller('LogsStreamsFollowCtrl', LogsStreamsFollowCtrl);\n"]}