{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/vps-action.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/vps-action.service.js","mtime":1539717142307},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsActionService =\n/*#__PURE__*/\nfunction () {\n  VpsActionService.$inject = [\"ControllerHelper\"];\n\n  function VpsActionService(ControllerHelper) {\n    _classCallCheck(this, VpsActionService);\n\n    this.ControllerHelper = ControllerHelper;\n  }\n\n  _createClass(VpsActionService, [{\n    key: \"rescue\",\n    value: function rescue(_serviceName) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/password/vps-password.html',\n          controller: 'VpsPasswordCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"reboot\",\n    value: function reboot(_serviceName2) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/reboot/vps-reboot.html',\n          controller: 'VpsRebootCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName2;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"reinstall\",\n    value: function reinstall(_serviceName3) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/reinstall/vps-reinstall.html',\n          controller: 'VpsReinstallCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName3;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"kvm\",\n    value: function kvm(_serviceName4, _noVNC) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/kvm/vps-kvm.html',\n          controller: 'VpsKvmCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName4;\n            },\n            noVNC: function noVNC() {\n              return _noVNC;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"monitoringSla\",\n    value: function monitoringSla(_serviceName5, _state, _preview) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/monitoring-sla/vps-monitoring-sla.html',\n          controller: 'VpsMonitoringSlaCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName5;\n            },\n            preview: function preview() {\n              return _preview || false;\n            },\n            state: function state() {\n              return _state;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"displayIps\",\n    value: function displayIps(_serviceName6) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/display-ips/vps-display-ips.html',\n          controller: 'VpsDisplayIpsCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName6;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"reverseDns\",\n    value: function reverseDns(_serviceName7) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/shortcut/reverse-dns/vps-reverse-dns.html',\n          controller: 'VpsReverseDnsCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName7;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"deleteSecondaryDns\",\n    value: function deleteSecondaryDns(_serviceName8, _domain) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/secondary-dns/delete-secondary-dns.html',\n          controller: 'DeleteSecondaryDnsCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName8;\n            },\n            domain: function domain() {\n              return _domain;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"addSecondaryDns\",\n    value: function addSecondaryDns(_serviceName9) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/secondary-dns/add-secondary-dns.html',\n          controller: 'AddSecondaryDnsCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName9;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"deleteBackupStorage\",\n    value: function deleteBackupStorage(_serviceName10, _access) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/backup-storage/delete-backup-storage.html',\n          controller: 'DeleteBackupStorageCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName10;\n            },\n            access: function access() {\n              return _access;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"addBackupStorage\",\n    value: function addBackupStorage(_serviceName11) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/backup-storage/add-backup-storage.html',\n          controller: 'AddBackupStorageCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName11;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"resetPasswordBackupStorage\",\n    value: function resetPasswordBackupStorage(_serviceName12) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/backup-storage/password-backup-storage.html',\n          controller: 'PasswordBackupStorageCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName12;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"editBackupStorage\",\n    value: function editBackupStorage(_serviceName13, _row) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/backup-storage/edit-backup-storage.html',\n          controller: 'EditBackupStorageCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName13;\n            },\n            row: function row() {\n              return _row;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"restore\",\n    value: function restore(_serviceName14, restorePoint) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/veeam/restore/vps-restore.html',\n          controller: 'VpsRestoreCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName14;\n            },\n            RestorePoint: function RestorePoint() {\n              return restorePoint;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(_serviceName15, restorePoint) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/veeam/mount/vps-mount.html',\n          controller: 'VpsMountCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName15;\n            },\n            RestorePoint: function RestorePoint() {\n              return restorePoint;\n            },\n            mount: function mount() {\n              return true;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount(_serviceName16, restorePoint) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/veeam/mount/vps-mount.html',\n          controller: 'VpsMountCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName16;\n            },\n            RestorePoint: function RestorePoint() {\n              return restorePoint;\n            },\n            mount: function mount() {\n              return false;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"orderAdditionalDisk\",\n    value: function orderAdditionalDisk() {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/additional-disk/order-disk.html',\n          controller: 'OrderAdditionalDiskCtrl',\n          controllerAs: '$ctrl'\n        }\n      });\n    }\n  }, {\n    key: \"deleteSnapshot\",\n    value: function deleteSnapshot(_serviceName17) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/snapshot/snapshot-delete.html',\n          controller: 'VpsDeleteSnapshotCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName17;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"takeSnapshot\",\n    value: function takeSnapshot(_serviceName18) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/snapshot/snapshot-take.html',\n          controller: 'VpsTakeSnapshotCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName18;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"restoreSnapshot\",\n    value: function restoreSnapshot(_serviceName19) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/snapshot/snapshot-restore.html',\n          controller: 'VpsRestoreSnapshotCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName19;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"terminateOption\",\n    value: function terminateOption(_serviceName20, optionName) {\n      return this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/vps/modal/option/vps-option-terminate.html',\n          controller: 'VpsOptionTerminateCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _serviceName20;\n            },\n            vpsOption: function vpsOption() {\n              return optionName;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"terminateAdditionalDiskOption\",\n    value: function terminateAdditionalDiskOption(serviceName) {\n      return this.terminateOption(serviceName, 'additionalDisk');\n    }\n  }, {\n    key: \"terminateBackupStorageOption\",\n    value: function terminateBackupStorageOption(serviceName) {\n      return this.terminateOption(serviceName, 'ftpBackup');\n    }\n  }, {\n    key: \"terminateSnapshotOption\",\n    value: function terminateSnapshotOption(serviceName) {\n      return this.terminateOption(serviceName, 'snapshot');\n    }\n  }, {\n    key: \"terminateVeeamOption\",\n    value: function terminateVeeamOption(serviceName) {\n      return this.terminateOption(serviceName, 'automatedBackup');\n    }\n  }, {\n    key: \"terminateWindows\",\n    value: function terminateWindows(serviceName) {\n      return this.terminateOption(serviceName, 'windows');\n    }\n  }]);\n\n  return VpsActionService;\n}();\n\nangular.module('managerApp').service('VpsActionService', VpsActionService);",null]}