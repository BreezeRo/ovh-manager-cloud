{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/inline-adder/inline-adder.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/inline-adder/inline-adder.controller.js","mtime":1539717142266},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar InlineAdderCtrl =\n/*#__PURE__*/\nfunction () {\n  InlineAdderCtrl.$inject = [\"$q\"];\n\n  function InlineAdderCtrl($q) {\n    _classCallCheck(this, InlineAdderCtrl);\n\n    this.$q = $q;\n  }\n\n  _createClass(InlineAdderCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.onAdd = this.onAdd || null;\n      this.onRemove = this.onRemove || null;\n      this.uniqueProperty = this.uniqueProperty || null;\n      this.loadingMap = {};\n    }\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      var _this = this;\n\n      var p = this.$q.resolve();\n\n      if (this.isLoading(item)) {\n        return p;\n      }\n\n      if (this.onAdd) {\n        this.setLoading(item, true);\n        p = this.onAdd({\n          item: item\n        }).finally(function () {\n          return _this.setLoading(item, false);\n        });\n      }\n\n      return p;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var _this2 = this;\n\n      var p = this.$q.resolve();\n\n      if (this.isLoading(item)) {\n        return p;\n      }\n\n      if (this.onRemove) {\n        this.setLoading(item, true);\n        p = this.onRemove({\n          item: item\n        }).finally(function () {\n          return _this2.setLoading(item, false);\n        });\n      }\n\n      return p;\n    }\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(item) {\n      if (!this.uniqueProperty) {\n        return item;\n      }\n\n      var up = this.uniqueProperty.split('.').reduce(function (prev, curr) {\n        return prev ? prev[curr] : undefined;\n      }, item);\n      return up;\n    }\n  }, {\n    key: \"isLoading\",\n    value: function isLoading(item) {\n      var uniqueProperty = this.getProperty(item);\n\n      if (this.loadingMap[uniqueProperty]) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(item, state) {\n      var uniqueProperty = this.getProperty(item);\n      this.loadingMap[uniqueProperty] = state;\n    }\n  }]);\n\n  return InlineAdderCtrl;\n}();\n\nangular.module('managerApp').controller('InlineAdderCtrl', InlineAdderCtrl);",null]}