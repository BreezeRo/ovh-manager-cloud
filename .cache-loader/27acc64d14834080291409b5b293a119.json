{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/billing/volume-list/billing-volume-list.component.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/billing/volume-list/billing-volume-list.component.controller.js","mtime":1539717142378},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp')\n  .controller('BillingVolumeListComponentCtrl', function ($filter, $q, $translate, $stateParams, DetailsPopoverService, OvhApiCloudProjectVolume, Toast, OvhApiMe) {\n    const self = this;\n    self.DetailsPopoverService = DetailsPopoverService;\n    self.volumeConsumptionDetails = [];\n    self.currencySymbol = '';\n    self.loading = false;\n    self.data = {};\n\n    function getVolumesDetails() {\n      return OvhApiCloudProjectVolume.v6().query({\n        serviceName: $stateParams.projectId,\n      }).$promise.then(volumes => volumes);\n    }\n\n    function updateVolumeConsumptionDetails(allProjectVolumes, volumeConsumptions) {\n      _.forEach(volumeConsumptions, (volumeConsumption) => {\n        const volumeConsumptionDetail = {};\n        volumeConsumptionDetail.totalPrice = `${volumeConsumption.totalPrice.toFixed(2)} ${self.currencySymbol}`;\n        volumeConsumptionDetail.volumeId = volumeConsumption.volumeId;\n        volumeConsumptionDetail.quantity = volumeConsumption.quantity.value;\n        volumeConsumptionDetail.region = volumeConsumption.region;\n        volumeConsumptionDetail.type = volumeConsumption.type;\n\n        volumeConsumptionDetail.amount = volumeConsumption.quantity.value;\n\n        const volumeDetail = _.find(allProjectVolumes, x => x.id === volumeConsumption.volumeId);\n        if (volumeDetail) {\n          volumeConsumptionDetail.name = volumeDetail.name;\n          volumeConsumptionDetail.size = volumeDetail.size;\n          volumeConsumptionDetail.status = volumeDetail.status;\n        } else {\n          volumeConsumptionDetail.name = volumeConsumption.volumeId;\n          volumeConsumptionDetail.status = 'deleted';\n        }\n\n        self.volumeConsumptionDetails.push(volumeConsumptionDetail);\n      });\n    }\n\n    function initVolumes() {\n      return getVolumesDetails()\n        .then(allProjectVolumes => updateVolumeConsumptionDetails(allProjectVolumes, self.volumes));\n    }\n\n    function initUserCurrency() {\n      return OvhApiMe.v6().get().$promise.then((me) => {\n        self.currencySymbol = me.currency.symbol;\n      });\n    }\n\n    self.$onInit = () => {\n      self.loading = true;\n\n      initUserCurrency()\n        .then(() => initVolumes())\n        .catch((err) => {\n          Toast.error([$translate.instant('cpb_error_message'), (err.data && err.data.message) || ''].join(' '));\n          $q.reject(err);\n        })\n        .finally(() => {\n          self.loading = false;\n        });\n    };\n  });\n"]}