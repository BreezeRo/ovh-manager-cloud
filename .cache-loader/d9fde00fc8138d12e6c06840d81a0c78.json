{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/rescue/cloud-project-compute-infrastructure-virtual-machine-rescue.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/rescue/cloud-project-compute-infrastructure-virtual-machine-rescue.controller.js","mtime":1539717142018},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class CloudProjectComputeInfrastructureVirtualmachineRescueCtrl {\n    constructor(\n      $scope, $stateParams, $uibModalInstance, $translate,\n      params, CloudMessage, CloudProjectComputeInfrastructureOrchestrator,\n      OvhApiCloudProjectImage, ServiceHelper,\n    ) {\n      this.$scope = $scope;\n      this.$stateParams = $stateParams;\n      this.$uibModalInstance = $uibModalInstance;\n      this.$translate = $translate;\n      this.params = params;\n      this.CloudMessage = CloudMessage;\n      this.CloudProjectComputeInfrastructureOrchestrator = CloudProjectComputeInfrastructureOrchestrator; // eslint-disable-line\n      this.OvhApiCloudProjectImage = OvhApiCloudProjectImage;\n      this.ServiceHelper = ServiceHelper;\n    }\n\n    $onInit() {\n      this.data = {\n        vm: this.params,\n        images: null,\n        selectedImage: null,\n      };\n      this.loaders = {\n        action: false,\n        images: false,\n      };\n\n      this.getImages();\n    }\n\n    rescueMode(enable) {\n      this.loaders.action = true;\n      return this.CloudProjectComputeInfrastructureOrchestrator.rescueVm(\n        this.data.vm, enable,\n        this.data.selectedImage,\n      )\n        .then((result) => {\n          const typeKey = !this.data.selectedImage || this.data.vm.image.type === 'linux' ? 'linux' : 'windows';\n          const pwdKey = this.data.selectedImage ? '' : 'pwd_';\n          const user = this.data.selectedImage ? this.data.selectedImage.user : 'root';\n          const messageName = `cpc_rescue_mode_success_${pwdKey}${typeKey}`;\n          this.CloudMessage.info({\n            textHtml: this.$translate.instant(messageName, {\n              vmName: this.data.vm.name,\n              user,\n              ip: this.data.vm.ipAddresses[0].ip,\n              pwd: _.get(result, 'adminPassword', ''),\n            }),\n          });\n        })\n        .catch(this.ServiceHelper.errorHandler('cpc_rescue_mode_error'))\n        .finally(() => {\n          this.loaders.action = false;\n          this.$uibModalInstance.close();\n        });\n    }\n\n    cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n\n    static isNonRescuableWithDefaultImage(vm) {\n      return vm.image && (vm.image.distribution === 'freebsd' || vm.image.type === 'windows');\n    }\n\n    getImages() {\n      this.loaders.images = true;\n\n      return this.OvhApiCloudProjectImage.v6().query({\n        serviceName: this.$stateParams.projectId,\n        flavorType: this.data.vm.type,\n        region: this.data.vm.region,\n      }).$promise.then((result) => {\n        this.data.images = _.filter(result, {\n          visibility: 'public',\n          type: this.data.vm.image ? this.data.vm.image.type : 'linux',\n        });\n        if (this.constructor.isNonRescuableWithDefaultImage(this.data.vm)) {\n          this.data.selectedImage = _.findLast(this.data.images, {\n            nameGeneric: this.data.vm.image.nameGeneric,\n          });\n        }\n      }).finally(() => {\n        this.loaders.images = false;\n      });\n    }\n  }\n\n  angular.module('managerApp').controller('CloudProjectComputeInfrastructureVirtualmachineRescueCtrl', CloudProjectComputeInfrastructureVirtualmachineRescueCtrl);\n})();\n"]}