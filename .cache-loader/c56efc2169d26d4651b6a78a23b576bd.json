{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/roles/logs-roles.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/roles/logs-roles.controller.js","mtime":1539717142140},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsRolesCtrl {\n  constructor($state, $stateParams, CloudMessage, ControllerHelper, LogsRolesService) {\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsRolesService = LogsRolesService;\n    this.CloudMessage = CloudMessage;\n    this.initLoaders();\n  }\n\n  initLoaders() {\n    this.quota = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsRolesService.getQuota(this.serviceName),\n    });\n\n    this.roles = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsRolesService.getRoles(this.serviceName),\n    });\n\n    this.roleOptions = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsRolesService.getSubscribedOptions(this.serviceName),\n    });\n\n    this.quota.load();\n    this.roles.load();\n    this.roleOptions.load();\n  }\n\n  add(info) {\n    this.CloudMessage.flushChildMessage();\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/dbaas/logs/detail/roles/add/logs-role-add.html',\n        controller: 'LogsRoleAddModalCtrl',\n        controllerAs: 'ctrl',\n        backdrop: 'static',\n        resolve: {\n          roleInfo: () => info,\n          options: () => this.roleOptions,\n          quota: () => this.quota,\n        },\n      },\n    }).then(() => this.initLoaders());\n  }\n\n  summary(info) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/dbaas/logs/detail/roles/overview/logs-role-overview.html',\n        controller: 'LogsRoleOverviewCtrl',\n        controllerAs: 'ctrl',\n        resolve: {\n          role: () => info,\n        },\n      },\n    });\n  }\n\n  showDeleteConfirm(info) {\n    this.CloudMessage.flushChildMessage();\n    this.LogsRolesService.deleteModal(\n      info,\n    ).then(() => {\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: () => this.LogsRolesService.deleteRole(this.serviceName, info)\n          .then(() => this.initLoaders())\n          .finally(() => this.ControllerHelper.scrollPageToTop()),\n      });\n      this.delete.load();\n    });\n  }\n\n  manageMembers(info) {\n    this.$state.go('dbaas.logs.detail.members', {\n      serviceName: this.serviceName,\n      roleId: info.roleId,\n    });\n  }\n\n  editPermissions(info) {\n    this.$state.go('dbaas.logs.detail.permissions', {\n      serviceName: this.serviceName,\n      roleId: info.roleId,\n    });\n  }\n}\n\nangular.module('managerApp').controller('LogsRolesCtrl', LogsRolesCtrl);\n"]}