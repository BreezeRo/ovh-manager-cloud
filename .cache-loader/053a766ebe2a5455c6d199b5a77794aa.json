{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-action.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-action.service.js","mtime":1539717142203},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerActionService {\n  constructor(ControllerHelper) {\n    this.ControllerHelper = ControllerHelper;\n  }\n\n  showFailoverIpDetail(serviceName) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/modal/failover-ip/iplb-failover-ip-detail.html',\n        controller: 'IpLoadBalancerFailoverIpDetailCtrl',\n        controllerAs: 'IpLoadBalancerFailoverIpDetailCtrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  showNatIpDetail(serviceName) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/modal/nat-ip/iplb-nat-ip-detail.html',\n        controller: 'IpLoadBalancerNatIpDetailCtrl',\n        controllerAs: 'IpLoadBalancerNatIpDetailCtrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  cipherChange(serviceName, successHandler) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/modal/cipher/iplb-cipher-change.html',\n        controller: 'IpLoadBalancerCipherChangeCtrl',\n        controllerAs: 'IpLoadBalancerCipherChangeCtrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n      successHandler,\n    });\n  }\n\n  deleteFrontend(serviceName, frontend) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/frontends/delete/iplb-frontends-delete.html',\n        controller: 'IpLoadBalancerFrontendDeleteCtrl',\n        controllerAs: 'IpLoadBalancerFrontendDeleteCtrl',\n        backdrop: 'static',\n        resolve: {\n          serviceName: () => serviceName,\n          frontend: () => frontend,\n        },\n      },\n    });\n  }\n\n  deleteFarm(serviceName, farm) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/serverFarm/delete/iplb-server-farm-delete.html',\n        controller: 'IpLoadBalancerServerFarmDeleteCtrl',\n        controllerAs: 'IpLoadBalancerServerFarmDeleteCtrl',\n        backdrop: 'static',\n        resolve: {\n          serviceName: () => serviceName,\n          farm: () => farm,\n        },\n      },\n    });\n  }\n\n  deleteServer(serviceName, farm, server) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/server/delete/iplb-server-delete.html',\n        controller: 'IpLoadBalancerServerDeleteCtrl',\n        controllerAs: 'IpLoadBalancerServerDeleteCtrl',\n        backdrop: 'static',\n        resolve: {\n          serviceName: () => serviceName,\n          farm: () => farm,\n          server: () => server,\n        },\n      },\n    });\n  }\n\n  updateCertificate(serviceName, ssl) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/sslCertificate/update/iplb-ssl-certificate-update.html',\n        controller: 'IpLoadBalancerSslCertificateUpdateCtrl',\n        controllerAs: 'IpLoadBalancerSslCertificateUpdateCtrl',\n        resolve: {\n          serviceName: () => serviceName,\n          ssl: () => ssl,\n        },\n      },\n    });\n  }\n\n  deleteCertificate(serviceName, ssl) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/sslCertificate/delete/iplb-ssl-certificate-delete.html',\n        controller: 'IpLoadBalancerSslCertificateDeleteCtrl',\n        controllerAs: 'IpLoadBalancerSslCertificateDeleteCtrl',\n        backdrop: 'static',\n        resolve: {\n          serviceName: () => serviceName,\n          ssl: () => ssl,\n        },\n      },\n    });\n  }\n}\n\nangular.module('managerApp').service('IpLoadBalancerActionService', IpLoadBalancerActionService);\n"]}