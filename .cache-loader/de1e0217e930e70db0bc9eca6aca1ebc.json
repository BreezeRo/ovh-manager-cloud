{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/kubernetes.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/kubernetes.service.js","mtime":1539717374575},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').service('Kubernetes', class Kubernetes {\n  constructor(\n    $q, $translate,\n    OvhApiCloudProject, OvhApiCloudProjectFlavor, OvhApiCloudProjectInstance,\n    OvhApiKube, OvhApiCloudProjectQuota,\n    KUBERNETES,\n  ) {\n    this.$q = $q;\n    this.$translate = $translate;\n    this.OvhApiCloudProject = OvhApiCloudProject;\n    this.OvhApiCloudProjectFlavor = OvhApiCloudProjectFlavor;\n    this.OvhApiCloudProjectInstance = OvhApiCloudProjectInstance;\n    this.OvhApiKube = OvhApiKube;\n    this.OvhApiCloudProjectQuota = OvhApiCloudProjectQuota;\n    this.KUBERNETES = KUBERNETES;\n  }\n\n  getKubernetesCluster(serviceName) {\n    return this.OvhApiKube.v6().get({ serviceName }).$promise;\n  }\n\n  getKubernetesServiceInfos(serviceName) {\n    return this.OvhApiKube.v6().getServiceInfos({ serviceName }).$promise;\n  }\n\n  getKubernetesConfig(serviceName) {\n    return this.OvhApiKube.v6().getKubeConfig({ serviceName }).$promise;\n  }\n\n  getAssociatedPublicCloudProjects(serviceName) {\n    return this.OvhApiKube.PublicCloud().Project().v6().query({ serviceName }).$promise;\n  }\n\n  getAssociatedInstance(projectId, instanceId) {\n    return this.OvhApiCloudProjectInstance\n      .v6()\n      .get({ serviceName: projectId, instanceId })\n      .$promise;\n  }\n\n  getProject(projectId) {\n    return this.OvhApiCloudProject.v6().get({ serviceName: projectId }).$promise;\n  }\n\n  getProjectQuota(serviceName) {\n    return this.OvhApiCloudProjectQuota\n      .v6()\n      .query({ serviceName })\n      .$promise;\n  }\n\n  getNodes(serviceName) {\n    return this.OvhApiKube.PublicCloud().Node().v6().query({ serviceName }).$promise;\n  }\n\n  addNode(serviceName, flavorName) {\n    return this.OvhApiKube.PublicCloud().Node().v6().save({ serviceName }, { flavorName }).$promise;\n  }\n\n  deleteNode(serviceName, nodeId) {\n    return this.OvhApiKube.PublicCloud().Node().v6().delete({ serviceName, nodeId }).$promise;\n  }\n\n  resetNodesCache() {\n    this.OvhApiKube.PublicCloud().Node().v6().resetCache();\n    this.OvhApiKube.PublicCloud().Node().v6().resetQueryCache();\n  }\n\n  getFlavors(serviceName) {\n    // Region is constant for now\n    return this.OvhApiCloudProjectFlavor\n      .v6()\n      .query({ serviceName, region: this.KUBERNETES.region })\n      .$promise;\n  }\n\n  getFlavorDetails(serviceName, flavorId) {\n    return this.OvhApiCloudProjectFlavor.get({ serviceName, flavorId }).$promise;\n  }\n\n  formatFlavor(flavor) {\n    return this.$translate.instant('kube_flavor', {\n      name: flavor.name.toUpperCase(),\n      cpuNumber: flavor.vcpus,\n      ramCapacity: flavor.ram / 1000,\n      diskCapacity: flavor.disk,\n    });\n  }\n});\n"]}