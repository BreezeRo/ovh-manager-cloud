{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/contracts/contracts.directive.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/contracts/contracts.directive.js","mtime":1539717142399},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').directive('contracts', () => ({\n  restrict: 'EA',\n  templateUrl: 'components/contracts/contracts.html',\n  scope: {\n    contracts: '=',\n    agree: '=contractsValidated',\n  },\n  controller() {\n    this.disabled = true;\n  },\n  controllerAs: 'ContractsCtrl',\n  bindToController: true,\n  link($scope, $elm, $attr, ContractsCtrl) {\n    _.set(ContractsCtrl, 'fullText', $attr.fullText === 'true' || $attr.fullText === undefined);\n\n    const scrollToOptions = {\n      easing: 'swing',\n      duration: '300',\n      offsetTop: '16',\n    };\n\n    /** AWESOME SCROLL* */\n    function init() {\n      $elm.find('.contracts-breadcrumb-navigate-previous').unbind('click');\n      $elm.find('.contracts-breadcrumb-navigate-next').unbind('click');\n      $elm.find('.contracts-list').unbind('scroll');\n      $elm.find('.contracts-menu').undelegate('a', 'click');\n\n      const topMenu = $elm.find('.contracts-menu');\n      let lastId = 'contract-0';\n      let menuItems = topMenu.find('a');\n      let scrollItems;\n      let initialOffSet;\n\n      _.set(ContractsCtrl, 'currentContract', _.first(ContractsCtrl.contracts));\n      _.set(ContractsCtrl, 'disabled', true);\n\n      // Fake Anchor\n      topMenu.delegate('a', 'click', function (e) {\n        const href = $(this).attr('data-fake-href');\n\n        $('.contracts-list').stop().scrollTo(href, scrollToOptions);\n\n        e.preventDefault();\n      });\n\n      $elm.find('.contracts-list').scroll((e) => {\n        // enable check box\n        const elem = $(e.currentTarget);\n\n\n        const elemHeight = elem.outerHeight();\n\n\n        const elemDiff = elem[0].scrollHeight - elem.scrollTop();\n\n        if ((elemDiff === elemHeight) || (elemDiff - elemHeight < 5)) {\n          $scope.$apply(() => {\n            _.set(ContractsCtrl, 'disabled', false);\n          });\n        }\n\n        // Get container scroll position\n        const fromTop = $elm.find('.contracts-list').height() / 2 + $elm.find('.contracts-list').offset().top;\n\n        if (scrollItems === undefined) {\n          scrollItems = menuItems.map(function () {\n            const item = $($(this).attr('data-fake-href'));\n            if (initialOffSet === undefined) {\n              initialOffSet = item.offset().top;\n            }\n            if (item.length) {\n              return item;\n            }\n            return null;\n          });\n        }\n\n        // Get id of current scroll item\n        let cur = scrollItems.map(function () {\n          if ($(this).offset().top <= fromTop) {\n            return this;\n          }\n          return null;\n        });\n\n        // Get the id of the current element\n        cur = cur[cur.length - 1];\n        const id = cur && cur.length ? cur[0].id : 'contract-0';\n        if (lastId !== id) {\n          lastId = id;\n          $scope.$apply(() => {\n            _.set(ContractsCtrl, 'currentContract', ContractsCtrl.contracts[id.split('-')[1]]);\n          });\n          menuItems.removeClass('active').parent().end().filter(`[data-fake-href=#${id}]`)\n            .addClass('active');\n        }\n      });\n\n      $elm.find('.contracts-breadcrumb-navigate-previous').click(() => {\n        if (lastId) {\n          $elm.find('.contracts-list').stop().scrollTo(`#contract-${parseInt(lastId.split('-')[1], 10) - 1}`, scrollToOptions);\n        }\n      });\n\n      $elm.find('.contracts-breadcrumb-navigate-next').click(() => {\n        if (lastId) {\n          $elm.find('.contracts-list').stop().scrollTo(`#contract-${parseInt(lastId.split('-')[1], 10) + 1}`, scrollToOptions);\n        }\n      });\n\n      menuItems.removeClass('active').parent().end().filter(`[data-fake-href=#${lastId}]`)\n        .addClass('active');\n      window.setTimeout(() => {\n        $elm.find('.contracts-list').stop().scrollTo(0);\n        menuItems = topMenu.find('a'); // because ngRepeat is not already here ;p\n      }, 300);\n    }\n\n    $scope.$watch(() => ContractsCtrl.contracts, (nv) => {\n      if (nv !== undefined) {\n        init();\n      }\n    });\n  },\n}));\n"]}