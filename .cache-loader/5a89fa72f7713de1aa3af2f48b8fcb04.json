{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/account/logs-account.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/account/logs-account.service.js","mtime":1539717142074},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsAccountService =\n/*#__PURE__*/\nfunction () {\n  LogsAccountService.$inject = [\"OvhApiDbaas\", \"LogsHelperService\", \"LogsConstants\"];\n\n  function LogsAccountService(OvhApiDbaas, LogsHelperService, LogsConstants) {\n    _classCallCheck(this, LogsAccountService);\n\n    this.UserApiService = OvhApiDbaas.Logs().User().v6();\n    this.LogsLexiService = OvhApiDbaas.Logs().v6();\n    this.LogsHelperService = LogsHelperService;\n    this.LogsConstants = LogsConstants;\n    this.initializePasswordRules();\n  }\n\n  _createClass(LogsAccountService, [{\n    key: \"getPasswordRules\",\n    value: function getPasswordRules(reset) {\n      if (reset) {\n        this.initializePasswordRules();\n      }\n\n      return this.passwordRules;\n    }\n  }, {\n    key: \"initializePasswordRules\",\n    value: function initializePasswordRules() {\n      var _this = this;\n\n      this.passwordRules = [{\n        message: 'logs_password_rule_length',\n        isValid: false,\n        isValidated: false,\n        validator: function validator(password) {\n          return password && password.length >= 12;\n        }\n      }, {\n        message: 'logs_password_rule_contains_number',\n        isValid: false,\n        isValidated: false,\n        validator: function validator(password) {\n          return password && password.match('.*[0-9].*');\n        }\n      }, {\n        message: 'logs_password_rule_contains_uppercase',\n        isValid: false,\n        isValidated: false,\n        validator: function validator(password) {\n          return password && password.match('.*[A-Z].*');\n        }\n      }, {\n        message: 'logs_password_rule_contains_lowercase',\n        isValid: false,\n        isValidated: false,\n        validator: function validator(password) {\n          return password && password.match('(?=.*[a-z])');\n        }\n      }, {\n        message: 'logs_password_rule_contains_special',\n        translateParams: {\n          specialCharacters: this.LogsConstants.PASSWORD_SPECIAL_CHARACTERS\n        },\n        isValid: false,\n        isValidated: false,\n        validator: function validator(password) {\n          return password && password.match(\".*[\".concat(_this.constructor.escapeRegExp(_this.LogsConstants.PASSWORD_SPECIAL_CHARACTERS), \"].*\"));\n        }\n      }];\n    }\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(serviceName, newPassword, isSetup) {\n      var _this2 = this;\n\n      return this.UserApiService.changePassword({\n        serviceName: serviceName\n      }, {\n        password: newPassword\n      }).$promise.then(function (operation) {\n        if (isSetup) {\n          _this2.resetAllCache();\n        }\n\n        var message = isSetup ? 'logs_password_setup_success' : 'logs_password_change_success';\n        return _this2.LogsHelperService.handleOperation(serviceName, operation.data || operation, message, {});\n      }).catch(function (err) {\n        return _this2.LogsHelperService.handleError(isSetup ? 'logs_password_setup_error' : 'logs_password_change_error', err, {});\n      });\n    }\n  }, {\n    key: \"resetAllCache\",\n    value: function resetAllCache() {\n      this.LogsLexiService.resetAllCache();\n    }\n  }], [{\n    key: \"escapeRegExp\",\n    value: function escapeRegExp(msg) {\n      return msg.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n  }]);\n\n  return LogsAccountService;\n}();\n\nangular.module('managerApp').service('LogsAccountService', LogsAccountService);",null]}