{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.service.js","mtime":1539717142184},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DeskaasService =\n/*#__PURE__*/\nfunction () {\n  DeskaasService.$inject = [\"OvhApiDeskaasService\", \"OvhApiMe\", \"deskaasSidebar\", \"DESKAAS_REFERENCES\"];\n\n  function DeskaasService(OvhApiDeskaasService, OvhApiMe, deskaasSidebar, DESKAAS_REFERENCES) {\n    _classCallCheck(this, DeskaasService);\n\n    this.OvhApiDeskaasService = OvhApiDeskaasService;\n    this.OvhApiMe = OvhApiMe;\n    this.deskaasSidebar = deskaasSidebar;\n    this.DESKAAS_REFERENCES = DESKAAS_REFERENCES;\n    this.OrderPlanOffers = [];\n  }\n\n  _createClass(DeskaasService, [{\n    key: \"getMe\",\n    value: function getMe() {\n      return this.OvhApiMe.v6().get().$promise;\n    }\n  }, {\n    key: \"fetchProductPlans\",\n    value: function fetchProductPlans(me) {\n      var _this = this;\n\n      // Use the catalog to get Product for deskaas\n      var promise = this.OvhApiDeskaasService.v6().getProducts({\n        ovhSubsidiary: me.ovhSubsidiary\n      }).$promise;\n      promise.then(function (catalog) {\n        var newOrderPlanOffers = {};\n        catalog.plans.forEach(function (catalogEntry) {\n          newOrderPlanOffers[catalogEntry.planCode] = {\n            planCode: catalogEntry.planCode,\n            priceInUcents: catalogEntry.details.pricings.default[0].priceInUcents,\n            productName: catalogEntry.invoiceName,\n            priceText: catalogEntry.details.pricings.default[0].price.text\n          };\n        });\n        _this.OrderPlanOffers = newOrderPlanOffers;\n      });\n      return promise;\n    }\n  }, {\n    key: \"getUpgradeOptions\",\n    value: function getUpgradeOptions(planCode) {\n      var _this2 = this;\n\n      var ref = [];\n      var curRef = this.DESKAAS_REFERENCES[planCode];\n\n      if (curRef) {\n        curRef.upgrades.forEach(function (upgrade) {\n          if (_this2.DESKAAS_REFERENCES[upgrade] && _this2.OrderPlanOffers[upgrade]) {\n            _this2.DESKAAS_REFERENCES[upgrade].priceText = _this2.OrderPlanOffers[upgrade].priceText;\n            ref.push(_this2.DESKAAS_REFERENCES[upgrade]);\n          }\n        });\n      } else {\n        console.log(\"Error: PlanCode \".concat(planCode, \" not known\"));\n      }\n\n      return ref;\n    }\n  }, {\n    key: \"getDetails\",\n    value: function getDetails(serviceName) {\n      var _this3 = this;\n\n      return this.OvhApiDeskaasService.v6().getDetails({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        _this3.deskaasSidebar.updateItem(response);\n\n        return response;\n      });\n    }\n  }]);\n\n  return DeskaasService;\n}();\n\nangular.module('managerApp').service('DeskaasService', DeskaasService);",null]}