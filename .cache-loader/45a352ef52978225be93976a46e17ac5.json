{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/reverse-dns/vps-reverse-dns.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/reverse-dns/vps-reverse-dns.controller.js","mtime":1539717142300},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsReverseDnsCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsReverseDnsCtrl.$inject = [\"$translate\", \"$uibModalInstance\", \"CloudMessage\", \"serviceName\", \"VpsService\"];\n\n  function VpsReverseDnsCtrl($translate, $uibModalInstance, CloudMessage, serviceName, VpsService) {\n    _classCallCheck(this, VpsReverseDnsCtrl);\n\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.serviceName = serviceName;\n    this.VpsService = VpsService;\n    this.loader = {\n      init: false,\n      save: false\n    };\n    this.ips = [];\n    this.structuredData = {\n      results: []\n    };\n    this.model = {\n      value: null,\n      reverse: null\n    };\n  }\n\n  _createClass(VpsReverseDnsCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.loader.init = true;\n      this.VpsService.getIps(this.serviceName).then(function (data) {\n        _this.ips = data.results;\n      }).catch(function () {\n        return _this.CloudMessage.error(_this.$translate.instant('vps_configuration_reversedns_fail'));\n      }).finally(function () {\n        _this.loader.init = false;\n      });\n    }\n  }, {\n    key: \"prepareDnsIpsStruct\",\n    value: function prepareDnsIpsStruct() {\n      this.structuredData.results.push(angular.copy(this.model.value));\n      this.structuredData.results[0].reverse = this.model.reverse;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      var _this2 = this;\n\n      this.loader.save = true;\n      this.prepareDnsIpsStruct();\n      this.VpsService.setReversesDns(this.serviceName, this.structuredData).then(function (data) {\n        if (data && data.state) {\n          var messages = !_.isEmpty(data.messages) ? data.messages : [];\n\n          switch (data.state) {\n            case 'ERROR':\n              _this2.CloudMessage.error(_this2.$translate.instant('vps_configuration_reversedns_fail'));\n\n              messages.forEach(function (message) {\n                return _this2.CloudMessage.error(message.message || message);\n              });\n              break;\n\n            case 'PARTIAL':\n              break;\n\n            case 'OK':\n              _this2.CloudMessage.success(_this2.$translate.instant('vps_configuration_reversedns_success', {\n                serviceName: _this2.serviceName\n              }));\n\n              break;\n\n            default:\n              _this2.this.CloudMessage.error(_this2.$translate.instant('vps_configuration_reversedns_fail'));\n\n          }\n        }\n      }).catch(function () {\n        return _this2.CloudMessage.error(_this2.$translate.instant('vps_configuration_reversedns_fail'));\n      }).finally(function () {\n        _this2.loader.save = false;\n\n        _this2.$uibModalInstance.close();\n      });\n    }\n  }]);\n\n  return VpsReverseDnsCtrl;\n}();\n\nangular.module('managerApp').controller('VpsReverseDnsCtrl', VpsReverseDnsCtrl);",null]}