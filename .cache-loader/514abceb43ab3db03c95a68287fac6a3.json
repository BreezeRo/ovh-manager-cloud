{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/iplb-ssl-certificate.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/iplb-ssl-certificate.controller.js","mtime":1539717142218},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerSslCertificateCtrl {\n  constructor($stateParams, ControllerHelper, IpLoadBalancerActionService,\n    IpLoadBalancerSslCertificateService) {\n    this.$stateParams = $stateParams;\n    this.ControllerHelper = ControllerHelper;\n    this.IpLoadBalancerActionService = IpLoadBalancerActionService;\n    this.IpLoadBalancerSslCertificateService = IpLoadBalancerSslCertificateService;\n  }\n\n  $onInit() {\n    this.init();\n  }\n\n  init() {\n    this.loading = true;\n    this.IpLoadBalancerSslCertificateService.getCertificates(this.$stateParams.serviceName)\n      .then((results) => {\n        this.loading = false;\n        this.certificates = results;\n      });\n  }\n\n  update(ssl) {\n    return this.IpLoadBalancerActionService.updateCertificate(this.$stateParams.serviceName, ssl)\n      .then(() => {\n        this.init();\n      });\n  }\n\n  delete(ssl) {\n    return this.IpLoadBalancerActionService.deleteCertificate(this.$stateParams.serviceName, ssl)\n      .then(() => {\n        this.init();\n      });\n  }\n\n  preview(ssl) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/iplb/sslCertificate/preview/iplb-ssl-certificate-preview.html',\n        controller: 'IpLoadBalancerSslCertificatePreviewCtrl',\n        controllerAs: 'IpLoadBalancerSslCertificatePreviewCtrl',\n        resolve: {\n          ssl: () => ssl,\n        },\n      },\n    });\n  }\n}\n\nangular.module('managerApp').controller('IpLoadBalancerSslCertificateCtrl', IpLoadBalancerSslCertificateCtrl);\n"]}