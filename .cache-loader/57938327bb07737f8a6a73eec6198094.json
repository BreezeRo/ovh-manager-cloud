{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/zone/iplb-zone-delete.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/zone/iplb-zone-delete.service.js","mtime":1539717142230},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerZoneDeleteService =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerZoneDeleteService.$inject = [\"$q\", \"$translate\", \"CloudMessage\", \"OvhApiIpLoadBalancing\", \"RegionService\", \"ServiceHelper\"];\n\n  function IpLoadBalancerZoneDeleteService($q, $translate, CloudMessage, OvhApiIpLoadBalancing, RegionService, ServiceHelper) {\n    _classCallCheck(this, IpLoadBalancerZoneDeleteService);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.OvhApiIpLoadBalancing = OvhApiIpLoadBalancing;\n    this.RegionService = RegionService;\n    this.ServiceHelper = ServiceHelper;\n  }\n\n  _createClass(IpLoadBalancerZoneDeleteService, [{\n    key: \"getDeletableZones\",\n    value: function getDeletableZones(serviceName) {\n      var _this = this;\n\n      return this.OvhApiIpLoadBalancing.v6().get({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        var promises = _.map(response.zone, function (zone) {\n          return _this.OvhApiIpLoadBalancing.Zone().v6().get({\n            serviceName: serviceName,\n            name: zone\n          }).$promise;\n        });\n\n        return _this.$q.all(promises);\n      }).then(function (zones) {\n        return _.map(zones, function (zone) {\n          return _.extend({\n            name: zone.name,\n            selectable: {\n              value: zone.state !== 'released',\n              reason: zone.state === 'released' ? _this.$translate.instant('iplb_zone_delete_unavailable_already_released') : ''\n            }\n          }, _this.RegionService.getRegion(zone.name));\n        });\n      }).catch(this.ServiceHelper.errorHandler('iplb_zone_delete_loading_error'));\n    }\n  }, {\n    key: \"deleteZones\",\n    value: function deleteZones(serviceName, zones) {\n      var _this2 = this;\n\n      return this.getDeletableZones(serviceName).then(function (deletableZones) {\n        if (zones.length === 0) {\n          return _this2.ServiceHelper.errorHandler('iplb_zone_delete_selection_error')({});\n        }\n\n        var deletableZoneCount = _.filter(deletableZones, function (item) {\n          return item.selectable.value !== false;\n        }).length - 1;\n        var messages = {\n          tooMany: deletableZoneCount > 1 ? 'iplb_zone_delete_selection_too_many_plural_error' : 'iplb_zone_delete_selection_too_many_single_error',\n          success: zones.length > 1 ? 'iplb_zone_delete_plural_success' : 'iplb_zone_delete_single_success',\n          error: zones.length > 1 ? 'iplb_zone_delete_plural_error' : 'iplb_zone_delete_single_error'\n        };\n\n        if (zones.length > deletableZoneCount) {\n          return _this2.ServiceHelper.errorHandler(messages.tooMany)({\n            data: {\n              zoneQuantity: deletableZoneCount\n            }\n          });\n        }\n\n        var deletedZones = _.sortBy(_.map(zones, function (zone) {\n          return zone.microRegion.text;\n        }), function (zone) {\n          return zone;\n        }).join(', ');\n\n        var promises = _.map(zones, function (zone) {\n          return _this2.OvhApiIpLoadBalancing.Zone().v6().delete({\n            serviceName: serviceName,\n            name: zone.name\n          }, {}).$promise;\n        });\n\n        return _this2.$q.all(promises).then(function () {\n          return _this2.ServiceHelper.successHandler(messages.success)({\n            zones: deletedZones\n          });\n        }).catch(_this2.ServiceHelper.errorHandler(messages.error));\n      });\n    }\n  }]);\n\n  return IpLoadBalancerZoneDeleteService;\n}();\n\nangular.module('managerApp').service('IpLoadBalancerZoneDeleteService', IpLoadBalancerZoneDeleteService);",null]}