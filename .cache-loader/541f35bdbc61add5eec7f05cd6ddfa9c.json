{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/password/vps-password.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/password/vps-password.controller.js","mtime":1539717142296},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsPasswordCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsPasswordCtrl.$inject = [\"$translate\", \"$uibModalInstance\", \"ControllerHelper\", \"CloudMessage\", \"ovhDocUrl\", \"serviceName\", \"VpsService\"];\n\n  function VpsPasswordCtrl($translate, $uibModalInstance, ControllerHelper, CloudMessage, ovhDocUrl, serviceName, VpsService) {\n    _classCallCheck(this, VpsPasswordCtrl);\n\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.ovhDocUrl = ovhDocUrl;\n    this.serviceName = serviceName;\n    this.VpsService = VpsService;\n    this.ControllerHelper = ControllerHelper;\n    this.selected = {\n      rescue: true\n    };\n  }\n\n  _createClass(VpsPasswordCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.guide = this.ovhDocUrl.getDocUrl('vps/root-password');\n      this.tasks = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.VpsService.getTaskInError(_this.serviceName).then(function (tasks) {\n            if (_(tasks).isArray() && !_(tasks).isEmpty()) {\n              _this.CloudMessage.error(_this.$translate.instant('vps_configuration_polling_fail'));\n            }\n          }).catch(function (err) {\n            return _this.CloudMessage.error(err);\n          });\n        }\n      });\n      return this.tasks.load();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      var _this2 = this;\n\n      this.save = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.VpsService.reboot(_this2.serviceName, _this2.selected.rescue).then(function () {\n            return _this2.CloudMessage.success(_this2.$translate.instant('vps_configuration_reboot_rescue_success', {\n              serviceName: _this2.serviceName\n            }));\n          }).catch(function () {\n            return _this2.CloudMessage.error(_this2.$translate.instant('vps_configuration_reinitpassword_fail'));\n          }).finally(function () {\n            return _this2.$uibModalInstance.close();\n          });\n        }\n      });\n      return this.save.load();\n    }\n  }]);\n\n  return VpsPasswordCtrl;\n}();\n\nangular.module('managerApp').controller('VpsPasswordCtrl', VpsPasswordCtrl);",null]}