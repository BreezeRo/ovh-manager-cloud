{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/add/logs-aliases-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/add/logs-aliases-add.controller.js","mtime":1539717142076},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsAliasesAddCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsAliasesAddCtrl.$inject = [\"$q\", \"$stateParams\", \"$uibModalInstance\", \"LogsAliasesService\", \"ControllerHelper\", \"CloudMessage\"];\n\n  function LogsAliasesAddCtrl($q, $stateParams, $uibModalInstance, LogsAliasesService, ControllerHelper, CloudMessage) {\n    _classCallCheck(this, LogsAliasesAddCtrl);\n\n    this.$q = $q;\n    this.$stateParams = $stateParams;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsAliasesService = LogsAliasesService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.isEdit = false;\n    this.initLoaders();\n  }\n  /**\n   * initializes options list\n   *\n   * @memberof LogsAliasesAddCtrl\n   */\n\n\n  _createClass(LogsAliasesAddCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.options = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsAliasesService.getSubscribedOptions(_this.serviceName);\n        }\n      });\n      this.options.load();\n      this.mainOffer = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsAliasesService.getMainOffer(_this.serviceName);\n        }\n      });\n      this.mainOffer.load();\n\n      if (this.$stateParams.aliasId) {\n        this.isEdit = true;\n        this.alias = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this.LogsAliasesService.getAlias(_this.serviceName, _this.$stateParams.aliasId);\n          }\n        });\n        this.alias.load();\n      } else {\n        this.isEdit = false;\n        this.alias = this.LogsAliasesService.constructor.getNewAlias();\n      }\n\n      this.title = this.isEdit ? 'logs_aliases_update_title' : 'logs_aliases_add';\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      if (this.isEdit) {\n        return this.updateAlias();\n      }\n\n      return this.createAlias();\n    }\n    /**\n     * update alias\n     *\n     * @memberof LogsAliasesAddCtrl\n     */\n\n  }, {\n    key: \"updateAlias\",\n    value: function updateAlias() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsAliasesService.updateAlias(_this2.$stateParams.serviceName, _this2.alias.data).finally(function () {\n            _this2.$uibModalInstance.close();\n\n            _this2.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n    /**\n     * create new alias\n     *\n     * @memberof LogsAliasesAddCtrl\n     */\n\n  }, {\n    key: \"createAlias\",\n    value: function createAlias() {\n      var _this3 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsAliasesService.createAlias(_this3.$stateParams.serviceName, _this3.alias.data).finally(function () {\n            _this3.$uibModalInstance.close();\n\n            _this3.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }]);\n\n  return LogsAliasesAddCtrl;\n}();\n\nangular.module('managerApp').controller('LogsAliasesAddCtrl', LogsAliasesAddCtrl);",null]}