{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/storage/storage-add/storage/add-storage-controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/storage/storage-add/storage/add-storage-controller.js","mtime":1539717142053},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('RA.add.storageCtrl', [\n  '$q',\n  '$scope',\n  '$state',\n  '$stateParams',\n  '$timeout',\n  '$translate',\n  'OvhApiCloudProjectRegion',\n  'CloudStorageContainers',\n  'CloudMessage',\n  function storageCtrl($q, $scope, $state, $stateParams, $timeout, $translate,\n    OvhApiCloudProjectRegion, CloudStorageContainers, CloudMessage) {\n    $scope.projectId = $stateParams.projectId;\n\n    $scope.model = {};\n    $scope.steps = {\n      region: {\n        enable: false,\n      },\n      containerType: {\n        enable: false,\n      },\n      name: {\n        enable: false,\n      },\n    };\n\n    $scope.stepPath = null;\n\n    $scope.loaders = {\n      regions: true,\n    };\n\n    $scope.historyStep = [];\n\n    // handle messages\n    $scope.messages = [];\n\n    function refreshMessage() {\n      $scope.messages = $scope.messageHandler.getMessages();\n    }\n\n    function loadMessage() {\n      CloudMessage.unSubscribe('iaas.pci-project.compute.storage');\n      $scope.messageHandler = CloudMessage.subscribe('iaas.pci-project.compute.storage', { onMessage: () => refreshMessage() });\n    }\n\n    $scope.loadStep = function (step) {\n      $scope.steps[step].enable = true;\n      $scope.historyStep.push(step);\n    };\n\n    $scope.isValid = function () {\n      const isDefined = function (expr) { return !_.isUndefined(expr); };\n      return isDefined($scope.model.region)\n                   && isDefined($scope.model.containerType)\n                   && isDefined($scope.model.name);\n    };\n\n    $scope.addStorage = function () {\n      $scope.loaders.post = true;\n\n      return CloudStorageContainers.create(\n        $scope.projectId,\n        $scope.model.name,\n        $scope.model.region,\n        $scope.model.containerType.type,\n      )\n        .then((resp) => {\n          if (!resp || !resp.id) {\n            CloudMessage.error($translate.instant('add_storage_storage_added_error'));\n            return $q.reject(resp);\n          }\n\n          return $timeout(() => {\n            CloudMessage.success($translate.instant('add_storage_storage_added'));\n            $state.go('iaas.pci-project.compute.storage.detail-container', { projectId: $scope.projectId, storageId: resp.id });\n          }, 3000)\n            .then(() => resp);\n        })\n        .finally(() => {\n          $scope.loaders.post = false;\n        });\n    };\n\n    function loadRegions() {\n      $scope.loaders.regions = true;\n      $scope.regions = null;\n\n      return OvhApiCloudProjectRegion.v6().query({\n        serviceName: $scope.projectId,\n      }).$promise\n        .then((regions) => {\n          $scope.regions = regions;\n        })\n        .finally(() => {\n          $scope.loaders.regions = false;\n        });\n    }\n\n    function init() {\n      loadMessage();\n      return loadRegions()\n        .then(() => {\n          $scope.loadStep('region');\n        });\n    }\n\n    init();\n  }]);\n"]}