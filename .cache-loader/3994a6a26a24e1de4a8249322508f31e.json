{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/backup-storage/order/vps-order-backup-storage.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/backup-storage/order/vps-order-backup-storage.controller.js","mtime":1539717142286},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsOrderBackupStorageCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsOrderBackupStorageCtrl.$inject = [\"$stateParams\", \"$translate\", \"$window\", \"CloudMessage\", \"CloudNavigation\", \"ServiceHelper\", \"VpsService\"];\n\n  function VpsOrderBackupStorageCtrl($stateParams, $translate, $window, CloudMessage, CloudNavigation, ServiceHelper, VpsService) {\n    _classCallCheck(this, VpsOrderBackupStorageCtrl);\n\n    this.$translate = $translate;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.serviceName = $stateParams.serviceName;\n    this.ServiceHelper = ServiceHelper;\n    this.VpsService = VpsService;\n    this.model = {\n      optionDetails: undefined,\n      url: undefined\n    };\n  }\n\n  _createClass(VpsOrderBackupStorageCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.VpsService.getOptionDetails(this.serviceName, 'ftpbackup').then(function (option) {\n        _this.model.optionDetails = _.first(option.results);\n      }).catch(function (error) {\n        _this.CloudMessage.error(\"\".concat(_this.$translate.instant('vps_dashboard_loading_error'), \" \").concat(error.data));\n      });\n      this.previousState = this.CloudNavigation.getPreviousState();\n      this.VpsService.canOrderOption(this.serviceName, 'ftpbackup').catch(function () {\n        _this.CloudMessage.error(_this.$translate.instant('vps_tab_BACKUP_STORAGE_dashboard_ftpbackup_unavailable'));\n      });\n    }\n  }, {\n    key: \"orderOption\",\n    value: function orderOption() {\n      var _this2 = this;\n\n      this.ServiceHelper.loadOnNewPage(this.VpsService.orderOption(this.serviceName, 'ftpbackup', this.model.optionDetails.duration.duration)).then(function (_ref) {\n        var url = _ref.url;\n        _this2.model.url = url;\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.previousState.go();\n    }\n  }]);\n\n  return VpsOrderBackupStorageCtrl;\n}();\n\nangular.module('managerApp').controller('VpsOrderBackupStorageCtrl', VpsOrderBackupStorageCtrl);",null]}