{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/openstack/users/rclone/openstack-users-rclone.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/openstack/users/rclone/openstack-users-rclone.service.js","mtime":1539717142048},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudProjectOpenstackUsersRcloneService {\n  constructor($httpParamSerializer, $q, CONFIG_API, OvhApiCloud, RegionService, ServiceHelper) {\n    this.$httpParamSerializer = $httpParamSerializer;\n    this.$q = $q;\n    this.CONFIG_API = CONFIG_API;\n    this.OvhApiCloud = OvhApiCloud;\n    this.RegionService = RegionService;\n    this.ServiceHelper = ServiceHelper;\n  }\n\n  getValidRcloneRegions(projectId) {\n    return this.OvhApiCloud.Project().Region().v6().query({ serviceName: projectId })\n      .$promise\n      .then(regions => _.map(regions, region => this.RegionService.getRegion(region)))\n      .catch(this.ServiceHelper.errorHandler('cpou_rclone_modal_loading_error'));\n  }\n\n  getRcloneFileInfo(projectId, userId, region) {\n    let url = [\n      (_.find(this.CONFIG_API.apis, { serviceType: 'apiv6' }) || {}).urlPrefix,\n      this.OvhApiCloud.Project().User().v6().services.rclone.url,\n      '?',\n      this.$httpParamSerializer({\n        region,\n      }),\n    ].join('');\n\n    const replacements = {\n      serviceName: projectId,\n      userId,\n    };\n\n    Object.keys(replacements).forEach((paramName) => {\n      url = url.replace(`:${paramName}`, replacements[paramName]);\n    });\n\n    return this.OvhApiCloud.Project().User().v6()\n      .rclone({ serviceName: projectId, userId, region }, { })\n      .$promise\n      .then((response) => {\n        _.assign(response, { url });\n        return response;\n      });\n  }\n}\n\nangular.module('managerApp').service('CloudProjectOpenstackUsersRcloneService', CloudProjectOpenstackUsersRcloneService);\n"]}