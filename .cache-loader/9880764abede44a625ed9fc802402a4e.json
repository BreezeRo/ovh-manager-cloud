{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/follow/streams-follow.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/follow/streams-follow.controller.js","mtime":1539717142151},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsStreamsFollowCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsStreamsFollowCtrl.$inject = [\"$scope\", \"$stateParams\", \"$translate\", \"ControllerHelper\", \"UrlHelper\", \"CloudMessage\", \"LogsStreamsService\", \"LogsStreamsFollowService\", \"LogsConstants\"];\n\n  function LogsStreamsFollowCtrl($scope, $stateParams, $translate, ControllerHelper, UrlHelper, CloudMessage, LogsStreamsService, LogsStreamsFollowService, LogsConstants) {\n    var _this = this;\n\n    _classCallCheck(this, LogsStreamsFollowCtrl);\n\n    this.$scope = $scope;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.ControllerHelper = ControllerHelper;\n    this.UrlHelper = UrlHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsStreamsService = LogsStreamsService;\n    this.LogsStreamsFollowService = LogsStreamsFollowService;\n    this.LogsConstants = LogsConstants;\n    this.initLoaders();\n    $scope.$on('$destroy', function () {\n      _this.closeConnection();\n    });\n  }\n\n  _createClass(LogsStreamsFollowCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this2 = this;\n\n      this.stream = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsStreamsService.getAapiStream(_this2.$stateParams.serviceName, _this2.$stateParams.streamId).then(function (stream) {\n            _this2.LogsStreamsFollowService.openConnection(stream);\n\n            return stream;\n          });\n        }\n      });\n      this.stream.load();\n      this.testClientUrls = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsStreamsFollowService.getTestClientUrls(_this2.$stateParams.serviceName).then(function (serviceInfo) {\n            _this2.rfc5424Url = _this2.UrlHelper.constructor.findUrl(serviceInfo, _this2.LogsConstants.RFC_URL, false);\n            _this2.ltsvUrl = _this2.UrlHelper.constructor.findUrl(serviceInfo, _this2.LogsConstants.LTSV_URL, false);\n            _this2.gelfUrl = _this2.UrlHelper.constructor.findUrl(serviceInfo, _this2.LogsConstants.GELF_URL, false);\n          });\n        }\n      });\n      this.testClientUrls.load();\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      return this.LogsStreamsFollowService.getMessages();\n    }\n  }, {\n    key: \"getAlertType\",\n    value: function getAlertType(level) {\n      return this.LogsStreamsFollowService.getAlertType(level);\n    }\n  }, {\n    key: \"getAlertLabel\",\n    value: function getAlertLabel(level) {\n      return this.LogsStreamsFollowService.getAlertLabel(level);\n    }\n  }, {\n    key: \"closeConnection\",\n    value: function closeConnection() {\n      this.CloudMessage.flushChildMessage();\n      this.LogsStreamsFollowService.closeConnection();\n    }\n  }, {\n    key: \"openConnection\",\n    value: function openConnection() {\n      this.CloudMessage.flushChildMessage();\n      this.LogsStreamsFollowService.openConnection(this.stream.data);\n    }\n  }, {\n    key: \"isConnectionClosed\",\n    value: function isConnectionClosed() {\n      return this.LogsStreamsFollowService.isConnectionClosed();\n    }\n  }, {\n    key: \"isWaitingForMessages\",\n    value: function isWaitingForMessages() {\n      return this.LogsStreamsFollowService.isWaitingForMessages();\n    }\n  }, {\n    key: \"copyAddress\",\n    value: function copyAddress() {\n      this.CloudMessage.flushChildMessage();\n      this.LogsStreamsFollowService.copyWebSocketAddress(this.stream.data);\n    }\n  }, {\n    key: \"testFlow\",\n    value: function testFlow(type) {\n      switch (type) {\n        case this.LogsStreamsFollowService.testTypeEnum.GELF:\n          this.LogsStreamsFollowService.copyGELCommandLine(this.stream.data, this.gelfUrl);\n          break;\n\n        case this.LogsStreamsFollowService.testTypeEnum.LTSV:\n          this.LogsStreamsFollowService.copyLTSVCommandLine(this.stream.data, this.ltsvUrl);\n          break;\n\n        case this.LogsStreamsFollowService.testTypeEnum.RFC5424:\n          this.LogsStreamsFollowService.copyRFCCommandLine(this.stream.data, this.rfc5424Url);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"getLastEvent\",\n    value: function getLastEvent() {\n      return this.LogsStreamsFollowService.getLastEvent();\n    }\n  }, {\n    key: \"getTotalMessages\",\n    value: function getTotalMessages() {\n      return this.LogsStreamsFollowService.getTotalMessages();\n    }\n  }]);\n\n  return LogsStreamsFollowCtrl;\n}();\n\nangular.module('managerApp').controller('LogsStreamsFollowCtrl', LogsStreamsFollowCtrl);",null]}