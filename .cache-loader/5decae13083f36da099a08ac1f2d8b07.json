{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/common/cloud-main-controller.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/common/cloud-main-controller.controller.js","mtime":1539717142057},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudMainController {\n  constructor($document, $interval, $rootScope, $translate, ProductsService) {\n    this.$document = $document;\n    this.$interval = $interval;\n    this.$rootScope = $rootScope;\n    this.$translate = $translate;\n    this.ProductsService = ProductsService;\n  }\n\n  $onInit() {\n    this.expiringProject = null;\n\n    this.init();\n\n    this.$rootScope.$on('CloudMainController:refresh', () => {\n      this.init();\n    });\n  }\n\n  init() {\n    this.ProductsService.getProducts()\n      .then(() => this.ProductsService.getProductsOfType('PROJECT'))\n      .then(products => products.filter(product => product.expiration))\n      .then((products) => {\n        if (products && products.length) {\n          this.expiringProject = _.first(products);\n          this.expiringProjectInterval = this.$interval(() => {\n            this.updateRemainingTime();\n          }, 1000);\n        }\n      });\n  }\n\n  updateRemainingTime() {\n    const expirationMoment = moment(this.expiringProject.expiration);\n    if (expirationMoment.isBefore(moment().utc())\n      && angular.isDefined(this.expiringProjectInterval)) {\n      this.$interval.cancel(this.expiringProjectInterval);\n    }\n    this.remainingTime = this.getRemainingTime(this.expiringProject.expiration);\n  }\n\n  getRemainingTime(expiration) {\n    const expirationMoment = moment(expiration);\n    const ms = Math.max(0, moment(expirationMoment).diff(moment().utc()));\n    const duration = moment.duration(ms);\n    this.expirationDays = duration.days();\n    this.expirationHours = duration.hours();\n    this.expirationMinutes = duration.minutes();\n  }\n\n  scrollTo(id) {\n    // Set focus to target\n    this.$document.find(`#${id}`)[0].focus();\n  }\n}\n\nangular.module('managerApp').controller('CloudMainController', CloudMainController);\n"]}