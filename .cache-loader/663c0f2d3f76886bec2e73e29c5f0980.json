{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/region.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/region.service.js","mtime":1539717142002},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CloudRegionService =\n/*#__PURE__*/\nfunction () {\n  function CloudRegionService() {\n    _classCallCheck(this, CloudRegionService);\n  }\n\n  _createClass(CloudRegionService, null, [{\n    key: \"addOverQuotaInfos\",\n    value: function addOverQuotaInfos(region, quota) {\n      var quotaByRegion = _.find(quota, {\n        region: _.get(region, 'microRegion.code')\n      });\n\n      var instanceQuota = _.get(quotaByRegion, 'instance', false);\n\n      if (instanceQuota) {\n        if (instanceQuota.maxInstances !== -1 && instanceQuota.usedInstances >= instanceQuota.maxInstances) {\n          _.set(region, 'disabled', 'QUOTA_INSTANCE');\n        } else if (instanceQuota.maxRam !== -1 && instanceQuota.usedRAM >= instanceQuota.maxRam) {\n          _.set(region, 'disabled', 'QUOTA_RAM');\n        } else if (instanceQuota.maxCores !== -1 && instanceQuota.usedCores >= instanceQuota.maxCores) {\n          _.set(region, 'disabled', 'QUOTA_VCPUS');\n        }\n      }\n    }\n  }, {\n    key: \"checkSshKey\",\n    value: function checkSshKey(region, sshKeyRegions) {\n      var found = _.indexOf(sshKeyRegions, _.get(region, 'microRegion.code'));\n\n      if (!region.disabled && found === -1) {\n        _.set(region, 'disabled', 'SSH_KEY');\n      } else if (region.disabled === 'SSH_KEY' && found > -1) {\n        delete region.disabled; // eslint-disable-line\n      }\n    }\n  }]);\n\n  return CloudRegionService;\n}();\n\nangular.module('managerApp').service('CloudRegionService', CloudRegionService);",null]}