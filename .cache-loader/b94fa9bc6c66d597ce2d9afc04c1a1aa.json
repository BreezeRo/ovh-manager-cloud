{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/nodes/add/kubernetes-nodes-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/nodes/add/kubernetes-nodes-add.controller.js","mtime":1539717374575},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nangular.module('managerApp').controller('KubernetesNodesAddCtrl',\n/*#__PURE__*/\nfunction () {\n  KubernetesNodesAddCtrl.$inject = [\"$q\", \"$state\", \"$stateParams\", \"$translate\", \"$uibModalInstance\", \"CloudFlavorService\", \"Kubernetes\", \"OvhApiMe\", \"OvhCloudPriceHelper\", \"projectId\", \"CLOUD_FLAVORTYPE_CATEGORY\", \"KUBERNETES\"];\n\n  function KubernetesNodesAddCtrl($q, $state, $stateParams, $translate, $uibModalInstance, CloudFlavorService, Kubernetes, OvhApiMe, OvhCloudPriceHelper, projectId, CLOUD_FLAVORTYPE_CATEGORY, KUBERNETES) {\n    _classCallCheck(this, KubernetesNodesAddCtrl);\n\n    this.$q = $q;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudFlavorService = CloudFlavorService;\n    this.Kubernetes = Kubernetes;\n    this.OvhApiMe = OvhApiMe;\n    this.OvhCloudPriceHelper = OvhCloudPriceHelper;\n    this.projectId = projectId;\n    this.CLOUD_FLAVORTYPE_CATEGORY = CLOUD_FLAVORTYPE_CATEGORY;\n    this.KUBERNETES = KUBERNETES;\n  }\n\n  _createClass(KubernetesNodesAddCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.loading = true;\n      this.serviceName = this.$stateParams.serviceName;\n      this.getPublicCloudProject().then(function () {\n        return _this.$q.all({\n          quotas: _this.getProjectQuota(),\n          prices: _this.getPrices()\n        });\n      }).then(function (_ref) {\n        var quotas = _ref.quotas,\n            prices = _ref.prices;\n        return _this.getFlavors(quotas, prices);\n      }).catch(function (error) {\n        return _this.$uibModalInstance.dismiss(_this.$translate.instant('kube_nodes_add_flavor_error', {\n          message: _.get(error, 'data.message', '')\n        }));\n      }).finally(function () {\n        _this.loading = false;\n      });\n    }\n  }, {\n    key: \"getPublicCloudProject\",\n    value: function getPublicCloudProject() {\n      var _this2 = this;\n\n      return this.Kubernetes.getAssociatedPublicCloudProjects(this.serviceName).then(function (projects) {\n        _this2.project = _.first(projects);\n      });\n    }\n  }, {\n    key: \"getProjectQuota\",\n    value: function getProjectQuota() {\n      return this.Kubernetes.getProjectQuota(this.project.projectId);\n    }\n  }, {\n    key: \"getFlavors\",\n    value: function getFlavors(quotas, prices) {\n      var _this3 = this;\n\n      return this.Kubernetes.getFlavors(this.projectId).then(function (flavors) {\n        /**\n        * @type {{id: string, familyName: string, flavors: Object[]}}\n        */\n        _this3.flavorFamilies = _this3.CLOUD_FLAVORTYPE_CATEGORY.filter(function (type) {\n          return _.includes(_this3.KUBERNETES.flavorTypes, type.id);\n        }).map(function (category) {\n          return {\n            id: category.id,\n            familyName: _this3.$translate.instant(\"kube_nodes_add_flavor_family_\".concat(category.id)),\n            flavors: flavors.filter(function (flavor) {\n              return _.includes(category.types, flavor.type) && flavor.osType !== 'windows';\n            }).map(function (flavor) {\n              return {\n                name: flavor.name,\n                displayedName: _this3.Kubernetes.formatFlavor(flavor),\n                quotaOverflow: _this3.getQuotaOverflow(flavor, quotas),\n                price: _.get(_.get(prices, flavor.planCodes.hourly), 'price.text')\n              };\n            })\n          };\n        });\n        return flavors;\n      });\n    }\n  }, {\n    key: \"getSubsidiary\",\n    value: function getSubsidiary() {\n      var _this4 = this;\n\n      return this.OvhApiMe.v6().get().then(function (_ref2) {\n        var subsidiary = _ref2.subsidiary;\n        _this4.subsidiary = subsidiary;\n      });\n    }\n  }, {\n    key: \"getPrices\",\n    value: function getPrices() {\n      return this.OvhCloudPriceHelper.getPrices(this.project.projectId);\n    }\n  }, {\n    key: \"getQuotaOverflow\",\n    value: function getQuotaOverflow(flavor, quotas) {\n      // addOverQuotaInfos adds 'disabled' key to flavor parameter\n      var testedFlavor = _.clone(flavor);\n\n      this.CloudFlavorService.constructor.addOverQuotaInfos(testedFlavor, quotas);\n      return _.get(testedFlavor, 'disabled');\n    }\n  }, {\n    key: \"onFlavorFamilyChange\",\n    value: function onFlavorFamilyChange(selectedFamily) {\n      this.selectedFlavor = null;\n      this.flavors = _.find(this.flavorFamilies, function (family) {\n        return family.id === selectedFamily.id;\n      }).flavors;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode() {\n      var _this5 = this;\n\n      this.loading = true;\n      return this.Kubernetes.addNode(this.serviceName, this.selectedFlavor.name).then(function () {\n        return _this5.$uibModalInstance.close();\n      }).catch(function (error) {\n        return _this5.$uibModalInstance.dismiss(_this5.$translate.instant('kube_nodes_add_error', {\n          message: _.get(error, 'data.message', '')\n        }));\n      }).finally(function () {\n        _this5.loading = false;\n      });\n    }\n  }, {\n    key: \"instanceIsValid\",\n    value: function instanceIsValid() {\n      return !this.selectedFlavor.quotaOverflow;\n    }\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(error) {\n      this.$uibModalInstance.dismiss(error);\n    }\n  }, {\n    key: \"goToProjectQuota\",\n    value: function goToProjectQuota() {\n      this.$uibModalInstance.close();\n      this.$state.go('iaas.pci-project.compute.quota', {\n        projectId: this.project.projectId\n      });\n    }\n  }]);\n\n  return KubernetesNodesAddCtrl;\n}());",null]}