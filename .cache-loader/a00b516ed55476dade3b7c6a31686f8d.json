{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/contracts/contracts.directive.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/contracts/contracts.directive.js","mtime":1539717142399},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').directive('contracts', function () {\n  return {\n    restrict: 'EA',\n    templateUrl: 'components/contracts/contracts.html',\n    scope: {\n      contracts: '=',\n      agree: '=contractsValidated'\n    },\n    controller: function controller() {\n      this.disabled = true;\n    },\n    controllerAs: 'ContractsCtrl',\n    bindToController: true,\n    link: function link($scope, $elm, $attr, ContractsCtrl) {\n      _.set(ContractsCtrl, 'fullText', $attr.fullText === 'true' || $attr.fullText === undefined);\n\n      var scrollToOptions = {\n        easing: 'swing',\n        duration: '300',\n        offsetTop: '16'\n      };\n      /** AWESOME SCROLL* */\n\n      function init() {\n        $elm.find('.contracts-breadcrumb-navigate-previous').unbind('click');\n        $elm.find('.contracts-breadcrumb-navigate-next').unbind('click');\n        $elm.find('.contracts-list').unbind('scroll');\n        $elm.find('.contracts-menu').undelegate('a', 'click');\n        var topMenu = $elm.find('.contracts-menu');\n        var lastId = 'contract-0';\n        var menuItems = topMenu.find('a');\n        var scrollItems;\n        var initialOffSet;\n\n        _.set(ContractsCtrl, 'currentContract', _.first(ContractsCtrl.contracts));\n\n        _.set(ContractsCtrl, 'disabled', true); // Fake Anchor\n\n\n        topMenu.delegate('a', 'click', function (e) {\n          var href = $(this).attr('data-fake-href');\n          $('.contracts-list').stop().scrollTo(href, scrollToOptions);\n          e.preventDefault();\n        });\n        $elm.find('.contracts-list').scroll(function (e) {\n          // enable check box\n          var elem = $(e.currentTarget);\n          var elemHeight = elem.outerHeight();\n          var elemDiff = elem[0].scrollHeight - elem.scrollTop();\n\n          if (elemDiff === elemHeight || elemDiff - elemHeight < 5) {\n            $scope.$apply(function () {\n              _.set(ContractsCtrl, 'disabled', false);\n            });\n          } // Get container scroll position\n\n\n          var fromTop = $elm.find('.contracts-list').height() / 2 + $elm.find('.contracts-list').offset().top;\n\n          if (scrollItems === undefined) {\n            scrollItems = menuItems.map(function () {\n              var item = $($(this).attr('data-fake-href'));\n\n              if (initialOffSet === undefined) {\n                initialOffSet = item.offset().top;\n              }\n\n              if (item.length) {\n                return item;\n              }\n\n              return null;\n            });\n          } // Get id of current scroll item\n\n\n          var cur = scrollItems.map(function () {\n            if ($(this).offset().top <= fromTop) {\n              return this;\n            }\n\n            return null;\n          }); // Get the id of the current element\n\n          cur = cur[cur.length - 1];\n          var id = cur && cur.length ? cur[0].id : 'contract-0';\n\n          if (lastId !== id) {\n            lastId = id;\n            $scope.$apply(function () {\n              _.set(ContractsCtrl, 'currentContract', ContractsCtrl.contracts[id.split('-')[1]]);\n            });\n            menuItems.removeClass('active').parent().end().filter(\"[data-fake-href=#\".concat(id, \"]\")).addClass('active');\n          }\n        });\n        $elm.find('.contracts-breadcrumb-navigate-previous').click(function () {\n          if (lastId) {\n            $elm.find('.contracts-list').stop().scrollTo(\"#contract-\".concat(parseInt(lastId.split('-')[1], 10) - 1), scrollToOptions);\n          }\n        });\n        $elm.find('.contracts-breadcrumb-navigate-next').click(function () {\n          if (lastId) {\n            $elm.find('.contracts-list').stop().scrollTo(\"#contract-\".concat(parseInt(lastId.split('-')[1], 10) + 1), scrollToOptions);\n          }\n        });\n        menuItems.removeClass('active').parent().end().filter(\"[data-fake-href=#\".concat(lastId, \"]\")).addClass('active');\n        window.setTimeout(function () {\n          $elm.find('.contracts-list').stop().scrollTo(0);\n          menuItems = topMenu.find('a'); // because ngRepeat is not already here ;p\n        }, 300);\n      }\n\n      $scope.$watch(function () {\n        return ContractsCtrl.contracts;\n      }, function (nv) {\n        if (nv !== undefined) {\n          init();\n        }\n      });\n    }\n  };\n});",null]}