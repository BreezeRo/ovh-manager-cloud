{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/sidebar/products/project-sidebar.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/sidebar/products/project-sidebar.service.js","mtime":1539717374678},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CloudProjectSidebar =\n/*#__PURE__*/\nfunction () {\n  CloudProjectSidebar.$inject = [\"$translate\", \"SidebarMenu\", \"TARGET\"];\n\n  function CloudProjectSidebar($translate, SidebarMenu, TARGET) {\n    _classCallCheck(this, CloudProjectSidebar);\n\n    this.$translate = $translate;\n    this.SidebarMenu = SidebarMenu;\n    this.TARGET = TARGET;\n    this.type = 'PROJECT';\n  }\n\n  _createClass(CloudProjectSidebar, [{\n    key: \"loadIntoSection\",\n    value: function loadIntoSection(section, services) {\n      var _this = this;\n\n      var servicesSorted = _.sortBy(services, function (project) {\n        return project.displayName.toUpperCase();\n      });\n\n      _.forEach(servicesSorted, function (project) {\n        if (_this.TARGET === 'US') {\n          _this.SidebarMenu.addMenuItem({\n            id: project.serviceName,\n            title: project.displayName || project.serviceName,\n            icon: 'ovh-font ovh-font-cloud-public2',\n            state: 'iaas.pci-project.compute',\n            stateParams: {\n              projectId: project.serviceName\n            },\n            loadOnState: 'iaas.pci-project.compute',\n            loadOnStateParams: {\n              projectId: project.serviceName\n            }\n          }, section);\n        } else {\n          var subSection = _this.SidebarMenu.addMenuItem({\n            id: project.serviceName,\n            title: project.displayName || project.serviceName,\n            allowSubItems: true,\n            icon: 'ovh-font ovh-font-cloud-public2',\n            // state: \"iaas.pci-project\",\n            stateParams: {\n              projectId: project.serviceName\n            },\n            loadOnState: 'iaas.pci-project',\n            loadOnStateParams: {\n              projectId: project.serviceName\n            }\n          }, section);\n\n          _this.fillCloudProjectSubSection(project, subSection);\n        }\n      });\n    }\n  }, {\n    key: \"addSearchKeys\",\n    value: function addSearchKeys(menuItem) {\n      menuItem.addSearchKey('PCI');\n      menuItem.addSearchKey('Public Cloud Public');\n      menuItem.addSearchKey(this.$translate.instant('cloud_sidebar_actions_menu_cloud_project'));\n    }\n  }, {\n    key: \"addOrder\",\n    value: function addOrder() {\n      return {\n        id: 'order-pci-project-new',\n        title: this.$translate.instant('cloud_sidebar_actions_menu_cloud_project'),\n        icon: 'ovh-font ovh-font-public-cloud',\n        state: 'iaas.pci-project-new'\n      };\n    }\n  }, {\n    key: \"addToSection\",\n    value: function addToSection(service) {\n      var section = this.SidebarMenu.getItemById('mainIaasItem');\n      var hasSubItems = _.get(section, 'subItems', []).length > 0;\n      var projectItem = this.SidebarMenu.addMenuItem({\n        id: service.project_id,\n        title: service.description,\n        icon: 'ovh-font ovh-font-cloud-public2',\n        allowSubItems: true,\n        loadOnState: 'iaas.pci-project',\n        loadOnStateParams: {\n          projectId: service.project_id\n        }\n      }, section); // For each Item, add Infra/ObjectStorage/Facturation\n\n      this.fillCloudProjectSubSection(service, projectItem); // Show on top: TODO: show in alphabetical order\n\n      if (hasSubItems) {\n        _.remove(_.get(section, 'subItems'), function (item) {\n          return item.id === service.project_id;\n        });\n\n        section.subItems.unshift(projectItem);\n      }\n    }\n  }, {\n    key: \"fillCloudProjectSubSection\",\n    value: function fillCloudProjectSubSection(project, subSection) {\n      this.addSearchKeys(subSection);\n      this.SidebarMenu.addMenuItem({\n        title: this.$translate.instant('cloud_sidebar_pci_infrastructure'),\n        state: 'iaas.pci-project.compute',\n        stateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        loadOnState: 'iaas.pci-project.compute',\n        loadOnStateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        category: 'action-page',\n        searchable: false\n      }, subSection);\n      this.SidebarMenu.addMenuItem({\n        title: this.$translate.instant('cloud_sidebar_pci_object_storage'),\n        state: 'iaas.pci-project.compute.storage',\n        stateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        loadOnState: 'iaas.pci-project.compute.storage',\n        loadOnStateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        category: 'action-page',\n        searchable: false\n      }, subSection);\n      this.SidebarMenu.addMenuItem({\n        title: this.$translate.instant('cloud_sidebar_pci_manage'),\n        state: 'iaas.pci-project.billing',\n        stateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        loadOnState: 'iaas.pci-project.billing',\n        loadOnStateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        category: 'action-page',\n        searchable: false\n      }, subSection);\n      this.SidebarMenu.addMenuItem({\n        title: this.$translate.instant('cloud_sidebar_pci_openstack'),\n        state: 'iaas.pci-project.compute.openstack',\n        stateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        loadOnState: 'iaas.pci-project.compute.openstack',\n        loadOnStateParams: {\n          projectId: project.serviceName || project.project_id\n        },\n        category: 'action-page',\n        searchable: false\n      }, subSection);\n    }\n  }]);\n\n  return CloudProjectSidebar;\n}();\n\nangular.module('managerApp').service('CloudProjectSidebar', CloudProjectSidebar);",null]}