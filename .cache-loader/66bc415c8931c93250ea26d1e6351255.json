{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/tokens/logs-tokens.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/tokens/logs-tokens.controller.js","mtime":1539717142154},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsTokensCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsTokensCtrl.$inject = [\"$q\", \"$state\", \"$stateParams\", \"$translate\", \"LogsTokensService\", \"ControllerHelper\", \"CloudMessage\"];\n\n  function LogsTokensCtrl($q, $state, $stateParams, $translate, LogsTokensService, ControllerHelper, CloudMessage) {\n    _classCallCheck(this, LogsTokensCtrl);\n\n    this.$q = $q;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.$translate = $translate;\n    this.LogsTokensService = LogsTokensService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.initLoaders();\n  }\n  /**\n   * load tokens array by making API call to get data\n   *\n   * @memberof LogsTokensCtrl\n   */\n\n\n  _createClass(LogsTokensCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.tokens = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsTokensService.getTokens(_this.serviceName).then(function (tokens) {\n            return tokens.map(function (token) {\n              _.set(token, 'isLoadingCluster', true);\n\n              return token;\n            });\n          });\n        }\n      });\n      this.clusters = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsTokensService.getClusters(_this.serviceName);\n        }\n      });\n      this.tokens.load();\n      this.clusters.load();\n      this.$q.all([this.clusters.promise, this.tokens.promise]).then(function (result) {\n        var clusters = result[0];\n        var tokens = result[1];\n        tokens.map(function (token) {\n          _.set(token, 'cluster', clusters.find(function (cluster) {\n            return cluster.clusterId === token.clusterId;\n          }) || {});\n\n          _.set(token, 'isLoadingCluster', false);\n\n          return token;\n        });\n      });\n    }\n    /**\n     * show delete token confirmation modal\n     *\n     * @param {any} token to delete\n     * @memberof LogsTokensCtrl\n     */\n\n  }, {\n    key: \"showDeleteConfirm\",\n    value: function showDeleteConfirm(token) {\n      var _this2 = this;\n\n      this.CloudMessage.flushChildMessage();\n      return this.ControllerHelper.modal.showDeleteModal({\n        titleText: this.$translate.instant('logs_tokens_delete_title'),\n        textHtml: this.$translate.instant('logs_tokens_delete_message', {\n          tokenName: token.name\n        })\n      }).then(function () {\n        return _this2.remove(token);\n      });\n    }\n  }, {\n    key: \"goToHomePage\",\n    value: function goToHomePage() {\n      this.$state.go('dbaas.logs.detail', {\n        serviceName: this.serviceName\n      });\n    }\n    /**\n     * delete token\n     *\n     * @param {any} token to delete\n     * @memberof LogsTokensCtrl\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(token) {\n      var _this3 = this;\n\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsTokensService.deleteToken(_this3.serviceName, token).then(function () {\n            return _this3.initLoaders();\n          }).finally(function () {\n            return _this3.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      this.delete.load();\n    }\n  }]);\n\n  return LogsTokensCtrl;\n}();\n\nangular.module('managerApp').controller('LogsTokensCtrl', LogsTokensCtrl);",null]}