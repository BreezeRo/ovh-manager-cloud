{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-metrics.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-metrics.service.js","mtime":1539717142205},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerMetricsService =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerMetricsService.$inject = [\"$http\", \"$stateParams\", \"$translate\", \"OvhApiIpLoadBalancing\", \"IpLoadBalancerConstant\"];\n\n  function IpLoadBalancerMetricsService($http, $stateParams, $translate, OvhApiIpLoadBalancing, IpLoadBalancerConstant) {\n    _classCallCheck(this, IpLoadBalancerMetricsService);\n\n    this.$http = $http;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.IpLoadBalancing = OvhApiIpLoadBalancing;\n    this.url = IpLoadBalancerConstant.metricsUrl;\n    this.path = 'query';\n    this.appMetricsQueries = {\n      conn: {\n        queries: [{\n          metric: 'haproxy.stats.stot.rate.max',\n          aggregator: 'sum'\n        }]\n      },\n      reqm: {\n        queries: [{\n          metric: 'haproxy.stats.req_tot.rate.max',\n          aggregator: 'max'\n        }]\n      }\n    };\n  }\n\n  _createClass(IpLoadBalancerMetricsService, [{\n    key: \"getService\",\n    value: function getService(serviceName) {\n      return this.IpLoadBalancing.v6().get({\n        serviceName: serviceName\n      }).$promise;\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return this.IpLoadBalancing.v6().get({\n        serviceName: this.$stateParams.serviceName\n      }).$promise.then(function (details) {\n        return details.metricsToken;\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(metric, start, end, options) {\n      var _this = this;\n\n      var queries = this.appMetricsQueries[metric].queries;\n      var apiQuery = {\n        start: start,\n        end: end,\n        queries: queries\n      };\n      queries.forEach(function (query) {\n        _.assign(query, options);\n      });\n      return this.getToken().then(function (token) {\n        return _this.$http({\n          method: 'POST',\n          url: [_this.url, _this.path].join('/'),\n          headers: {\n            Authorization: \"Basic \".concat(btoa(\"iplb:\".concat(token)))\n          },\n          preventLogout: true,\n          data: JSON.stringify(apiQuery)\n        });\n      }).then(function (response) {\n        return response.data;\n      });\n    }\n  }]);\n\n  return IpLoadBalancerMetricsService;\n}();\n\nangular.module('managerApp').service('IpLoadBalancerMetricsService', IpLoadBalancerMetricsService);",null]}