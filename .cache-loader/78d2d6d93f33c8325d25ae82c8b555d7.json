{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/logs-order.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/logs-order.service.js","mtime":1539717142123},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsOrderService {\n  constructor($q, OvhApiDbaas, ServiceHelper, LogsOfferService) {\n    this.$q = $q;\n    this.OvhApiDbaasLogsOrder = OvhApiDbaas.Order().v6();\n    this.ServiceHelper = ServiceHelper;\n    this.LogsOfferService = LogsOfferService;\n  }\n\n  getOrder(serviceName) {\n    return this.OvhApiDbaasLogsOrder.query({\n      serviceName,\n    }).$promise\n      .then((plans) => {\n        const promises = plans.map(plan => this.LogsOfferService.getOfferDetail(plan.planCode));\n        return this.$q.all(promises).then((planDetails) => {\n          const list = _.map(\n            plans,\n            item => _.extend(item, _.findWhere(planDetails, { reference: item.planCode }),\n              { renewalPrice: this.constructor.getRenewalPrice(item) }),\n          );\n          const sortedList = list.sort((a, b) => a.renewalPrice.value - b.renewalPrice.value);\n          return sortedList;\n        });\n      }).catch(this.ServiceHelper.errorHandler('logs_order_get_error'));\n  }\n\n  static getRenewalPrice(item) {\n    return item.prices.filter(price => price.capacities.indexOf('renew') > -1)[0].price;\n  }\n\n  saveOrder(serviceName, offerDetail) {\n    return this.OvhApiDbaasLogsOrder.saveOrder({\n      serviceName,\n      planCode: offerDetail.selectedOffer,\n    }, {\n      quantity: offerDetail.quantity,\n    }).$promise.catch(this.ServiceHelper.errorHandler('logs_order_save_order'));\n  }\n\n  getOrderCatalog(ovhSubsidiary) {\n    return this.OvhApiDbaasLogsOrder.getCatalog({ ovhSubsidiary }).$promise.catch(this.ServiceHelper.errorHandler('logs_order_get_error'));\n  }\n}\n\nangular.module('managerApp').service('LogsOrderService', LogsOrderService);\n"]}