{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/index/logs-index.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/index/logs-index.controller.js","mtime":1539717142084},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsIndexCtrl {\n  constructor($stateParams, bytesFilter, CloudMessage, ControllerHelper, LogsIndexService,\n    LogsConstants) {\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsIndexService = LogsIndexService;\n    this.LogsConstants = LogsConstants;\n    this.suffixPattern = this.LogsConstants.suffixPattern;\n    this.bytesFilter = bytesFilter;\n    this.initLoaders();\n  }\n\n  initLoaders() {\n    this.indexOptions = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsIndexService.getSubscribedOptions(this.serviceName),\n    });\n\n    this.quota = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsIndexService.getQuota(this.serviceName),\n    });\n\n    this.indices = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsIndexService.getIndices(this.serviceName),\n    });\n\n    this.quota.load();\n    this.indices.load();\n    this.indexOptions.load();\n  }\n\n  add(info) {\n    this.CloudMessage.flushChildMessage();\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/dbaas/logs/detail/index/add/logs-index-add.html',\n        controller: 'LogsIndexAddModalCtrl',\n        controllerAs: 'ctrl',\n        backdrop: 'static',\n        resolve: {\n          serviceName: () => this.serviceName,\n          indexInfo: () => info,\n          options: () => this.indexOptions,\n          quota: () => this.quota,\n        },\n      },\n    }).then(() => {\n      this.initLoaders();\n    });\n  }\n\n  storageColor(info) {\n    const percentage = parseInt((info.currentStorage * 100) / info.maxSize, 10);\n    if (percentage >= 80) {\n      return `oui-status_${this.LogsConstants.indexStorage.error}`;\n    } if (percentage < 60) {\n      return `oui-status_${this.LogsConstants.indexStorage.success}`;\n    } if (percentage >= 60 && percentage < 80) {\n      return `oui-status_${this.LogsConstants.indexStorage.warning}`;\n    }\n    return null;\n  }\n\n  showDeleteConfirm(info) {\n    this.CloudMessage.flushChildMessage();\n    this.LogsIndexService.deleteModal(\n      this.serviceName,\n      info,\n    ).then(() => {\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: () => this.LogsIndexService.deleteIndex(this.serviceName, info)\n          .then(() => this.initLoaders())\n          .finally(() => this.ControllerHelper.scrollPageToTop()),\n      });\n\n      this.delete.load();\n    });\n  }\n}\n\nangular.module('managerApp').controller('LogsIndexCtrl', LogsIndexCtrl);\n"]}