{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/inline-adder/inline-adder.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/inline-adder/inline-adder.controller.js","mtime":1539717142266},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class InlineAdderCtrl {\n  constructor($q) {\n    this.$q = $q;\n  }\n\n  $onInit() {\n    this.onAdd = this.onAdd || null;\n    this.onRemove = this.onRemove || null;\n    this.uniqueProperty = this.uniqueProperty || null;\n\n    this.loadingMap = {};\n  }\n\n  add(item) {\n    let p = this.$q.resolve();\n    if (this.isLoading(item)) {\n      return p;\n    } if (this.onAdd) {\n      this.setLoading(item, true);\n      p = this.onAdd({ item })\n        .finally(() => this.setLoading(item, false));\n    }\n    return p;\n  }\n\n  remove(item) {\n    let p = this.$q.resolve();\n    if (this.isLoading(item)) {\n      return p;\n    } if (this.onRemove) {\n      this.setLoading(item, true);\n      p = this.onRemove({ item })\n        .finally(() => this.setLoading(item, false));\n    }\n    return p;\n  }\n\n  getProperty(item) {\n    if (!this.uniqueProperty) {\n      return item;\n    }\n    const up = this.uniqueProperty.split('.').reduce((prev, curr) => (prev ? prev[curr] : undefined), item);\n    return up;\n  }\n\n  isLoading(item) {\n    const uniqueProperty = this.getProperty(item);\n    if (this.loadingMap[uniqueProperty]) {\n      return true;\n    }\n    return false;\n  }\n\n  setLoading(item, state) {\n    const uniqueProperty = this.getProperty(item);\n    this.loadingMap[uniqueProperty] = state;\n  }\n}\n\nangular.module('managerApp').controller('InlineAdderCtrl', InlineAdderCtrl);\n"]}