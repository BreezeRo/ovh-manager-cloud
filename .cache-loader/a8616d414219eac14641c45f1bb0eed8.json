{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics.js","mtime":1539717374527},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').config(($stateProvider) => {\n  const metricsHeader = {\n    templateUrl: 'app/dbaas/dbaas-metrics/header/metrics-header.html',\n    controller: 'MetricsHeaderCtrl',\n    controllerAs: 'MetricsHeaderCtrl',\n  };\n\n  $stateProvider\n    .state('dbaas.metrics', {\n      url: '/metrics',\n      views: {\n        dbaasContainer: {\n          templateUrl: 'app/dbaas/dbaas-metrics/metrics.html',\n        },\n      },\n      abstract: true,\n      translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail', {\n      url: '/{serviceName}',\n      views: {\n        metricsContainer: {\n          templateUrl: 'app/dbaas/dbaas-metrics/metrics-detail.html',\n          controller: 'MetricsDetailCtrl',\n          controllerAs: 'MetricsDetailCtrl',\n        },\n      },\n      translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail.dashboard', {\n      url: '/dashboard',\n      views: {\n        metricsHeader,\n        metricsContent: {\n          templateUrl: 'app/dbaas/dbaas-metrics/dashboard/metrics-dashboard.html',\n          controller: 'MetricsDashboardCtrl',\n          controllerAs: '$ctrl',\n        },\n      },\n      translations: ['.', './dashboard', './token'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/dashboard/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/dashboard/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail.token', {\n      url: '/token',\n      redirectTo: 'dbaas.metrics.detail.token.home',\n      views: {\n        metricsHeader,\n        metricsContent: {\n          template: `\n                        <div data-ui-view=\"metricsContent\"></div>\n                    `,\n        },\n      },\n      translations: ['.', './token'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail.token.home', {\n      url: '/',\n      views: {\n        metricsContent: {\n          templateUrl: 'app/dbaas/dbaas-metrics/token/metrics-token.html',\n          controller: 'MetricsTokenCtrl',\n          controllerAs: 'MetricsTokenCtrl',\n        },\n      },\n      translations: ['.', './token'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail.token.add', {\n      url: '/add',\n      views: {\n        metricsContent: {\n          templateUrl: 'app/dbaas/dbaas-metrics/token/add/metrics-token-add.html',\n          controller: 'MetricsTokenAddCtrl',\n          controllerAs: '$ctrl',\n        },\n      },\n      translations: ['.', './token', './token/add'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    })\n    .state('dbaas.metrics.detail.platform', {\n      url: '/platform',\n      views: {\n        metricsHeader,\n        metricsContent: {\n          templateUrl: 'app/dbaas/dbaas-metrics/platform/metrics-platform.html',\n          controller: 'MetricsPlatformCtrl',\n          controllerAs: 'MetricsPlatformCtrl',\n        },\n      },\n      translations: ['.', './platform'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                 import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/platform/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/platform/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n    });\n});\n"]}