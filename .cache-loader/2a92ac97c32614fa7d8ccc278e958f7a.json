{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/snapshot/add/cloud-project-compute-snapshot-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/snapshot/add/cloud-project-compute-snapshot-add.controller.js","mtime":1539717142032},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectComputeSnapshotAddCtrl', [\"$uibModalInstance\", \"$translate\", \"$filter\", \"params\", \"CloudMessage\", \"OvhApiCloudProjectSnapshot\", \"atInternet\", \"CloudProjectComputeInfrastructureOrchestrator\", \"CloudProjectComputeSnapshotPriceService\", function CloudProjectComputeSnapshotAddCtrl($uibModalInstance, $translate, $filter, params, CloudMessage, OvhApiCloudProjectSnapshot, atInternet, CloudProjectComputeInfrastructureOrchestrator, CloudProjectComputeSnapshotPriceService) {\n  var self = this;\n  self.snapshot = {\n    vm: params,\n    name: [params.name, $filter('date')(new Date(), 'short')].join(' ')\n  };\n  self.loaders = {\n    backup: false\n  };\n  self.snapshotPriceStruct = {\n    prices: [],\n    size: params.flavor.disk,\n    total: {}\n  };\n\n  self.backup = function backup() {\n    self.loaders.backup = true;\n    OvhApiCloudProjectSnapshot.v6().resetQueryCache();\n    CloudProjectComputeInfrastructureOrchestrator.backupVm(self.snapshot.vm, self.snapshot.name).then(function () {\n      CloudMessage.success($translate.instant('cpc_snapshot_add_success', {\n        snapshotname: self.snapshot.name\n      }));\n      $uibModalInstance.close(self.snapshot);\n      atInternet.trackOrder({\n        name: \"[SNAPSHOT]\".concat(self.snapshot.vm.flavor.groupName.replace(/[\\W_]+/g, ''), \"[\").concat(self.snapshot.vm.flavor.groupName, \"]\"),\n        page: 'iaas::pci-project::compute::infrastructure::order',\n        priceTaxFree: self.snapshotPriceStruct.total.value\n      });\n    }, function (err) {\n      CloudMessage.error([$translate.instant('cpc_snapshot_add_error'), err.data && err.data.message || ''].join(' '));\n    }).finally(function () {\n      self.loaders.backup = false;\n    });\n  };\n\n  self.getPriceData = function getPriceData() {\n    CloudProjectComputeSnapshotPriceService.getSnapshotPrice({\n      size: self.snapshotPriceStruct.size,\n      serviceName: self.snapshot.vm.serviceName,\n      region: self.snapshot.vm.region\n    }).then(function (data) {\n      self.snapshotPriceStruct.prices = [data];\n      self.snapshotPriceStruct.total = data.totalPrice;\n    });\n  };\n\n  self.cancel = function cancel() {\n    $uibModalInstance.dismiss(self.snapshot);\n  };\n\n  self.getPriceData();\n}]);",null]}