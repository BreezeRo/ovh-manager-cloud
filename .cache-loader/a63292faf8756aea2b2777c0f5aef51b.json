{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/alerts/add/alerts-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/alerts/add/alerts-add.controller.js","mtime":1539717142145},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsStreamsAlertsAddCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsStreamsAlertsAddCtrl.$inject = [\"$q\", \"$state\", \"$stateParams\", \"$window\", \"CloudMessage\", \"ControllerHelper\", \"LogsConstants\", \"LogsStreamsAlertsService\"];\n\n  function LogsStreamsAlertsAddCtrl($q, $state, $stateParams, $window, CloudMessage, ControllerHelper, LogsConstants, LogsStreamsAlertsService) {\n    _classCallCheck(this, LogsStreamsAlertsAddCtrl);\n\n    this.$q = $q;\n    this.$state = $state;\n    this.serviceName = $stateParams.serviceName;\n    this.streamId = $stateParams.streamId;\n    this.alertId = $stateParams.alertId;\n    this.alertType = $stateParams.type;\n    this.editMode = Boolean(this.alertId);\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsConstants = LogsConstants;\n    this.LogsConstants = LogsConstants;\n    this.LogsStreamsAlertsService = LogsStreamsAlertsService;\n  }\n\n  _createClass(LogsStreamsAlertsAddCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      if (this.editMode) {\n        this.alert = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this.LogsStreamsAlertsService.getAlert(_this.serviceName, _this.streamId, _this.alertId);\n          }\n        });\n        this.alert.load().then(function (alert) {\n          _this.alertType = alert.conditionType;\n        });\n      } else {\n        this.LogsStreamsAlertsService.getNewAlert(this.alertType).then(function (alert) {\n          _this.alert = alert;\n        });\n      }\n    }\n    /**\n     * Adds a new alert by making an API call\n     *\n     * @memberof LogsStreamsAlertsAddCtrl\n     */\n\n  }, {\n    key: \"saveAlert\",\n    value: function saveAlert() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.savingAlert = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.editMode ? _this2.LogsStreamsAlertsService.updateAlert(_this2.serviceName, _this2.streamId, _this2.alert.data) : _this2.LogsStreamsAlertsService.addAlert(_this2.serviceName, _this2.streamId, _this2.alert.data);\n        }\n      });\n      return this.savingAlert.load().then(function () {\n        return _this2.$state.go('dbaas.logs.detail.streams.alerts');\n      });\n    }\n    /**\n     * Cancels the Alert add operation and redirects\n     * to the parent page\n     *\n     * @memberof LogsStreamsAlertsAddCtrl\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$state.go('dbaas.logs.detail.streams.alerts');\n    }\n    /**\n     * Returns the valid threshold types based on the condition (alert) type\n     *\n     * @memberof LogsStreamsAlertsAddCtrl\n     */\n\n  }, {\n    key: \"getThresholdTypes\",\n    value: function getThresholdTypes() {\n      if (this.alertType === this.LogsConstants.alertType.numeric) {\n        return [this.LogsConstants.thresholdType.lower, this.LogsConstants.thresholdType.higher];\n      }\n\n      return [this.LogsConstants.thresholdType.more, this.LogsConstants.thresholdType.less];\n    }\n    /**\n     * Returns the constraint types\n     *\n     * @memberof LogsStreamsAlertsAddCtrl\n     */\n\n  }, {\n    key: \"getConstraintTypes\",\n    value: function getConstraintTypes() {\n      return Object.values(this.LogsConstants.constraintType);\n    }\n  }]);\n\n  return LogsStreamsAlertsAddCtrl;\n}();\n\nangular.module('managerApp').controller('LogsStreamsAlertsAddCtrl', LogsStreamsAlertsAddCtrl);",null]}