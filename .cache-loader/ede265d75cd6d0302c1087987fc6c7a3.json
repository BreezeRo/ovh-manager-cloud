{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/noVNC/util.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/noVNC/util.js","mtime":1538033442967},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["/*\n * noVNC: HTML5 VNC client\n * Copyright (C) 2012 Joel Martin\n * Licensed under MPL 2.0 (see LICENSE.txt)\n *\n * See README.md for usage and integration instructions.\n */\n\n\"use strict\";\n/*jslint bitwise: false, white: false */\n/*global window, console, document, navigator, ActiveXObject */\n\n// Globals defined here\nvar Util = {};\n\n\n/*\n * Make arrays quack\n */\n\nArray.prototype.push8 = function (num) {\n    this.push(num & 0xFF);\n};\n\nArray.prototype.push16 = function (num) {\n    this.push((num >> 8) & 0xFF,\n              (num     ) & 0xFF  );\n};\nArray.prototype.push32 = function (num) {\n    this.push((num >> 24) & 0xFF,\n              (num >> 16) & 0xFF,\n              (num >>  8) & 0xFF,\n              (num      ) & 0xFF  );\n};\n\n// IE does not support map (even in IE9)\n//This prototype is provided by the Mozilla foundation and\n//is distributed under the MIT license.\n//http://www.ibiblio.org/pub/Linux/LICENSES/mit.license\nif (!Array.prototype.map)\n{\n  Array.prototype.map = function(fun /*, thisp*/)\n  {\n    var len = this.length;\n    if (typeof fun != \"function\")\n      throw new TypeError();\n\n    var res = new Array(len);\n    var thisp = arguments[1];\n    for (var i = 0; i < len; i++)\n    {\n      if (i in this)\n        res[i] = fun.call(thisp, this[i], i, this);\n    }\n\n    return res;\n  };\n}\n\n// \n// requestAnimationFrame shim with setTimeout fallback\n//\n\nwindow.requestAnimFrame = (function(){\n    return  window.requestAnimationFrame       || \n            window.webkitRequestAnimationFrame || \n            window.mozRequestAnimationFrame    || \n            window.oRequestAnimationFrame      || \n            window.msRequestAnimationFrame     || \n            function(callback){\n                window.setTimeout(callback, 1000 / 60);\n            };\n})();\n\n/* \n * ------------------------------------------------------\n * Namespaced in Util\n * ------------------------------------------------------\n */\n\n/*\n * Logging/debug routines\n */\n\nUtil._log_level = 'warn';\nUtil.init_logging = function (level) {\n    if (typeof level === 'undefined') {\n        level = Util._log_level;\n    } else {\n        Util._log_level = level;\n    }\n    if (typeof window.console === \"undefined\") {\n        if (typeof window.opera !== \"undefined\") {\n            window.console = {\n                'log'  : window.opera.postError,\n                'warn' : window.opera.postError,\n                'error': window.opera.postError };\n        } else {\n            window.console = {\n                'log'  : function(m) {},\n                'warn' : function(m) {},\n                'error': function(m) {}};\n        }\n    }\n\n    Util.Debug = Util.Info = Util.Warn = Util.Error = function (msg) {};\n    switch (level) {\n        case 'debug': Util.Debug = function (msg) { console.log(msg); };\n        case 'info':  Util.Info  = function (msg) { console.log(msg); };\n        case 'warn':  Util.Warn  = function (msg) { console.warn(msg); };\n        case 'error': Util.Error = function (msg) { console.error(msg); };\n        case 'none':\n            break;\n        default:\n            throw(\"invalid logging type '\" + level + \"'\");\n    }\n};\nUtil.get_logging = function () {\n    return Util._log_level;\n};\n// Initialize logging level\nUtil.init_logging();\n\n\n// Set configuration default for Crockford style function namespaces\nUtil.conf_default = function(cfg, api, defaults, v, mode, type, defval, desc) {\n    var getter, setter;\n\n    // Default getter function\n    getter = function (idx) {\n        if ((type in {'arr':1, 'array':1}) &&\n            (typeof idx !== 'undefined')) {\n            return cfg[v][idx];\n        } else {\n            return cfg[v];\n        }\n    };\n\n    // Default setter function\n    setter = function (val, idx) {\n        if (type in {'boolean':1, 'bool':1}) {\n            if ((!val) || (val in {'0':1, 'no':1, 'false':1})) {\n                val = false;\n            } else {\n                val = true;\n            }\n        } else if (type in {'integer':1, 'int':1}) {\n            val = parseInt(val, 10);\n        } else if (type === 'str') {\n            val = String(val);\n        } else if (type === 'func') {\n            if (!val) {\n                val = function () {};\n            }\n        }\n        if (typeof idx !== 'undefined') {\n            cfg[v][idx] = val;\n        } else {\n            cfg[v] = val;\n        }\n    };\n\n    // Set the description\n    api[v + '_description'] = desc;\n\n    // Set the getter function\n    if (typeof api['get_' + v] === 'undefined') {\n        api['get_' + v] = getter;\n    }\n\n    // Set the setter function with extra sanity checks\n    if (typeof api['set_' + v] === 'undefined') {\n        api['set_' + v] = function (val, idx) {\n            if (mode in {'RO':1, 'ro':1}) {\n                throw(v + \" is read-only\");\n            } else if ((mode in {'WO':1, 'wo':1}) &&\n                       (typeof cfg[v] !== 'undefined')) {\n                throw(v + \" can only be set once\");\n            }\n            setter(val, idx);\n        };\n    }\n\n    // Set the default value\n    if (typeof defaults[v] !== 'undefined') {\n        defval = defaults[v];\n    } else if ((type in {'arr':1, 'array':1}) &&\n            (! (defval instanceof Array))) {\n        defval = [];\n    }\n    // Coerce existing setting to the right type\n    //Util.Debug(\"v: \" + v + \", defval: \" + defval + \", defaults[v]: \" + defaults[v]);\n    setter(defval);\n};\n\n// Set group of configuration defaults\nUtil.conf_defaults = function(cfg, api, defaults, arr) {\n    var i;\n    for (i = 0; i < arr.length; i++) {\n        Util.conf_default(cfg, api, defaults, arr[i][0], arr[i][1],\n                arr[i][2], arr[i][3], arr[i][4]);\n    }\n};\n\n\n/*\n * Cross-browser routines\n */\n\n\n// Dynamically load scripts without using document.write()\n// Reference: http://unixpapa.com/js/dyna.html\n//\n// Handles the case where load_scripts is invoked from a script that\n// itself is loaded via load_scripts. Once all scripts are loaded the\n// window.onscriptsloaded handler is called (if set).\nUtil.get_include_uri = function() {\n    return (typeof INCLUDE_URI !== \"undefined\") ? INCLUDE_URI : \"include/\";\n}\nUtil._loading_scripts = [];\nUtil._pending_scripts = [];\nUtil.load_scripts = function(files) {\n    var head = document.getElementsByTagName('head')[0], script,\n        ls = Util._loading_scripts, ps = Util._pending_scripts;\n    for (var f=0; f<files.length; f++) {\n        script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = Util.get_include_uri() + files[f];\n        //console.log(\"loading script: \" + script.src);\n        script.onload = script.onreadystatechange = function (e) {\n            while (ls.length > 0 && (ls[0].readyState === 'loaded' ||\n                                     ls[0].readyState === 'complete')) {\n                // For IE, append the script to trigger execution\n                var s = ls.shift();\n                //console.log(\"loaded script: \" + s.src);\n                head.appendChild(s);\n            }\n            if (!this.readyState ||\n                (Util.Engine.presto && this.readyState === 'loaded') ||\n                this.readyState === 'complete') {\n                if (ps.indexOf(this) >= 0) {\n                    this.onload = this.onreadystatechange = null;\n                    //console.log(\"completed script: \" + this.src);\n                    ps.splice(ps.indexOf(this), 1);\n\n                    // Call window.onscriptsload after last script loads\n                    if (ps.length === 0 && window.onscriptsload) {\n                        window.onscriptsload();\n                    }\n                }\n            }\n        };\n        // In-order script execution tricks\n        if (Util.Engine.trident) {\n            // For IE wait until readyState is 'loaded' before\n            // appending it which will trigger execution\n            // http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\n            ls.push(script);\n        } else {\n            // For webkit and firefox set async=false and append now\n            // https://developer.mozilla.org/en-US/docs/HTML/Element/script\n            script.async = false;\n            head.appendChild(script);\n        }\n        ps.push(script);\n    }\n}\n\n// Get DOM element position on page\n//  This solution is based based on http://www.greywyvern.com/?post=331\n//  Thanks to Brian Huisman AKA GreyWyvern!\nUtil.getPosition = (function() {\n    function getStyle(obj, styleProp) {\n        if (obj.currentStyle) {\n            var y = obj.currentStyle[styleProp];\n        } else if (window.getComputedStyle)\n            var y = window.getComputedStyle(obj, null)[styleProp];\n        return y;\n    };\n\n    function scrollDist() {\n        var myScrollTop, myScrollLeft;\n        var html = document.getElementsByTagName('html')[0];\n\n        // get the scrollTop part\n        if (html.scrollTop && document.documentElement.scrollTop)\n            {myScrollTop = html.scrollTop;}\n        else if (html.scrollTop || document.documentElement.scrollTop)\n            {myScrollTop = html.scrollTop + document.documentElement.scrollTop;}\n        else if (document.body.scrollTop)\n            {myScrollTop = document.body.scrollTop;}\n        else {myScrollTop = 0;}\n\n        // get the scrollLeft part\n        if (html.scrollLeft && document.documentElement.scrollLeft)\n            {myScrollLeft = html.scrollLeft;}\n        else if (html.scrollLeft || document.documentElement.scrollLeft)\n            {myScrollLeft = html.scrollLeft + document.documentElement.scrollLeft;}\n        else if (document.body.scrollLeft)\n            {myScrollLeft = document.body.scrollLeft;}\n        else {myScrollLeft = 0;}\n\n        return [myScrollLeft, myScrollTop];\n    };\n\n    return function (obj) {\n      var curleft = 0, curtop = 0, scr = obj, fixed = false;\n      while ((scr = scr.parentNode) && scr != document.body) {\n        curleft -= scr.scrollLeft || 0;\n        curtop -= scr.scrollTop || 0;\n        if (getStyle(scr, \"position\") == \"fixed\") fixed = true;\n      }\n      if (fixed && !window.opera) {\n        var scrDist = scrollDist();\n        curleft += scrDist[0];\n        curtop += scrDist[1];\n      }\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while (obj = obj.offsetParent);\n      return {'x': curleft, 'y': curtop};\n     }\n})();\n\n\n// Get mouse event position in DOM element\nUtil.getEventPosition = function (e, obj, scale) {\n    var evt, docX, docY, pos;\n    //if (!e) evt = window.event;\n    evt = (e ? e : window.event);\n    evt = (evt.changedTouches ? evt.changedTouches[0] : evt.touches ? evt.touches[0] : evt);\n    if (evt.pageX || evt.pageY) {\n        docX = evt.pageX;\n        docY = evt.pageY;\n    } else if (evt.clientX || evt.clientY) {\n        docX = evt.clientX + document.body.scrollLeft +\n            document.documentElement.scrollLeft;\n        docY = evt.clientY + document.body.scrollTop +\n            document.documentElement.scrollTop;\n    }\n    pos = Util.getPosition(obj);\n    if (typeof scale === \"undefined\") {\n        scale = 1;\n    }\n    var realx = docX - pos.x;\n    var realy = docY - pos.y;\n    var x = Math.max(Math.min(realx, obj.width-1), 0);\n    var y = Math.max(Math.min(realy, obj.height-1), 0);\n    return {'x': x / scale, 'y': y / scale, 'realx': realx / scale, 'realy': realy / scale};\n};\n\n\n// Event registration. Based on: http://www.scottandrew.com/weblog/articles/cbs-events\nUtil.addEvent = function (obj, evType, fn){\n    if (obj.attachEvent){\n        var r = obj.attachEvent(\"on\"+evType, fn);\n        return r;\n    } else if (obj.addEventListener){\n        obj.addEventListener(evType, fn, false); \n        return true;\n    } else {\n        throw(\"Handler could not be attached\");\n    }\n};\n\nUtil.removeEvent = function(obj, evType, fn){\n    if (obj.detachEvent){\n        var r = obj.detachEvent(\"on\"+evType, fn);\n        return r;\n    } else if (obj.removeEventListener){\n        obj.removeEventListener(evType, fn, false);\n        return true;\n    } else {\n        throw(\"Handler could not be removed\");\n    }\n};\n\nUtil.stopEvent = function(e) {\n    if (e.stopPropagation) { e.stopPropagation(); }\n    else                   { e.cancelBubble = true; }\n\n    if (e.preventDefault)  { e.preventDefault(); }\n    else                   { e.returnValue = false; }\n};\n\n\n// Set browser engine versions. Based on mootools.\nUtil.Features = {xpath: !!(document.evaluate), air: !!(window.runtime), query: !!(document.querySelector)};\n\nUtil.Engine = {\n    // Version detection break in Opera 11.60 (errors on arguments.callee.caller reference)\n    //'presto': (function() {\n    //         return (!window.opera) ? false : ((arguments.callee.caller) ? 960 : ((document.getElementsByClassName) ? 950 : 925)); }()),\n    'presto': (function() { return (!window.opera) ? false : true; }()),\n\n    'trident': (function() {\n            return (!window.ActiveXObject) ? false : ((window.XMLHttpRequest) ? ((document.querySelectorAll) ? 6 : 5) : 4); }()),\n    'webkit': (function() {\n            try { return (navigator.taintEnabled) ? false : ((Util.Features.xpath) ? ((Util.Features.query) ? 525 : 420) : 419); } catch (e) { return false; } }()),\n    //'webkit': (function() {\n    //        return ((typeof navigator.taintEnabled !== \"unknown\") && navigator.taintEnabled) ? false : ((Util.Features.xpath) ? ((Util.Features.query) ? 525 : 420) : 419); }()),\n    'gecko': (function() {\n            return (!document.getBoxObjectFor && window.mozInnerScreenX == null) ? false : ((document.getElementsByClassName) ? 19 : 18); }())\n};\nif (Util.Engine.webkit) {\n    // Extract actual webkit version if available\n    Util.Engine.webkit = (function(v) {\n            var re = new RegExp('WebKit/([0-9\\.]*) ');\n            v = (navigator.userAgent.match(re) || ['', v])[1];\n            return parseFloat(v, 10);\n        })(Util.Engine.webkit);\n}\n\nUtil.Flash = (function(){\n    var v, version;\n    try {\n        v = navigator.plugins['Shockwave Flash'].description;\n    } catch(err1) {\n        try {\n            v = new ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version');\n        } catch(err2) {\n            v = '0 r0';\n        }\n    }\n    version = v.match(/\\d+/g);\n    return {version: parseInt(version[0] || 0 + '.' + version[1], 10) || 0, build: parseInt(version[2], 10) || 0};\n}()); \n"]}