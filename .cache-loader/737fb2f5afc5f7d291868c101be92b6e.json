{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.service.js","mtime":1539717142184},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class DeskaasService {\n  constructor(OvhApiDeskaasService, OvhApiMe, deskaasSidebar, DESKAAS_REFERENCES) {\n    this.OvhApiDeskaasService = OvhApiDeskaasService;\n    this.OvhApiMe = OvhApiMe;\n    this.deskaasSidebar = deskaasSidebar;\n    this.DESKAAS_REFERENCES = DESKAAS_REFERENCES;\n    this.OrderPlanOffers = [];\n  }\n\n  getMe() {\n    return this.OvhApiMe.v6().get().$promise;\n  }\n\n  fetchProductPlans(me) {\n    // Use the catalog to get Product for deskaas\n    const promise = this.OvhApiDeskaasService.v6()\n      .getProducts({ ovhSubsidiary: me.ovhSubsidiary }).$promise;\n    promise.then((catalog) => {\n      const newOrderPlanOffers = {};\n      catalog.plans.forEach((catalogEntry) => {\n        newOrderPlanOffers[catalogEntry.planCode] = {\n          planCode: catalogEntry.planCode,\n          priceInUcents: catalogEntry.details.pricings.default[0].priceInUcents,\n          productName: catalogEntry.invoiceName,\n          priceText: catalogEntry.details.pricings.default[0].price.text,\n        };\n      });\n      this.OrderPlanOffers = newOrderPlanOffers;\n    });\n    return promise;\n  }\n\n  getUpgradeOptions(planCode) {\n    const ref = [];\n    const curRef = this.DESKAAS_REFERENCES[planCode];\n    if (curRef) {\n      curRef.upgrades.forEach((upgrade) => {\n        if (this.DESKAAS_REFERENCES[upgrade] && this.OrderPlanOffers[upgrade]) {\n          this.DESKAAS_REFERENCES[upgrade].priceText = this.OrderPlanOffers[upgrade].priceText;\n          ref.push(this.DESKAAS_REFERENCES[upgrade]);\n        }\n      });\n    } else {\n      console.log(`Error: PlanCode ${planCode} not known`);\n    }\n    return ref;\n  }\n\n  getDetails(serviceName) {\n    return this.OvhApiDeskaasService.v6().getDetails({ serviceName }).$promise\n      .then((response) => {\n        this.deskaasSidebar.updateItem(response);\n        return response;\n      });\n  }\n}\n\nangular.module('managerApp').service('DeskaasService', DeskaasService);\n"]}