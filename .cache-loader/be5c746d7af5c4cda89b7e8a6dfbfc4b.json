{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/auth/auth.config.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/auth/auth.config.js","mtime":1539717142349},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').config([\"ssoAuthenticationProvider\", \"ssoAuthModalPluginFctProvider\", \"$httpProvider\", \"CONFIG_API\", function (ssoAuthenticationProvider, ssoAuthModalPluginFctProvider, $httpProvider, CONFIG_API) {\n  ssoAuthenticationProvider.setLoginUrl(CONFIG_API.loginUrl);\n  ssoAuthenticationProvider.setLogoutUrl(\"\".concat(CONFIG_API.loginUrl, \"?action=disconnect\"));\n\n  if (CONFIG_API.userUrl) {\n    ssoAuthenticationProvider.setUserUrl(CONFIG_API.userUrl);\n  }\n\n  ssoAuthenticationProvider.setConfig(CONFIG_API.apis);\n  $httpProvider.interceptors.push('ssoAuthInterceptor');\n}]).run([\"$transitions\", \"ssoAuthentication\", function ($transitions, ssoAuthentication) {\n  ssoAuthentication.login(); // use of onStateChangeStart event to detect if state needs authentification\n  // this is useful when application is first runned\n\n  ssoAuthentication.isLogged().then(function (isLogged) {\n    $transitions.onStart({}, function (transition) {\n      var toState = transition.to();\n      var needToBeAuthenticate = toState.authenticate !== undefined ? toState.authenticate : true;\n\n      if (needToBeAuthenticate && !isLogged) {\n        event.preventDefault(); // eslint-disable-line\n\n        ssoAuthentication.goToLoginPage();\n      }\n    });\n  });\n}]);",null]}