{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/compute/infrastructure/infrastructure.factory.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/compute/infrastructure/infrastructure.factory.js","mtime":1539717142382},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').factory('CloudProjectComputeInfrastructureFactory', [\"CloudProjectComputeInfraVrackFactory\", \"CloudProjectComputeInfraInternetFactory\", \"CloudProjectComputeInfraVrackVlanFactory\", function (CloudProjectComputeInfraVrackFactory, CloudProjectComputeInfraInternetFactory, CloudProjectComputeInfraVrackVlanFactory) {\n  /**\n   *  Defines a cloud project compute infrastructure\n   *\n   *  @param    {Object}  optionsParam\n   *                      Options for creating a new CloudProjectInfrastructure\n   *  @param    {Object}  optionsParam.vrack\n   *                      Options of the CloudProjectComputeInfrastructure Vrack\n   *  @param    {Object}  optionsParam.internet\n   *                      Options of the CloudProjectComputeInfrastructure Internet\n   */\n  var InfrastructureFactory = function () {\n    return function CloudProjectComputeInfrastructureFactory(optionsParam) {\n      var options = optionsParam;\n\n      if (!options) {\n        options = {};\n      }\n\n      this.serviceName = options.serviceName || null;\n      this.vrack = new CloudProjectComputeInfraVrackFactory(angular.extend(options.vrack || {}, {\n        serviceName: this.serviceName\n      }));\n      this.vlan = new CloudProjectComputeInfraVrackVlanFactory(angular.extend(options.vrack || {}, {\n        serviceName: this.serviceName\n      }));\n      this.internet = new CloudProjectComputeInfraInternetFactory(angular.extend(options.internet || {}, {\n        serviceName: this.serviceName\n      }));\n    };\n  }(); // /////////////////////////////\n  // /         METHODS          //\n  // /////////////////////////////\n\n  /**\n   *  Given an IP, it will refresh \"routedTo\" of VMs where this IP is routed.\n   *  Note: If VM is not present anymore, delete its ID from the routedTo of the IP.\n   *\n   *  We need to ensure that the arrays of \"routedTo\" are sync between VMs and IPs.\n   *  Because a VM can appear before an IP (or reverse),\n   *  jsPlumb will not draw a link if the endpoint is not present.\n   *  /!\\ Please put only REAL links in routedTo (aka present in API), not fake one.\n   */\n\n\n  InfrastructureFactory.prototype.refreshVmsRoutedToFromIp = function (ip) {\n    var routedVm;\n    var routedToToRemove = [];\n    var self = this;\n    angular.forEach(ip.routedTo, function (routedVmId) {\n      routedVm = self.vrack.publicCloud.items[routedVmId];\n\n      if (!routedVm) {\n        routedToToRemove.push(routedVmId);\n        return;\n      }\n\n      if (!~routedVm.routedTo.indexOf(ip.id)) {\n        routedVm.routedTo.push(ip.id);\n      }\n    }); // VMs are not present anymore: delete the VMs ID from IP's routedTo\n\n    if (routedToToRemove.length) {\n      _.set(ip, 'routedTo', _.difference(ip.routedTo, routedToToRemove));\n    }\n\n    return ip;\n  }; // ---\n\n  /**\n       *  Prepare object to json encode function to avoid function being encoded\n       */\n\n\n  InfrastructureFactory.prototype.prepareToJson = function () {\n    return {\n      vrack: this.vrack.prepareToJson(),\n      internet: this.internet.prepareToJson()\n    };\n  };\n\n  return InfrastructureFactory;\n}]);",null]}