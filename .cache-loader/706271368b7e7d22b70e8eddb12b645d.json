{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/loginInformation/cloud-project-compute-infrastructure-virtual-machine-login-information.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/loginInformation/cloud-project-compute-infrastructure-virtual-machine-login-information.controller.js","mtime":1539717142011},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl =\n  /*#__PURE__*/\n  function () {\n    CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl.$inject = [\"$uibModalInstance\", \"params\", \"$q\", \"$state\", \"$translate\", \"CloudMessage\", \"Poller\", \"OvhApiCloudProjectInstance\", \"CloudImageService\"];\n\n    function CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl($uibModalInstance, params, $q, $state, $translate, CloudMessage, Poller, OvhApiCloudProjectInstance, CloudImageService) {\n      _classCallCheck(this, CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl);\n\n      this.$uibModalInstance = $uibModalInstance;\n      this.$q = $q;\n      this.$state = $state;\n      this.$translate = $translate;\n      this.CloudMessage = CloudMessage;\n      this.Poller = Poller;\n      this.OvhApiCloudProjectInstance = OvhApiCloudProjectInstance;\n      this.CloudImageService = CloudImageService;\n      this.loading = true;\n      this.poller = false;\n      this.readOnlyError = false;\n      this.data = {\n        vm: params,\n        ip: null,\n        image: {},\n        isWindows: false,\n        hasApplication: false,\n        applicationInfo: []\n      };\n    }\n\n    _createClass(CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        var _this = this;\n\n        this.loading = true;\n        this.getLoginInfo().catch(function (error) {\n          _this.CloudMessage.error(\"\".concat(_this.$translate.instant('login_information_error'), \" \").concat(error.data.message));\n        }).then(function () {\n          _this.data.hasApplication = _this.data.image.apps;\n\n          if (_this.data.hasApplication) {\n            _this.pollApplicationInfo(_this.data.vm.serviceName, _this.data.vm.id);\n          }\n        }).finally(function () {\n          _this.data.isWindows = _this.data.image.type === 'windows';\n          _this.loading = false;\n        });\n      }\n    }, {\n      key: \"displayLoginInfo\",\n      value: function displayLoginInfo() {\n        var user = this.data.image.user || 'user';\n        var ip = this.data.ip && this.data.ip.ip || 'X.X.X.X';\n\n        if (!this.data.isWindows) {\n          return \"ssh \".concat(user, \"@\").concat(ip);\n        }\n\n        return \"rdesktop \".concat(ip);\n      }\n    }, {\n      key: \"getLoginInfo\",\n      value: function getLoginInfo() {\n        var _this2 = this;\n\n        if (_.has(this.data.vm.ipAddresses, 'length') && this.data.vm.image) {\n          this.data.ip = this.constructor.getIp(this.data.vm.ipAddresses);\n          this.data.image = this.CloudImageService.constructor.augmentImage(this.data.vm.image);\n          return this.$q.resolve({});\n        }\n\n        return this.OvhApiCloudProjectInstance.v6().get({\n          serviceName: this.data.vm.serviceName,\n          instanceId: this.data.vm.id\n        }).$promise.then(function (instance) {\n          if (!instance.image) {\n            return _this2.$q.reject({});\n          }\n\n          _this2.data.ip = _this2.constructor.getIp(instance.ipAddresses);\n          _this2.data.image = _this2.CloudImageService.constructor.augmentImage(instance.image);\n          return null;\n        });\n      }\n    }, {\n      key: \"pollApplicationInfo\",\n      value: function pollApplicationInfo(serviceName, instanceId) {\n        var _this3 = this;\n\n        this.poller = true;\n        this.Poller.poll(\"/cloud/project/\".concat(serviceName, \"/instance/\").concat(instanceId, \"/applicationAccess\"), null, {\n          method: 'POST',\n          successRule: function successRule(appInfo) {\n            return appInfo.status === 'ok';\n          },\n          namespace: 'cloud.loginInformation'\n        }).then(function (appInfo) {\n          _this3.data.applicationInfo = appInfo.accesses;\n        }, function (error) {\n          var readonly = error.statusText === 'ReadonlySession';\n          _this3.readOnlyError = readonly;\n\n          if (!readonly) {\n            _this3.CloudMessage.error(\"\".concat(_this3.$translate.instant('login_information_error'), \" \").concat(error.data.message));\n          }\n        }).finally(function () {\n          _this3.poller = false;\n        });\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this.Poller.kill({\n          namespace: 'cloud.loginInformation'\n        });\n        this.$uibModalInstance.dismiss();\n      }\n    }, {\n      key: \"goToConsole\",\n      value: function goToConsole() {\n        this.Poller.kill({\n          namespace: 'cloud.loginInformation'\n        });\n        this.$uibModalInstance.close(this.data.vm.id);\n      }\n    }], [{\n      key: \"getIp\",\n      value: function getIp(ipAddresses) {\n        return _.find(ipAddresses, {\n          version: 4\n        }) || ipAddresses[0] || null;\n      }\n    }]);\n\n    return CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl;\n  }();\n\n  angular.module('managerApp').controller('CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl', CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl);\n})();",null]}