{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/logs-order.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/logs-order.service.js","mtime":1539717142123},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsOrderService =\n/*#__PURE__*/\nfunction () {\n  LogsOrderService.$inject = [\"$q\", \"OvhApiDbaas\", \"ServiceHelper\", \"LogsOfferService\"];\n\n  function LogsOrderService($q, OvhApiDbaas, ServiceHelper, LogsOfferService) {\n    _classCallCheck(this, LogsOrderService);\n\n    this.$q = $q;\n    this.OvhApiDbaasLogsOrder = OvhApiDbaas.Order().v6();\n    this.ServiceHelper = ServiceHelper;\n    this.LogsOfferService = LogsOfferService;\n  }\n\n  _createClass(LogsOrderService, [{\n    key: \"getOrder\",\n    value: function getOrder(serviceName) {\n      var _this = this;\n\n      return this.OvhApiDbaasLogsOrder.query({\n        serviceName: serviceName\n      }).$promise.then(function (plans) {\n        var promises = plans.map(function (plan) {\n          return _this.LogsOfferService.getOfferDetail(plan.planCode);\n        });\n        return _this.$q.all(promises).then(function (planDetails) {\n          var list = _.map(plans, function (item) {\n            return _.extend(item, _.findWhere(planDetails, {\n              reference: item.planCode\n            }), {\n              renewalPrice: _this.constructor.getRenewalPrice(item)\n            });\n          });\n\n          var sortedList = list.sort(function (a, b) {\n            return a.renewalPrice.value - b.renewalPrice.value;\n          });\n          return sortedList;\n        });\n      }).catch(this.ServiceHelper.errorHandler('logs_order_get_error'));\n    }\n  }, {\n    key: \"saveOrder\",\n    value: function saveOrder(serviceName, offerDetail) {\n      return this.OvhApiDbaasLogsOrder.saveOrder({\n        serviceName: serviceName,\n        planCode: offerDetail.selectedOffer\n      }, {\n        quantity: offerDetail.quantity\n      }).$promise.catch(this.ServiceHelper.errorHandler('logs_order_save_order'));\n    }\n  }, {\n    key: \"getOrderCatalog\",\n    value: function getOrderCatalog(ovhSubsidiary) {\n      return this.OvhApiDbaasLogsOrder.getCatalog({\n        ovhSubsidiary: ovhSubsidiary\n      }).$promise.catch(this.ServiceHelper.errorHandler('logs_order_get_error'));\n    }\n  }], [{\n    key: \"getRenewalPrice\",\n    value: function getRenewalPrice(item) {\n      return item.prices.filter(function (price) {\n        return price.capacities.indexOf('renew') > -1;\n      })[0].price;\n    }\n  }]);\n\n  return LogsOrderService;\n}();\n\nangular.module('managerApp').service('LogsOrderService', LogsOrderService);",null]}