{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/backup-storage/vps-backup-storage.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/backup-storage/vps-backup-storage.controller.js","mtime":1539717142287},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsBackupStorageCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsBackupStorageCtrl.$inject = [\"$stateParams\", \"ControllerHelper\", \"VpsActionService\", \"VpsService\"];\n\n  function VpsBackupStorageCtrl($stateParams, ControllerHelper, VpsActionService, VpsService) {\n    _classCallCheck(this, VpsBackupStorageCtrl);\n\n    this.serviceName = $stateParams.serviceName;\n    this.ControllerHelper = ControllerHelper;\n    this.VpsActionService = VpsActionService;\n    this.VpsService = VpsService;\n  }\n\n  _createClass(VpsBackupStorageCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.backup = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.VpsService.getBackupStorageTab(_this.serviceName);\n        }\n      });\n      this.info = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.VpsService.getBackupStorageInformation(_this.serviceName);\n        }\n      });\n      this.vps = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.VpsService.getSelectedVps(_this.serviceName);\n        }\n      });\n    }\n  }, {\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this2 = this;\n\n      this.initLoaders();\n      this.backup.load();\n      this.info.load().then(function () {\n        if (!_this2.info.data.activated) {\n          _this2.vps.load();\n        }\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var _this3 = this;\n\n      this.VpsActionService.addBackupStorage(this.serviceName).then(function () {\n        return _this3.backup.load();\n      });\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword() {\n      this.VpsActionService.resetPasswordBackupStorage(this.serviceName);\n    }\n  }, {\n    key: \"deleteOne\",\n    value: function deleteOne(access) {\n      var _this4 = this;\n\n      this.VpsActionService.deleteBackupStorage(this.serviceName, access).then(function () {\n        return _this4.backup.load();\n      });\n    }\n  }, {\n    key: \"editOne\",\n    value: function editOne(row) {\n      var _this5 = this;\n\n      this.VpsActionService.editBackupStorage(this.serviceName, row).then(function () {\n        return _this5.backup.load();\n      });\n    }\n  }]);\n\n  return VpsBackupStorageCtrl;\n}();\n\nangular.module('managerApp').controller('VpsBackupStorageCtrl', VpsBackupStorageCtrl);",null]}