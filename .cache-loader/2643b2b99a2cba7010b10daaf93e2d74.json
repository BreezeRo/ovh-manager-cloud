{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/tokens/add/logs-token-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/tokens/add/logs-token-add.controller.js","mtime":1539717142153},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsTokenAddCtrl {\n  constructor($q, $stateParams, $uibModalInstance, LogsTokensService, ControllerHelper,\n    CloudMessage) {\n    this.$q = $q;\n    this.$stateParams = $stateParams;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsTokensService = LogsTokensService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.initLoaders();\n  }\n\n  /**\n   * initializes token\n   *\n   * @memberof LogsTokenAddCtrl\n   */\n  initLoaders() {\n    this.token = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsTokensService.getNewToken(this.serviceName),\n    });\n    this.token.load();\n    this.clusters = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsTokensService.getClusters(this.serviceName),\n    });\n    this.clusters.load();\n  }\n\n  /**\n   * create new token\n   *\n   * @memberof LogsTokenAddCtrl\n   */\n  createToken() {\n    if (this.form.$invalid) {\n      return this.$q.reject();\n    }\n    this.CloudMessage.flushChildMessage();\n    this.saving = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsTokensService.createToken(this.serviceName, this.token.data)\n        .finally(() => {\n          this.$uibModalInstance.close();\n          this.ControllerHelper.scrollPageToTop();\n        }),\n    });\n    return this.saving.load();\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n}\n\nangular.module('managerApp').controller('LogsTokenAddCtrl', LogsTokenAddCtrl);\n"]}