{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/common/cloud-navigation.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/common/cloud-navigation.service.js","mtime":1539717142058},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudNavigation {\n  constructor($transitions, $state, $stateParams, TabsService) {\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.TabsService = TabsService;\n\n    this.rootElement = undefined;\n\n    $transitions.onSuccess({}, (transition) => {\n      const toState = transition.to();\n      const toParams = transition.params();\n      const fromState = transition.from();\n      const fromParams = transition.params('from');\n      const correspondingState = _.find(\n        this.history,\n        elem => elem.state === toState.name && _.isEqual(elem.stateParams, toParams),\n      );\n\n      if (correspondingState) {\n        while (_.last(this.history) !== correspondingState) { this.history.pop(); }\n        this.history.pop();\n      } else {\n        const element = {\n          state: fromState.name,\n          stateParams: fromParams,\n          sref: this.constructor.getSref({ state: fromState.name }, fromParams),\n        };\n        this.history.push(element);\n      }\n    });\n  }\n\n  $onInit() {\n    this.init();\n  }\n\n  init(rootElement) {\n    this.history = [];\n    this.rootElement = undefined;\n    if (rootElement) {\n      this.rootElement = rootElement;\n    }\n  }\n\n  getPreviousState() {\n    const previousState = _.last(this.history) || this.getActiveTabState() || this.rootElement;\n    previousState.go = () => this.$state.go(previousState.state, previousState.stateParams);\n    return previousState;\n  }\n\n  getActiveTabState() {\n    return this.TabsService.getActiveTab();\n  }\n\n  findInHistory(stateToFind) {\n    return _.find(\n      this.history,\n      state => state.state === stateToFind.state\n        && _.isEqual(state.stateParams, stateToFind.stateParams),\n    );\n  }\n\n  static getSref(element, params) {\n    return `${element.state}(${JSON.stringify(params)})`;\n  }\n}\n\nangular.module('managerApp').service('CloudNavigation', CloudNavigation);\n"]}