{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/backup-storage/add-backup-storage.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/backup-storage/add-backup-storage.controller.js","mtime":1539717142291},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class AddBackupStorageCtrl {\n  constructor($translate, $uibModalInstance, ControllerHelper, CloudMessage, serviceName,\n    VpsService) {\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.ControllerHelper = ControllerHelper;\n    this.serviceName = serviceName;\n    this.CloudMessage = CloudMessage;\n    this.VpsService = VpsService;\n\n    this.loader = {\n      init: false,\n      save: false,\n    };\n    this.available = [];\n    this.model = {\n      ip: null,\n      ftp: false,\n      cifs: false,\n      nfs: false,\n    };\n  }\n\n  $onInit() {\n    this.loader.init = true;\n    this.loadAvailableIpBlocks();\n  }\n\n  isAvailable() {\n    return !_.isEmpty(this.available);\n  }\n\n  validateCheckboxes() {\n    return this.model.ftp || this.model.cifs || this.model.nfs;\n  }\n\n  loadAvailableIpBlocks() {\n    this.ipBlocks = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.getBackupStorageAuthorizableBlocks(this.serviceName)\n        .then((data) => { this.available = data; })\n        .catch(() => this.CloudMessage.error(this.$translate.instant('vps_backup_storage_access_add_ip_failure')))\n        .finally(() => { this.loader.init = false; }),\n    });\n    return this.ipBlocks.load();\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n\n  confirm() {\n    if (!this.isAvailable()) {\n      return this.cancel();\n    }\n    this.CloudMessage.flushChildMessage();\n    this.addStorage = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService\n        .postBackupStorageAccess(\n          this.serviceName,\n          this.model.ip,\n          this.model.ftp,\n          this.model.nfs,\n          this.model.cifs,\n        )\n        .then((data) => {\n          if (data.state === 'ERROR') {\n            this.CloudMessage.error(_.get(data, 'messages[0].message', false) || this.$translate.instant('vps_backup_storage_access_add_failure'));\n          } else {\n            this.CloudMessage.success(this.$translate.instant('vps_backup_storage_access_add_success'));\n          }\n        })\n        .catch(err => this.CloudMessage.error(err || this.$translate.instant('vps_backup_storage_access_add_failure')))\n        .finally(() => this.$uibModalInstance.close()),\n    });\n    return this.addStorage.load();\n  }\n}\n\nangular.module('managerApp').controller('AddBackupStorageCtrl', AddBackupStorageCtrl);\n"]}