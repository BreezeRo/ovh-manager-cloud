{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/metrics-token.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/metrics-token.controller.js","mtime":1539717142072},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class MetricsTokenCtrl {\n    constructor($scope, $stateParams, $translate, ControllerHelper, MetricService, ovhDocUrl) {\n      this.scope = $scope;\n      this.$stateParams = $stateParams;\n      this.serviceName = $stateParams.serviceName;\n      this.$translate = $translate;\n      this.ControllerHelper = ControllerHelper;\n      this.MetricService = MetricService;\n      this.ovhDocUrl = ovhDocUrl;\n\n      this.tokens = [];\n      this.loading = false;\n    }\n\n    $onInit() {\n      this.getTokens(this.serviceName);\n    }\n\n    getTokens(serviceName) {\n      this.loading = true;\n      this.MetricService.getTokens(serviceName)\n        .then((data) => {\n          this.tokens = data.filter(token => token.isRevoked === false);\n          this.loading = false;\n        });\n    }\n\n    getGuides() {\n      return this.ovhDocUrl.getDocUrl('cloud/metrics');\n    }\n\n    static displayRemainingLabels(number) {\n      return `+${number}`;\n    }\n\n    showPreview(tokenID) {\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/dbaas/dbaas-metrics/token/preview/metrics-token-preview.html',\n          controller: 'MetricsTokenPreviewCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: () => this.serviceName,\n            tokenID: () => tokenID,\n          },\n        },\n      });\n    }\n\n    edit(tokenID, desc) {\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/dbaas/dbaas-metrics/token/edit/metrics-token-edit.html',\n          controller: 'MetricsTokenEditCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            metricsType: () => 'name',\n            metricsValue: () => desc,\n            serviceName: () => this.serviceName,\n            tokenID: () => tokenID,\n          },\n        },\n        successHandler: () => this.getTokens(this.serviceName),\n      });\n    }\n\n    delete(tokenID) {\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/dbaas/dbaas-metrics/token/delete/metrics-token-delete.html',\n          controller: 'MetricsTokenDeleteCtrl',\n          controllerAs: '$ctrl',\n          backdrop: 'static',\n          resolve: {\n            serviceName: () => this.serviceName,\n            tokenID: () => tokenID,\n          },\n        },\n        successHandler: () => this.getTokens(this.serviceName),\n      });\n    }\n  }\n\n  angular.module('managerApp').controller('MetricsTokenCtrl', MetricsTokenCtrl);\n})();\n"]}