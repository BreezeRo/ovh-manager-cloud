{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/service/kubernetes-service.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/kubernetes/service/kubernetes-service.controller.js","mtime":1539717374578},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nangular.module('managerApp').controller('KubernetesServiceCtrl',\n/*#__PURE__*/\nfunction () {\n  KubernetesServiceCtrl.$inject = [\"$stateParams\", \"$translate\", \"CloudMessage\", \"ControllerHelper\", \"Kubernetes\", \"KUBERNETES\"];\n\n  function KubernetesServiceCtrl($stateParams, $translate, CloudMessage, ControllerHelper, Kubernetes, KUBERNETES) {\n    _classCallCheck(this, KubernetesServiceCtrl);\n\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.Kubernetes = Kubernetes;\n    this.KUBERNETES = KUBERNETES;\n  }\n\n  _createClass(KubernetesServiceCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.loaders = {\n        cluster: true,\n        billing: true,\n        config: true\n      };\n      this.getClusterInfos().then(function () {\n        return _this.getConfigFile();\n      }).then(function () {\n        return _this.getBillingInfos();\n      }).then(function () {\n        return _this.loadMessages();\n      });\n    }\n  }, {\n    key: \"loadMessages\",\n    value: function loadMessages() {\n      var _this2 = this;\n\n      this.CloudMessage.unSubscribe('paas.kube.service');\n      this.messageHandler = this.CloudMessage.subscribe('paas.kube.service', {\n        onMessage: function onMessage() {\n          return _this2.refreshMessages();\n        }\n      });\n    }\n  }, {\n    key: \"refreshMessages\",\n    value: function refreshMessages() {\n      this.messages = this.messageHandler.getMessages();\n    }\n  }, {\n    key: \"getClusterInfos\",\n    value: function getClusterInfos() {\n      var _this3 = this;\n\n      return this.Kubernetes.getKubernetesCluster(this.serviceName).then(function (cluster) {\n        _this3.cluster = cluster;\n\n        _.set(_this3.cluster, 'region', _this3.KUBERNETES.region);\n      }).catch(function () {\n        _this3.displayError = true;\n      }).finally(function () {\n        _this3.loaders.cluster = false;\n      });\n    }\n  }, {\n    key: \"getBillingInfos\",\n    value: function getBillingInfos() {\n      var _this4 = this;\n\n      return this.Kubernetes.getKubernetesServiceInfos(this.serviceName).then(function (serviceInfos) {\n        _this4.serviceInfos = serviceInfos; // Static for now\n\n        _.set(_this4.serviceInfos, 'offer', _this4.$translate.instant('kube_service_offer_beta'));\n      }).catch(function () {\n        _this4.displayError = true;\n      }).finally(function () {\n        _this4.loaders.billing = false;\n      });\n    }\n  }, {\n    key: \"getConfigFile\",\n    value: function getConfigFile() {\n      var _this5 = this;\n\n      return this.Kubernetes.getKubernetesConfig(this.serviceName).then(function (fileConfig) {\n        _this5.kubernetesConfig = {\n          content: fileConfig.content,\n          fileName: _this5.KUBERNETES.kubeconfigFileName\n        };\n      }).catch(function () {\n        _this5.CloudMessage.error(_this5.$translate.instant('kube_service_file_error'));\n      }).finally(function () {\n        _this5.loaders.config = false;\n      });\n    }\n  }, {\n    key: \"downloadConfigFile\",\n    value: function downloadConfigFile() {\n      // Set yml extension manually as there is no MIME type yet\n      this.ControllerHelper.constructor.downloadContent({\n        fileContent: this.kubernetesConfig.content,\n        fileName: \"\".concat(this.kubernetesConfig.fileName, \".yml\")\n      });\n    }\n  }]);\n\n  return KubernetesServiceCtrl;\n}());",null]}