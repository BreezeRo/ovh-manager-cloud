{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/rescue/cloud-project-compute-infrastructure-virtual-machine-rescue.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/rescue/cloud-project-compute-infrastructure-virtual-machine-rescue.controller.js","mtime":1539717142018},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var CloudProjectComputeInfrastructureVirtualmachineRescueCtrl =\n  /*#__PURE__*/\n  function () {\n    CloudProjectComputeInfrastructureVirtualmachineRescueCtrl.$inject = [\"$scope\", \"$stateParams\", \"$uibModalInstance\", \"$translate\", \"params\", \"CloudMessage\", \"CloudProjectComputeInfrastructureOrchestrator\", \"OvhApiCloudProjectImage\", \"ServiceHelper\"];\n\n    function CloudProjectComputeInfrastructureVirtualmachineRescueCtrl($scope, $stateParams, $uibModalInstance, $translate, params, CloudMessage, CloudProjectComputeInfrastructureOrchestrator, OvhApiCloudProjectImage, ServiceHelper) {\n      _classCallCheck(this, CloudProjectComputeInfrastructureVirtualmachineRescueCtrl);\n\n      this.$scope = $scope;\n      this.$stateParams = $stateParams;\n      this.$uibModalInstance = $uibModalInstance;\n      this.$translate = $translate;\n      this.params = params;\n      this.CloudMessage = CloudMessage;\n      this.CloudProjectComputeInfrastructureOrchestrator = CloudProjectComputeInfrastructureOrchestrator; // eslint-disable-line\n\n      this.OvhApiCloudProjectImage = OvhApiCloudProjectImage;\n      this.ServiceHelper = ServiceHelper;\n    }\n\n    _createClass(CloudProjectComputeInfrastructureVirtualmachineRescueCtrl, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        this.data = {\n          vm: this.params,\n          images: null,\n          selectedImage: null\n        };\n        this.loaders = {\n          action: false,\n          images: false\n        };\n        this.getImages();\n      }\n    }, {\n      key: \"rescueMode\",\n      value: function rescueMode(enable) {\n        var _this = this;\n\n        this.loaders.action = true;\n        return this.CloudProjectComputeInfrastructureOrchestrator.rescueVm(this.data.vm, enable, this.data.selectedImage).then(function (result) {\n          var typeKey = !_this.data.selectedImage || _this.data.vm.image.type === 'linux' ? 'linux' : 'windows';\n          var pwdKey = _this.data.selectedImage ? '' : 'pwd_';\n          var user = _this.data.selectedImage ? _this.data.selectedImage.user : 'root';\n          var messageName = \"cpc_rescue_mode_success_\".concat(pwdKey).concat(typeKey);\n\n          _this.CloudMessage.info({\n            textHtml: _this.$translate.instant(messageName, {\n              vmName: _this.data.vm.name,\n              user: user,\n              ip: _this.data.vm.ipAddresses[0].ip,\n              pwd: _.get(result, 'adminPassword', '')\n            })\n          });\n        }).catch(this.ServiceHelper.errorHandler('cpc_rescue_mode_error')).finally(function () {\n          _this.loaders.action = false;\n\n          _this.$uibModalInstance.close();\n        });\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        this.$uibModalInstance.dismiss();\n      }\n    }, {\n      key: \"getImages\",\n      value: function getImages() {\n        var _this2 = this;\n\n        this.loaders.images = true;\n        return this.OvhApiCloudProjectImage.v6().query({\n          serviceName: this.$stateParams.projectId,\n          flavorType: this.data.vm.type,\n          region: this.data.vm.region\n        }).$promise.then(function (result) {\n          _this2.data.images = _.filter(result, {\n            visibility: 'public',\n            type: _this2.data.vm.image ? _this2.data.vm.image.type : 'linux'\n          });\n\n          if (_this2.constructor.isNonRescuableWithDefaultImage(_this2.data.vm)) {\n            _this2.data.selectedImage = _.findLast(_this2.data.images, {\n              nameGeneric: _this2.data.vm.image.nameGeneric\n            });\n          }\n        }).finally(function () {\n          _this2.loaders.images = false;\n        });\n      }\n    }], [{\n      key: \"isNonRescuableWithDefaultImage\",\n      value: function isNonRescuableWithDefaultImage(vm) {\n        return vm.image && (vm.image.distribution === 'freebsd' || vm.image.type === 'windows');\n      }\n    }]);\n\n    return CloudProjectComputeInfrastructureVirtualmachineRescueCtrl;\n  }();\n\n  angular.module('managerApp').controller('CloudProjectComputeInfrastructureVirtualmachineRescueCtrl', CloudProjectComputeInfrastructureVirtualmachineRescueCtrl);\n})();",null]}