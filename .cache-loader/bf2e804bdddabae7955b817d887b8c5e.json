{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/serverFarm/probe/iplb-server-farm-probe.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/serverFarm/probe/iplb-server-farm-probe.controller.js","mtime":1539717142217},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerServerFarmProbeEditCtrl {\n  constructor($uibModalInstance, IpLoadBalancerConstant, availableProbes, edition, farm) {\n    this.$uibModalInstance = $uibModalInstance;\n    this.IpLoadBalancerConstant = IpLoadBalancerConstant;\n    this.availableProbes = availableProbes;\n    this.edition = edition;\n    this.farm = farm;\n    this.farmProbe = this.farm.probe ? angular.copy(this.farm.probe) : {\n      match: 'default',\n    };\n\n    this.methods = IpLoadBalancerConstant.probeMethods;\n    this.matches = IpLoadBalancerConstant.probeMatches;\n    this.rules = this.getRules();\n\n    if (!_.includes(this.getMatches(), this.farm.probe.match)) {\n      this.farmProbe.match = null;\n      this.farmProbe.pattern = null;\n      this.farmProbe.negate = null;\n    }\n\n    if (!this.edition) {\n      this.farmProbe.port = this.farm.port;\n      this.farmProbe.interval = 30;\n\n      switch (this.farmProbe.type) {\n        case 'http':\n          this.farmProbe.method = 'GET';\n          this.farmProbe.url = '/';\n          break;\n        default: break;\n      }\n\n      this.farmProbe.match = 'default';\n\n      if (this.farmProbe.type === 'oco') {\n        delete this.farmProbe.port;\n      }\n    } else if (this.farmProbe.negate === null) {\n      this.farmProbe.negate = false;\n    }\n  }\n\n  isFieldVisible(field) {\n    if (field === 'pattern') {\n      return this.farmProbe.match !== 'default';\n    }\n\n    if (field === 'match' && _.isArray(this.rules.matches)\n            && this.rules.matches.length === 1) {\n      return false;\n    }\n\n    return !Object.prototype.hasOwnProperty.call(this.rules, field)\n            || !!this.rules[field];\n  }\n\n  getMatches() {\n    return this.rules.matches;\n  }\n\n  getRules() {\n    return _.find(this.availableProbes, {\n      type: this.farmProbe.type,\n    });\n  }\n\n  cleanProbe() {\n    if (this.farmProbe.match === 'default') {\n      this.farmProbe.pattern = null;\n    }\n    if (!this.farmProbe.negate) {\n      this.farmProbe.negate = null;\n    }\n  }\n\n  close() {\n    this.cleanProbe();\n    this.$uibModalInstance.close(this.farmProbe);\n  }\n\n  dismiss() {\n    this.$uibModalInstance.dismiss();\n  }\n}\n\nangular.module('managerApp')\n  .controller('IpLoadBalancerServerFarmProbeEditCtrl', IpLoadBalancerServerFarmProbeEditCtrl);\n"]}