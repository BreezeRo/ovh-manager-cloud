{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-helper.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-helper.service.js","mtime":1539717142185},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class ControllerHelper {\n  constructor($timeout, $window, ControllerModalHelper, ControllerRequestHelper,\n    ControllerNavigationHelper) {\n    this.request = ControllerRequestHelper;\n    this.modal = ControllerModalHelper;\n    this.navigation = ControllerNavigationHelper;\n    this.$timeout = $timeout;\n    this.$window = $window;\n  }\n\n  static downloadUrl(url) {\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  static downloadContent(config) {\n    const { fileContent, fileName } = config;\n\n    let charSet = '';\n    if (navigator.platform.toUpperCase().indexOf('WIN') > -1) {\n      charSet = 'charset=windows-1252;base64';\n    } else {\n      charSet = 'charset=utf-8;base64';\n    }\n\n    const dataString = btoa(unescape(encodeURIComponent(fileContent)));\n    const link = document.createElement('a');\n    if (navigator.msSaveBlob) {\n      navigator.msSaveBlob(new Blob([config.content], { type: `text/plain;${charSet}` }), fileName);\n    } else if (link.download !== undefined) {\n      link.setAttribute('href', `data:text/plain;${charSet},${dataString}`);\n      link.setAttribute('download', fileName);\n      link.setAttribute('style', 'visibility:hidden');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(`data:text/plain;${charSet},${dataString}`);\n    }\n  }\n\n  /**\n   * copies given message to clipboard\n   * @param {string} messageToCopy, message to copy to clipboard\n   * @return {any} error if copy failed, empty string otherwise\n   */\n  static copyToClipboard(messageToCopy) {\n    try {\n      const dummy = document.createElement('input');\n      document.body.appendChild(dummy);\n      dummy.setAttribute('id', 'dummy_id');\n      dummy.setAttribute('value', messageToCopy);\n      dummy.select();\n      document.execCommand('copy');\n      document.body.removeChild(dummy);\n    } catch (err) {\n      return err;\n    }\n    return '';\n  }\n\n  static htmlDecode(html) {\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  static naturalCompare(str1, str2) {\n    const words1 = str1.split(' ');\n    const words2 = str2.split(' ');\n    const minLength = Math.min(words1.length, words2.length);\n    for (let wordIndex = 0; wordIndex < minLength; wordIndex += 1) {\n      const word1 = words1[wordIndex];\n      const word2 = words2[wordIndex];\n      if (word1 !== word2) {\n        /* eslint-disable no-nested-ternary */\n        return !Number.isNaN(word1) && !Number.isNaN(word2)\n          ? parseFloat(word1) > parseFloat(word2)\n          : word1 > word2 ? 1 : -1;\n        /* eslint-enable no-nested-ternary */\n      }\n    }\n    return words1.length > words2.length ? 1 : 0;\n  }\n\n  scrollPageToTop() {\n    this.$timeout(() => this.$window.scrollTo(0, 0), 100);\n  }\n}\n\nangular.module('managerApp').service('ControllerHelper', ControllerHelper);\n"]}