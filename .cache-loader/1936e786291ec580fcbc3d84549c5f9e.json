{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/rights/project-rights.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/rights/project-rights.service.js","mtime":1539717142396},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').service('CloudProjectRightService', [\"OvhApiCloud\", \"OvhApiCloudProjectServiceInfos\", \"OvhApiMe\", \"$q\", function (OvhApiCloud, OvhApiCloudProjectServiceInfos, OvhApiMe, $q) {\n  function getReadWriteAccounts(projectId) {\n    return OvhApiCloud.Project().Acl().v6().query({\n      serviceName: projectId,\n      type: 'readWrite'\n    }).$promise;\n  }\n\n  function getCurrentUserNic() {\n    return OvhApiMe.v6().get().$promise.then(function (user) {\n      return user.nichandle;\n    });\n  }\n\n  function getProjectAdminNic(projectId) {\n    return OvhApiCloudProjectServiceInfos.v6().get({\n      serviceName: projectId\n    }).$promise.then(function (project) {\n      return project.contactAdmin;\n    });\n  }\n\n  this.userHaveReadWriteRights = function (projectId) {\n    return $q.all({\n      readWriteAccounts: getReadWriteAccounts(projectId),\n      currentUserNic: getCurrentUserNic(),\n      projectAdminNic: getProjectAdminNic(projectId)\n    }).then(function (result) {\n      return result.projectAdminNic === result.currentUserNic || _.find(result.readWriteAccounts, function (nicWrite) {\n        return nicWrite === result.currentUserNic;\n      });\n    });\n  };\n}]);",null]}