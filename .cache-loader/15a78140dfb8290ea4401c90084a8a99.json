{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/additional-disk/order/vps-order-additional-disk.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/additional-disk/order/vps-order-additional-disk.controller.js","mtime":1539717142286},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsOrderDiskCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsOrderDiskCtrl.$inject = [\"$filter\", \"$stateParams\", \"$state\", \"$translate\", \"$q\", \"$window\", \"CloudMessage\", \"CloudNavigation\", \"VpsService\", \"ServiceHelper\"];\n\n  function VpsOrderDiskCtrl($filter, $stateParams, $state, $translate, $q, $window, CloudMessage, CloudNavigation, VpsService, ServiceHelper) {\n    _classCallCheck(this, VpsOrderDiskCtrl);\n\n    this.$filter = $filter;\n    this.$translate = $translate;\n    this.$q = $q;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.serviceName = $stateParams.serviceName;\n    this.VpsService = VpsService;\n    this.ServiceHelper = ServiceHelper;\n    this.loaders = {\n      capacity: false,\n      offer: false,\n      order: false\n    };\n    this.model = {\n      capacity: null,\n      duration: null,\n      url: null,\n      contractsValidated: null\n    };\n    this.capacityArray = [];\n    this.offer = null;\n  }\n\n  _createClass(VpsOrderDiskCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.previousState = this.CloudNavigation.getPreviousState();\n    }\n  }, {\n    key: \"getAdditionalDiskPrices\",\n    value: function getAdditionalDiskPrices() {\n      var _this = this;\n\n      this.loaders.capacity = true;\n      this.VpsService.getAdditionalDiskPrices(this.serviceName).then(function (data) {\n        _this.capacityArray = data;\n      }).catch(function (error) {\n        return _this.CloudMessage.error(error || _this.$translate.instant('vps_order_additional_disk_fail'));\n      }).finally(function () {\n        _this.loaders.capacity = false;\n      });\n    }\n  }, {\n    key: \"getAdditionalDiskFinalPrice\",\n    value: function getAdditionalDiskFinalPrice() {\n      var _this2 = this;\n\n      this.loaders.offer = true;\n      this.VpsService.getAllowedDuration(this.serviceName, this.model.capacity).then(function (duration) {\n        _this2.model.duration = duration;\n\n        _this2.VpsService.getAdditionalDiskFinalPrice(_this2.serviceName, _this2.model.capacity, _this2.model.duration).then(function (offer) {\n          _this2.offer = offer;\n        }).catch(function (error) {\n          return _this2.CloudMessage.error(error || _this2.$translate.instant('vps_order_additional_disk_fail'));\n        }).finally(function () {\n          _this2.loaders.offer = false;\n        });\n      }).catch(function (error) {\n        return _this2.CloudMessage.error(error || _this2.$translate.instant('vps_order_additional_disk_fail'));\n      });\n    }\n  }, {\n    key: \"orderAdditionalDiskOption\",\n    value: function orderAdditionalDiskOption() {\n      var _this3 = this;\n\n      this.loaders.order = true;\n      this.ServiceHelper.loadOnNewPage(this.VpsService.postAdditionalDiskOrder(this.serviceName, this.model.capacity, this.model.duration)).then(function (_ref) {\n        var url = _ref.url;\n        _this3.model.url = url;\n      }).finally(function () {\n        _this3.loaders.order = false;\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.previousState.go();\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      this.orderAdditionalDiskOption();\n    }\n  }, {\n    key: \"displayBC\",\n    value: function displayBC() {\n      this.$window.open(this.model.url, '_blank');\n    }\n  }]);\n\n  return VpsOrderDiskCtrl;\n}();\n\nangular.module('managerApp').controller('VpsOrderDiskCtrl', VpsOrderDiskCtrl);",null]}