{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/partition/zfs-options/nasha-partition-zfs-options.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/partition/zfs-options/nasha-partition-zfs-options.service.js","mtime":1539717142252},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').service('NashaPartitionZFSOptionsService', [\"$q\", \"$filter\", \"OvhApiDedicatedNasha\", \"NASHA_ZFS_OPTIONS_DEFAULT\", function ($q, $filter, OvhApiDedicatedNasha, NASHA_ZFS_OPTIONS_DEFAULT) {\n  var self = this;\n\n  self.getZFSOptionsEnums = function () {\n    return OvhApiDedicatedNasha.v6().schema().$promise.then(function (schema) {\n      var enums = {};\n      enums.recordsize = _.chain(schema.models['dedicated.storage.RecordSizeEnum'].enum).map(function (size) {\n        var int = parseInt(size, 10);\n        return {\n          size: int,\n          label: $filter('bytes')(int, true),\n          isDefault: int === NASHA_ZFS_OPTIONS_DEFAULT.recordsize\n        };\n      }).sortBy('size').value();\n      enums.sync = _.map(schema.models['dedicated.storage.SyncEnum'].enum, function (option) {\n        return {\n          label: option,\n          warning: option === 'disabled',\n          isDefault: option === 'standard'\n        };\n      });\n      return enums;\n    });\n  };\n\n  self.getCurrentZFSOptions = function (nashaId, partitionName) {\n    var options = {\n      atime: NASHA_ZFS_OPTIONS_DEFAULT.atime === 'on',\n      recordsize: NASHA_ZFS_OPTIONS_DEFAULT.recordsize,\n      sync: NASHA_ZFS_OPTIONS_DEFAULT.sync\n    };\n    return OvhApiDedicatedNasha.Partition().Options().v6().get({\n      serviceName: nashaId,\n      partitionName: partitionName\n    }).$promise.then(function (realOptions) {\n      options.atime = realOptions.atime === 'on';\n      options.recordsize = parseInt(realOptions.recordsize, 10);\n      options.sync = realOptions.sync;\n      return options;\n    }).catch(function (err) {\n      if (err.status === 404) {\n        return $q.when(options);\n      }\n\n      return $q.reject(err);\n    });\n  };\n}]);",null]}