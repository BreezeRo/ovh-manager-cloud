{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/ip/failover/buy/cloud-project-compute-infrastructure-ip-failover-buy-agora.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/ip/failover/buy/cloud-project-compute-infrastructure-ip-failover-buy-agora.controller.js","mtime":1539717141982},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["\n\nangular.module('managerApp').controller('CloudProjectComputeInfrastructureIpFailoverBuyAgoraCtrl', function ($http, $q, $stateParams, $translate, $uibModalInstance, $window, CloudMessage, OvhApiCloudProjectInstance) {\n  const self = this;\n\n  function getIpfoCatalog() {\n    return $http.get('/order/catalog/formatted/ip', {\n      serviceType: 'apiv6',\n      params: {\n        ovhSubsidiary: 'US',\n      },\n    }).then((result) => {\n      if (result.status !== 200) {\n        return $q.reject(result);\n      }\n      return _.filter(_.get(result, 'data.plans'), offer => /failover/.test(offer.planCode));\n    });\n  }\n\n  function init() {\n    self.loading = true;\n    self.product = null;\n    self.quantity = 1;\n    self.country = null;\n    self.instance = null;\n    return $q.all({\n      catalog: getIpfoCatalog(),\n      instances: OvhApiCloudProjectInstance.v6().query({\n        serviceName: $stateParams.projectId,\n      }),\n    }).then(({ catalog, instances }) => {\n      self.instances = instances;\n\n      self.catalog = catalog;\n      self.product = _.first(catalog);\n      self.country = _.first(self.getCountries(self.product));\n      self.instance = _.first(self.instances);\n    }).catch((err) => {\n      CloudMessage.error([$translate.instant('cpciif_buy_init_error'), (err.data && err.data.message) || ''].join(' '));\n      $uibModalInstance.dismiss();\n      return $q.reject(err);\n    }).finally(() => {\n      self.loading = false;\n    });\n  }\n\n  self.getPrice = product => _.chain(product)\n    .get('details.pricings.default')\n    .filter(p => p.capacities.indexOf('installation') >= 0)\n    .first()\n    .get('price')\n    .value();\n\n  self.getCountries = product => _.chain(product)\n    .get('details.product.configurations')\n    .find({ name: 'country' })\n    .get('values')\n    .value();\n\n  self.getMaximumQuantity = product => _.chain(product)\n    .get('details.pricings.default')\n    .filter(p => angular.isNumber(p.maximumQuantity), 'maximumQuantity')\n    .min('maximumQuantity')\n    .get('maximumQuantity')\n    .value();\n\n  self.order = () => {\n    const order = {\n      planCode: self.product.planCode,\n      productId: 'ip',\n      pricingMode: 'default',\n      quantity: self.quantity,\n      configuration: [{\n        label: 'country',\n        value: self.country,\n      }, {\n        label: 'destination',\n        value: $stateParams.projectId,\n      }, {\n        label: 'nexthop',\n        value: self.instance.id,\n      }],\n    };\n    $window.open(`https://us.ovhcloud.com/order/express/#/express/review?products=${JSURL.stringify([order])}`, '_blank');\n    $uibModalInstance.dismiss();\n  };\n\n  self.cancel = $uibModalInstance.dismiss;\n\n  init();\n});\n"]}