{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/add/logs-aliases-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/add/logs-aliases-add.controller.js","mtime":1539717142076},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsAliasesAddCtrl {\n  constructor($q, $stateParams, $uibModalInstance, LogsAliasesService, ControllerHelper,\n    CloudMessage) {\n    this.$q = $q;\n    this.$stateParams = $stateParams;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsAliasesService = LogsAliasesService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.isEdit = false;\n\n    this.initLoaders();\n  }\n\n  /**\n   * initializes options list\n   *\n   * @memberof LogsAliasesAddCtrl\n   */\n  initLoaders() {\n    this.options = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsAliasesService.getSubscribedOptions(this.serviceName),\n    });\n    this.options.load();\n\n    this.mainOffer = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsAliasesService.getMainOffer(this.serviceName),\n    });\n    this.mainOffer.load();\n\n    if (this.$stateParams.aliasId) {\n      this.isEdit = true;\n      this.alias = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: () => this.LogsAliasesService.getAlias(\n          this.serviceName,\n          this.$stateParams.aliasId,\n        ),\n      });\n      this.alias.load();\n    } else {\n      this.isEdit = false;\n      this.alias = this.LogsAliasesService.constructor.getNewAlias();\n    }\n\n    this.title = this.isEdit ? 'logs_aliases_update_title' : 'logs_aliases_add';\n  }\n\n  save() {\n    if (this.isEdit) {\n      return this.updateAlias();\n    }\n    return this.createAlias();\n  }\n\n  /**\n   * update alias\n   *\n   * @memberof LogsAliasesAddCtrl\n   */\n  updateAlias() {\n    if (this.form.$invalid) {\n      return this.$q.reject();\n    }\n    this.CloudMessage.flushChildMessage();\n    this.saving = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsAliasesService\n        .updateAlias(this.$stateParams.serviceName, this.alias.data)\n        .finally(() => {\n          this.$uibModalInstance.close();\n          this.ControllerHelper.scrollPageToTop();\n        }),\n    });\n    return this.saving.load();\n  }\n\n  /**\n   * create new alias\n   *\n   * @memberof LogsAliasesAddCtrl\n   */\n  createAlias() {\n    if (this.form.$invalid) {\n      return this.$q.reject();\n    }\n    this.CloudMessage.flushChildMessage();\n    this.saving = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsAliasesService\n        .createAlias(this.$stateParams.serviceName, this.alias.data)\n        .finally(() => {\n          this.$uibModalInstance.close();\n          this.ControllerHelper.scrollPageToTop();\n        }),\n    });\n    return this.saving.load();\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n}\n\nangular.module('managerApp').controller('LogsAliasesAddCtrl', LogsAliasesAddCtrl);\n"]}