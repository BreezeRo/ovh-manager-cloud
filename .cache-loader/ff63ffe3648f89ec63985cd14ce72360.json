{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/metrics-token-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/metrics-token-add.controller.js","mtime":1539717142070},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var MetricsTokenAddCtrl =\n  /*#__PURE__*/\n  function () {\n    MetricsTokenAddCtrl.$inject = [\"$state\", \"$stateParams\", \"$translate\", \"MetricService\"];\n\n    function MetricsTokenAddCtrl($state, $stateParams, $translate, MetricService) {\n      _classCallCheck(this, MetricsTokenAddCtrl);\n\n      this.$state = $state;\n      this.serviceName = $stateParams.serviceName;\n      this.$translate = $translate;\n      this.MetricService = MetricService;\n      this.token = {};\n      this.token.labels = [{\n        key: null,\n        value: null\n      }];\n      this.permissions = [];\n    }\n\n    _createClass(MetricsTokenAddCtrl, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        this.token.permission = 'read';\n        this.token.serviceName = this.serviceName;\n        this.permissions.push({\n          value: 'read',\n          text: this.$translate.instant('metrics_token_add_permission_read')\n        });\n        this.permissions.push({\n          value: 'write',\n          text: this.$translate.instant('metrics_token_add_permission_write')\n        });\n      }\n    }, {\n      key: \"confirm\",\n      value: function confirm() {\n        var _this = this;\n\n        this.loading = true;\n        this.checkLabels();\n        this.MetricService.addToken(this.token).then(function () {\n          return _this.$state.go('dbaas.metrics.detail.token', {\n            serviceName: _this.serviceName\n          });\n        }).finally(function () {\n          _this.loading = false;\n        });\n      }\n    }, {\n      key: \"addLabel\",\n      value: function addLabel() {\n        this.token.labels.push({\n          key: null,\n          value: null\n        });\n      }\n    }, {\n      key: \"removeLabel\",\n      value: function removeLabel(label) {\n        var index = _.indexOf(this.token.labels, label);\n\n        if (index !== -1) {\n          this.token.labels.splice(index, 1);\n        }\n      }\n    }, {\n      key: \"checkLabels\",\n      value: function checkLabels() {\n        var _this2 = this;\n\n        this.token.labels = this.token.labels.filter(function (label) {\n          return _this2.constructor.checkLabel(label);\n        });\n      }\n    }], [{\n      key: \"cancel\",\n      value: function cancel() {\n        window.history.back();\n      }\n    }, {\n      key: \"checkLabel\",\n      value: function checkLabel(label) {\n        return label.key !== null && label.value !== null;\n      }\n    }]);\n\n    return MetricsTokenAddCtrl;\n  }();\n\n  angular.module('managerApp').controller('MetricsTokenAddCtrl', MetricsTokenAddCtrl);\n})();",null]}