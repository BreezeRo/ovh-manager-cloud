{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/offer/cloud-offer.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/offer/cloud-offer.controller.js","mtime":1539717141949},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var CloudOfferCtrl =\n  /*#__PURE__*/\n  function () {\n    CloudOfferCtrl.$inject = [\"$q\", \"$stateParams\", \"$translate\", \"FeatureAvailabilityService\", \"CloudProjectAdd\", \"CloudMessage\", \"OvhApiMe\", \"TARGET\", \"URLS\"];\n\n    function CloudOfferCtrl($q, $stateParams, $translate, FeatureAvailabilityService, CloudProjectAdd, CloudMessage, OvhApiMe, TARGET, URLS) {\n      _classCallCheck(this, CloudOfferCtrl);\n\n      this.$q = $q;\n      this.$stateParams = $stateParams;\n      this.$translate = $translate;\n      this.CloudProjectAdd = CloudProjectAdd;\n      this.CloudMessage = CloudMessage;\n      this.User = OvhApiMe;\n      this.FeatureAvailabilityService = FeatureAvailabilityService;\n      this.TARGET = TARGET;\n      this.URLS = URLS;\n      this.data = {\n        defaultPayment: null,\n        agreementsAccepted: [],\n        agreements: []\n      };\n      this.messages = [];\n      this.model = {\n        voucher: null,\n        projectName: ''\n      };\n      this.state = {\n        allAgreementsAccepted: false\n      };\n      this.loaders = {\n        payment: false,\n        agreements: false,\n        start: false\n      };\n      this.features = [{\n        title: 'cloud_offer_vrack',\n        explanation: 'cloud_offer_vrack_explanation'\n      }, {\n        title: 'cloud_offer_ipfo',\n        explanation: 'cloud_offer_ipfo_explanation'\n      }, {\n        title: 'cloud_offer_ipv6',\n        explanation: 'cloud_offer_ipv6_explanation'\n      }, {\n        title: 'cloud_offer_upgrade',\n        explanation: 'cloud_offer_upgrade_explanation'\n      }, {\n        title: 'cloud_offer_pca',\n        explanation: 'cloud_offer_pca_explanation'\n      }, {\n        title: 'cloud_offer_snapshot',\n        explanation: 'cloud_offer_snapshot_explanation'\n      }, {\n        title: 'cloud_offer_ssd',\n        explanation: 'cloud_offer_ssd_explanation'\n      }, {\n        title: 'cloud_offer_volume',\n        explanation: 'cloud_offer_volume_explanation'\n      }, {\n        title: 'cloud_offer_object_storage',\n        explanation: 'cloud_offer_object_storage_explanation'\n      }, {\n        title: 'cloud_offer_api',\n        explanation: 'cloud_offer_api_explanation'\n      }];\n      this.init();\n    }\n\n    _createClass(CloudOfferCtrl, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        this.loadMessage(); // Call not available for US customer\n\n        this.FeatureAvailabilityService.hasFeaturePromise('PROJECT', 'expressOrder').then(function (hasFeature) {\n          if (!hasFeature) {\n            _this.loaders.agreements = true;\n\n            _this.CloudProjectAdd.getProjectInfo().then(function (projectInfo) {\n              _this.data.agreements = projectInfo.agreementsToAccept;\n              _this.data.order = projectInfo.orderToPay;\n            }).finally(function () {\n              _this.loaders.agreements = false;\n            });\n\n            _this.getDefaultPaymentMethod();\n          }\n        });\n        this.model.voucher = this.$stateParams.voucher;\n      }\n    }, {\n      key: \"loadMessage\",\n      value: function loadMessage() {\n        var _this2 = this;\n\n        this.CloudMessage.unSubscribe('iaas.pci-project-onboarding');\n        this.messageHandler = this.CloudMessage.subscribe('iaas.pci-project-onboarding', {\n          onMessage: function onMessage() {\n            return _this2.refreshMessage();\n          }\n        });\n      }\n    }, {\n      key: \"refreshMessage\",\n      value: function refreshMessage() {\n        this.messages = this.messageHandler.getMessages();\n      }\n    }, {\n      key: \"startProject\",\n      value: function startProject() {\n        var _this3 = this;\n\n        this.loaders.start = true; // Use express order for US customers\n\n        if (this.FeatureAvailabilityService.hasFeature('PROJECT', 'expressOrder')) {\n          window.location.href = this.URLS.website_order['cloud-resell-eu'].US(this.model.projectName);\n          return;\n        }\n\n        this.acceptAllAgreements().then(function () {\n          _this3.createProject();\n        });\n      }\n    }, {\n      key: \"agreementAcceptation\",\n      value: function agreementAcceptation(agreementId) {\n        if (this.acceptedAgreements[agreementId]) {\n          this.data.agreementsAccepted.push(agreementId);\n        } else {\n          _.pull(this.data.agreementsAccepted, agreementId);\n        }\n\n        this.state.allAgreementsAccepted = this.data.agreementsAccepted.length === this.data.agreements.length;\n      }\n    }, {\n      key: \"canStartProject\",\n      value: function canStartProject() {\n        return this.data.agreements.length && !this.state.allAgreementsAccepted;\n      }\n    }, {\n      key: \"acceptAllAgreements\",\n      value: function acceptAllAgreements() {\n        var _this4 = this;\n\n        var agreements = [];\n\n        _.forEach(this.data.agreements, function (agreement) {\n          agreements.push(_this4.acceptAgreement(agreement.id));\n        });\n\n        return this.$q.all(agreements).catch(function (err) {\n          _this4.CloudMessage.error(_this4.$translate.instant('cpa_error') + (err.data && err.data.message ? \" (\".concat(err.data.message, \")\") : ''));\n\n          _this4.loaders.start = false;\n        });\n      }\n    }, {\n      key: \"acceptAgreement\",\n      value: function acceptAgreement(agreementId) {\n        return this.User.Agreements().v6().accept({\n          id: agreementId\n        }, {});\n      }\n    }, {\n      key: \"getDefaultPaymentMethod\",\n      value: function getDefaultPaymentMethod() {\n        var _this5 = this;\n\n        this.loaders.payment = true;\n        this.User.PaymentMean().v6().getDefaultPaymentMean().then(function (defaultPayment) {\n          _this5.data.defaultPayment = defaultPayment;\n        }).finally(function () {\n          _this5.loaders.payment = false;\n        });\n      }\n    }, {\n      key: \"createProject\",\n      value: function createProject() {\n        var _this6 = this;\n\n        this.CloudProjectAdd.startProject(this.model.voucher, this.model.projectName).catch(function (error) {\n          if (error.agreements) {\n            _this6.data.agreementsAccepted = [];\n            _this6.data.agreements = error.agreements;\n            _this6.state.allAgreementsAccepted = false;\n          }\n        }).finally(function () {\n          _this6.loaders.start = false;\n        });\n      }\n    }]);\n\n    return CloudOfferCtrl;\n  }();\n\n  angular.module('managerApp').controller('CloudOfferCtrl', CloudOfferCtrl);\n})();",null]}