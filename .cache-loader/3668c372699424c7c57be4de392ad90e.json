{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/snapshot-order/vps-snapshot-order.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/snapshot-order/vps-snapshot-order.controller.js","mtime":1539717142304},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsOrderSnapshotCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsOrderSnapshotCtrl.$inject = [\"$stateParams\", \"$translate\", \"$window\", \"CloudMessage\", \"CloudNavigation\", \"VpsService\"];\n\n  function VpsOrderSnapshotCtrl($stateParams, $translate, $window, CloudMessage, CloudNavigation, VpsService) {\n    _classCallCheck(this, VpsOrderSnapshotCtrl);\n\n    this.$translate = $translate;\n    this.serviceName = $stateParams.serviceName;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.VpsService = VpsService;\n    this.loaders = {\n      init: false,\n      options: false\n    };\n    this.model = {\n      vps: null,\n      optionDetails: null,\n      url: null,\n      contractsValidated: false\n    };\n  }\n\n  _createClass(VpsOrderSnapshotCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.previousState = this.CloudNavigation.getPreviousState();\n    }\n  }, {\n    key: \"loadVps\",\n    value: function loadVps() {\n      var _this = this;\n\n      this.loaders.init = true;\n      this.VpsService.getSelectedVps(this.serviceName).then(function (data) {\n        _this.model.vps = data;\n\n        _this.loadOptionDetails();\n      }).catch(function (error) {\n        return _this.CloudMessage.error(error.message || _this.$translate.instant('vps_configuration_activate_snapshot_fail'));\n      }).finally(function () {\n        _this.loaders.init = false;\n      });\n    }\n  }, {\n    key: \"loadOptionDetails\",\n    value: function loadOptionDetails() {\n      var _this2 = this;\n\n      this.loaders.options = true;\n      this.VpsService.getOptionSnapshotFormated(this.serviceName).then(function (data) {\n        _this2.model.optionDetails = data;\n      }).catch(function (error) {\n        return _this2.CloudMessage.error(error.message || _this2.$translate.instant('vps_configuration_activate_snapshot_fail'));\n      }).finally(function () {\n        _this2.loaders.options = false;\n      });\n    }\n  }, {\n    key: \"orderOption\",\n    value: function orderOption() {\n      var _this3 = this;\n\n      if (this.model.optionDetails && this.model.contractsValidated) {\n        this.VpsService.orderOption(this.serviceName, 'snapshot', this.model.optionDetails.duration.duration).then(function (_ref) {\n          var url = _ref.url;\n          _this3.model.url = url;\n        }).catch(function () {\n          return _this3.CloudMessage.error(_this3.$translate.instant('vps_configuration_activate_snapshot_fail'));\n        });\n      } else if (this.model.contractsValidated) {\n        this.CloudMessage.error(this.$translate.instant('vps_configuration_activate_snapshot_fail'));\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.previousState.go();\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      this.displayBC();\n    }\n  }, {\n    key: \"displayBC\",\n    value: function displayBC() {\n      this.$window.open(this.model.url, '_blank');\n    }\n  }]);\n\n  return VpsOrderSnapshotCtrl;\n}();\n\nangular.module('managerApp').controller('VpsOrderSnapshotCtrl', VpsOrderSnapshotCtrl);",null]}