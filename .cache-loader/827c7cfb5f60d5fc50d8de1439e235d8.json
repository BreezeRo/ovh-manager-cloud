{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-detail.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-detail.controller.js","mtime":1539717142204},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerDetailCtrl {\n  constructor($stateParams, CloudMessage, CloudNavigation, IpLoadBalancerConfigurationService) {\n    this.$stateParams = $stateParams;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.IpLoadBalancerConfigurationService = IpLoadBalancerConfigurationService;\n    this.messages = [];\n\n    this.serviceName = $stateParams.serviceName;\n  }\n\n  $onInit() {\n    this.CloudNavigation.init({\n      state: 'network.iplb.detail',\n      stateParams: {\n        serviceName: this.serviceName,\n      },\n    });\n\n    this.CloudMessage.unSubscribe('network.iplb.detail');\n    this.messageHandler = this.CloudMessage.subscribe('network.iplb.detail', { onMessage: () => this.refreshMessage() });\n    this.checkPendingChanges();\n  }\n\n  refreshMessage() {\n    this.messages = this.messageHandler.getMessages();\n  }\n\n  checkPendingChanges() {\n    this.IpLoadBalancerConfigurationService.getPendingChanges(\n      this.serviceName,\n    )\n      .then(changes => _.chain(changes).map('number').sum().value() > 0)\n      .then((hasChanges) => {\n        if (hasChanges) {\n          this.IpLoadBalancerConfigurationService.showRefreshWarning();\n        }\n      });\n  }\n}\n\nangular.module('managerApp').controller('IpLoadBalancerDetailCtrl', IpLoadBalancerDetailCtrl);\n"]}