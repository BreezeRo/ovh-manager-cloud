{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/sidebar/products/project-sidebar.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/sidebar/products/project-sidebar.service.js","mtime":1539717374678},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudProjectSidebar {\n  constructor($translate, SidebarMenu, TARGET) {\n    this.$translate = $translate;\n    this.SidebarMenu = SidebarMenu;\n    this.TARGET = TARGET;\n\n    this.type = 'PROJECT';\n  }\n\n  loadIntoSection(section, services) {\n    const servicesSorted = _.sortBy(services, project => project.displayName.toUpperCase());\n    _.forEach(servicesSorted, (project) => {\n      if (this.TARGET === 'US') {\n        this.SidebarMenu.addMenuItem({\n          id: project.serviceName,\n          title: project.displayName || project.serviceName,\n          icon: 'ovh-font ovh-font-cloud-public2',\n          state: 'iaas.pci-project.compute',\n          stateParams: {\n            projectId: project.serviceName,\n          },\n          loadOnState: 'iaas.pci-project.compute',\n          loadOnStateParams: {\n            projectId: project.serviceName,\n          },\n        }, section);\n      } else {\n        const subSection = this.SidebarMenu.addMenuItem({\n          id: project.serviceName,\n          title: project.displayName || project.serviceName,\n          allowSubItems: true,\n          icon: 'ovh-font ovh-font-cloud-public2',\n          // state: \"iaas.pci-project\",\n          stateParams: {\n            projectId: project.serviceName,\n          },\n          loadOnState: 'iaas.pci-project',\n          loadOnStateParams: {\n            projectId: project.serviceName,\n          },\n        }, section);\n        this.fillCloudProjectSubSection(project, subSection);\n      }\n    });\n  }\n\n  addSearchKeys(menuItem) {\n    menuItem.addSearchKey('PCI');\n    menuItem.addSearchKey('Public Cloud Public');\n    menuItem.addSearchKey(this.$translate.instant('cloud_sidebar_actions_menu_cloud_project'));\n  }\n\n  addOrder() {\n    return {\n      id: 'order-pci-project-new',\n      title: this.$translate.instant('cloud_sidebar_actions_menu_cloud_project'),\n      icon: 'ovh-font ovh-font-public-cloud',\n      state: 'iaas.pci-project-new',\n    };\n  }\n\n  addToSection(service) {\n    const section = this.SidebarMenu.getItemById('mainIaasItem');\n    const hasSubItems = _.get(section, 'subItems', []).length > 0;\n    const projectItem = this.SidebarMenu.addMenuItem({\n      id: service.project_id,\n      title: service.description,\n      icon: 'ovh-font ovh-font-cloud-public2',\n      allowSubItems: true,\n      loadOnState: 'iaas.pci-project',\n      loadOnStateParams: {\n        projectId: service.project_id,\n      },\n    }, section);\n    // For each Item, add Infra/ObjectStorage/Facturation\n    this.fillCloudProjectSubSection(service, projectItem);\n\n    // Show on top: TODO: show in alphabetical order\n    if (hasSubItems) {\n      _.remove(_.get(section, 'subItems'), item => item.id === service.project_id);\n      section.subItems.unshift(projectItem);\n    }\n  }\n\n  fillCloudProjectSubSection(project, subSection) {\n    this.addSearchKeys(subSection);\n    this.SidebarMenu.addMenuItem({\n      title: this.$translate.instant('cloud_sidebar_pci_infrastructure'),\n      state: 'iaas.pci-project.compute',\n      stateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      loadOnState: 'iaas.pci-project.compute',\n      loadOnStateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      category: 'action-page',\n      searchable: false,\n    }, subSection);\n    this.SidebarMenu.addMenuItem({\n      title: this.$translate.instant('cloud_sidebar_pci_object_storage'),\n      state: 'iaas.pci-project.compute.storage',\n      stateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      loadOnState: 'iaas.pci-project.compute.storage',\n      loadOnStateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      category: 'action-page',\n      searchable: false,\n    }, subSection);\n    this.SidebarMenu.addMenuItem({\n      title: this.$translate.instant('cloud_sidebar_pci_manage'),\n      state: 'iaas.pci-project.billing',\n      stateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      loadOnState: 'iaas.pci-project.billing',\n      loadOnStateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      category: 'action-page',\n      searchable: false,\n    }, subSection);\n    this.SidebarMenu.addMenuItem({\n      title: this.$translate.instant('cloud_sidebar_pci_openstack'),\n      state: 'iaas.pci-project.compute.openstack',\n      stateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      loadOnState: 'iaas.pci-project.compute.openstack',\n      loadOnStateParams: {\n        projectId: project.serviceName || project.project_id,\n      },\n      category: 'action-page',\n      searchable: false,\n    }, subSection);\n  }\n}\n\nangular.module('managerApp').service('CloudProjectSidebar', CloudProjectSidebar);\n"]}