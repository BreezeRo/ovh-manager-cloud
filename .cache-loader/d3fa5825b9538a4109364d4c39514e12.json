{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/veeam-enterprise/dashboard/veeam-enterprise-dashboard.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/veeam-enterprise/dashboard/veeam-enterprise-dashboard.controller.js","mtime":1539717374608},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VeeamEnterpriseDashboardCtrl {\n  constructor($stateParams, $translate, ControllerHelper, FeatureAvailabilityService,\n    VeeamEnterpriseService) {\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.ControllerHelper = ControllerHelper;\n    this.FeatureAvailabilityService = FeatureAvailabilityService;\n    this.VeeamEnterpriseService = VeeamEnterpriseService;\n\n    this.serviceName = this.$stateParams.serviceName;\n\n    this.initLoaders();\n    this.initActions();\n  }\n\n  initLoaders() {\n    const errorHandler = response => this.VeeamEnterpriseService.unitOfWork.messages.push({\n      text: response.message,\n      type: 'error',\n    });\n\n    this.configurationInfos = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VeeamEnterpriseService.getConfigurationInfos(this.serviceName),\n      errorHandler,\n    });\n\n    this.subscriptionInfos = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VeeamEnterpriseService.getSubscriptionInfos(this.serviceName),\n      errorHandler,\n    });\n  }\n\n  initActions() {\n    this.uiActions = {\n      manageAutorenew: {\n        text: this.$translate.instant('common_manage'),\n        href: this.ControllerHelper.navigation.getUrl(\n          'renew', {\n            serviceName: this.serviceName,\n            serviceType: 'VEEAM_ENTERPRISE',\n          },\n        ),\n        isAvailable: () => true,\n      },\n    };\n  }\n\n  $onInit() {\n    this.configurationInfos.load();\n    this.subscriptionInfos.load();\n  }\n\n  activateLicense() {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/veeam-enterprise/dashboard/license/veeam-enterprise-license.html',\n        controller: 'VeeamEnterpriseLicenseCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          action: () => 'register',\n          serviceName: () => this.serviceName,\n        },\n      },\n    });\n  }\n\n  updateLicense() {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/veeam-enterprise/dashboard/license/veeam-enterprise-license.html',\n        controller: 'VeeamEnterpriseLicenseCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          action: () => 'update',\n          serviceName: () => this.serviceName,\n        },\n      },\n    });\n  }\n\n  terminateLicense() {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/veeam-enterprise/dashboard/terminate/veeam-enterprise-terminate.html',\n        controller: 'VeeamEnterpriseTerminateCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => this.serviceName,\n        },\n      },\n    });\n  }\n}\n\nangular.module('managerApp').controller('VeeamEnterpriseDashboardCtrl', VeeamEnterpriseDashboardCtrl);\n"]}