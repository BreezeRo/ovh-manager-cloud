{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vrack/add/vrack-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vrack/add/vrack-add.controller.js","mtime":1539717142310},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('VrackAddCtrl', [\"$q\", \"$translate\", \"$state\", \"$rootScope\", \"CloudMessage\", \"VrackService\", \"OvhApiOrder\", \"TARGET\", function ($q, $translate, $state, $rootScope, CloudMessage, VrackService, OvhApiOrder, TARGET) {\n  var self = this;\n  self.TARGET = TARGET;\n  this.loaders = {\n    loading: false,\n    validationPending: false\n  };\n  this.model = {\n    agreements: [],\n    contractsAccepted: false,\n    purchaseOrderUrl: ''\n  };\n\n  this.getVrackContract = function () {\n    return OvhApiOrder.Vrack().New().v6().get({\n      quantity: 1\n    }).$promise.then(function (data) {\n      self.model.agreements = data.contracts;\n    }).catch(function (error) {\n      CloudMessage.error($translate.instant('vrack_error_reason', {\n        message: error.data.message\n      }));\n    });\n  };\n\n  this.addVrack = function () {\n    self.loaders.loading = true;\n    return OvhApiOrder.Vrack().New().v6().create({\n      quantity: this.model.quantityToOrder\n    }, {}).$promise.then(function (data) {\n      CloudMessage.success($translate.instant('vrack_adding_success', {\n        data: _.pick(data, ['url', 'orderId'])\n      }));\n      self.model.purchaseOrderUrl = data.url;\n      self.loaders.validationPending = true;\n    }).catch(function (error) {\n      CloudMessage.error($translate.instant('vrack_error_reason', {\n        message: error.data.message\n      }));\n    }).finally(function () {\n      self.loaders.loading = false;\n    });\n  };\n\n  function init() {\n    self.loaders.loading = true;\n    self.vrackOrderUrl = null;\n    var promise = {\n      vrackOrderUrl: VrackService.getOrderUrl()\n    };\n\n    if (self.TARGET !== 'US') {\n      promise.vrackContract = self.getVrackContract();\n    }\n\n    return $q.all(promise).then(function (results) {\n      self.vrackOrderUrl = results.vrackOrderUrl;\n    }).finally(function () {\n      self.loaders.loading = false;\n    });\n  }\n\n  init();\n}]);",null]}