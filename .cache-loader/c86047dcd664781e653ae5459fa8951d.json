{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/windows-order/vps-windows-order.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/windows-order/vps-windows-order.controller.js","mtime":1539717142309},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VpsOrderWindowsCtrl {\n  constructor($q, $stateParams, $translate, $window, CloudMessage, CloudNavigation, VpsService) {\n    this.$q = $q;\n    this.$translate = $translate;\n    this.serviceName = $stateParams.serviceName;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.VpsService = VpsService;\n\n    this.loaders = {\n      durations: false,\n      prices: false,\n    };\n\n    this.durations = {\n      available: null,\n      details: {},\n    };\n\n    this.model = {\n      duration: null,\n      url: null,\n      contractsValidated: null,\n    };\n  }\n\n  $onInit() {\n    this.previousState = this.CloudNavigation.getPreviousState();\n  }\n\n\n  getDurations() {\n    this.loaders.durations = true;\n    this.VpsService.getWindowsOptionDurations(this.serviceName)\n      .then((durations) => {\n        this.durations.available = durations;\n        this.loadPrices(durations);\n      })\n      .catch(err => this.CloudMessage.error(err.data.message || err.data))\n      .finally(() => { this.loaders.durations = false; });\n  }\n\n  loadPrices(durations) {\n    const queue = [];\n    this.loaders.prices = true;\n\n    _.forEach(durations, (duration) => {\n      queue.push(this.VpsService.getWindowsOptionOrder(this.serviceName, duration)\n        .then((details) => { this.durations.details[duration] = details; }));\n    });\n\n    this.$q.all(queue)\n      .catch(err => this.CloudMessage.error(err.data || this.$translate.instant('vps_order_windows_price_error')))\n      .finally(() => {\n        this.loaders.prices = false;\n      });\n  }\n\n  canValidateContracts() {\n    this.model.contractsValidated = false;\n    if (!this.durations.details[this.model.duration].contracts\n      || !this.durations.details[this.model.duration].contracts.length) {\n      return true;\n    }\n    return false;\n  }\n\n  orderOption() {\n    this.VpsService.postWindowsOptionOrder(this.serviceName, this.model.duration)\n      .then(({ url }) => { this.model.url = url; })\n      .catch(error => this.CloudMessage.error(error || this.$translate.instant('vps_order_windows_order_error')));\n  }\n\n  cancel() {\n    this.previousState.go();\n  }\n\n  confirm() {\n    this.displayBC();\n  }\n\n  displayBC() {\n    this.$window.open(\n      this.model.url,\n      '_blank',\n    );\n  }\n}\n\nangular.module('managerApp').controller('VpsOrderWindowsCtrl', VpsOrderWindowsCtrl);\n"]}