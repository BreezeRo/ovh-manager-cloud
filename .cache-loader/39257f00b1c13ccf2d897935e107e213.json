{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cda/details/home/cda-details-home.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cda/details/home/cda-details-home.controller.js","mtime":1539717141933},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CdaDetailsHomeCtrl', [\"$q\", \"$state\", \"$stateParams\", \"$scope\", \"$interval\", \"$uibModal\", \"$translate\", \"OvhApiDedicatedCeph\", \"CloudMessage\", \"CdaService\", function ($q, $state, $stateParams, $scope, $interval, $uibModal, $translate, OvhApiDedicatedCeph, CloudMessage, CdaService) {\n  var self = this;\n  var taskPoll;\n  self.pollingInterval = 10000;\n  self.serviceName = $stateParams.serviceName;\n  self.CdaService = CdaService;\n  self.datas = {\n    health: {},\n    tasks: [],\n    availableBytes: {},\n    usedBytes: {},\n    totalBytes: {},\n    crushTunablesOptions: []\n  };\n  self.loading = false;\n  self.modals = {\n    edit: {\n      templateUrl: 'app/cda/details/home/detail/edit/cda-detail-edit.html',\n      controller: 'CdaDetailEditCtrl'\n    }\n  };\n\n  function initHealth() {\n    return OvhApiDedicatedCeph.v6().health({\n      serviceName: self.serviceName\n    }).$promise.then(function (health) {\n      self.datas.health = health;\n      self.datas.totalBytes = health.availableBytes;\n      self.datas.availableBytes = health.availableBytes;\n      self.datas.usedBytes = health.usedBytes;\n      return health;\n    });\n  }\n\n  function initCrushTunablesOptions() {\n    return OvhApiDedicatedCeph.v6().schema({\n      serviceName: self.serviceName\n    }).$promise.then(function (schema) {\n      self.datas.crushTunablesOptions = schema.models['dedicated.ceph.clusterUpdate.crushTunablesEnum'].enum;\n    });\n  }\n\n  function displayError(error) {\n    CloudMessage.error([$translate.instant('ceph_common_error'), error.data && error.data.message || ''].join(' '));\n  }\n\n  function initTasks() {\n    OvhApiDedicatedCeph.Task().v6().resetQueryCache();\n    OvhApiDedicatedCeph.Task().v6().query({\n      serviceName: self.serviceName\n    }).$promise.then(function (tasks) {\n      // If we passed from a state with no tasks to a state with tasks\n      // or a state with tasks to a state with no tasks we update the details.\n      if (tasks.length === 0 && self.datas.tasks.length !== 0 || tasks.length !== 0 && self.datas.tasks.length === 0) {\n        CdaService.initDetails(self.serviceName, true);\n      }\n\n      self.datas.tasks = tasks;\n    }).catch(function (error) {\n      displayError(error);\n    });\n  }\n\n  function pollTaskList() {\n    initTasks();\n    taskPoll = $interval(function () {\n      initTasks();\n    }, self.pollingInterval);\n  }\n\n  function initUsers() {\n    return CdaService.getUsers($stateParams).then(function (users) {\n      self.datas.users = users;\n\n      if (users.length === 0) {\n        var message = {\n          text: $translate.instant('cda_detail_info_no_user'),\n          link: {\n            type: 'state',\n            text: $translate.instant('cda_detail_info_create_user'),\n            state: 'paas.cda.cda-details.cda-user.cda-user-list'\n          }\n        };\n        CloudMessage.info(message);\n      }\n\n      return users;\n    });\n  }\n\n  function init() {\n    self.loading = true;\n    $q.allSettled([initHealth(), initCrushTunablesOptions()]).catch(function (errors) {\n      displayError(_.find(errors, function (error) {\n        return error;\n      }));\n    }).finally(function () {\n      self.loading = false;\n    });\n    pollTaskList();\n    initUsers();\n  }\n\n  function openModal(template, controller, params) {\n    $uibModal.open({\n      windowTopClass: 'cui-modal',\n      templateUrl: template,\n      controller: controller,\n      controllerAs: controller,\n      resolve: {\n        items: function items() {\n          return params;\n        }\n      }\n    });\n  }\n\n  self.openEditModal = function () {\n    openModal(self.modals.edit.templateUrl, self.modals.edit.controller, {\n      details: self.CdaService.currentService,\n      crushTunablesOptions: self.datas.crushTunablesOptions\n    });\n  };\n\n  $scope.$on('$destroy', function () {\n    $interval.cancel(taskPoll);\n  });\n  init();\n}]);",null]}