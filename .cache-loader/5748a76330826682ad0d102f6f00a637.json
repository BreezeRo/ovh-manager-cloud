{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics.service.js","mtime":1539717142069},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar MetricService =\n/*#__PURE__*/\nfunction () {\n  MetricService.$inject = [\"$q\", \"$translate\", \"CloudMessage\", \"OvhApiMetrics\"];\n\n  function MetricService($q, $translate, CloudMessage, OvhApiMetrics) {\n    _classCallCheck(this, MetricService);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.metrics = OvhApiMetrics;\n  }\n\n  _createClass(MetricService, [{\n    key: \"getService\",\n    value: function getService(serviceName) {\n      var _this = this;\n\n      return this.metrics.v6().get({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        return _this.acceptResponse(response);\n      }).catch(function (response) {\n        return _this.rejectResponse(response.data, _this.$translate.instant('metrics_err_service'));\n      });\n    }\n  }, {\n    key: \"getServiceInfos\",\n    value: function getServiceInfos(serviceName) {\n      var _this2 = this;\n\n      return this.metrics.v6().getServiceInfos({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        return _this2.acceptResponse(response);\n      }).catch(function (response) {\n        return _this2.rejectResponse(response.data, _this2.$translate.instant('metrics_err_service'));\n      });\n    }\n  }, {\n    key: \"setServiceDescription\",\n    value: function setServiceDescription(serviceName, description) {\n      var _this3 = this;\n\n      return this.metrics.v6().edit({\n        serviceName: serviceName\n      }, {\n        description: description\n      }).$promise.then(function (response) {\n        return _this3.acceptResponse(response);\n      }).catch(function (response) {\n        return _this3.rejectResponse(response.data, _this3.$translate.instant('metrics_setting_updated'));\n      });\n    }\n  }, {\n    key: \"getConsumption\",\n    value: function getConsumption(serviceName) {\n      var _this4 = this;\n\n      return this.metrics.v6().getConsumption({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        return _this4.acceptResponse(response);\n      }).catch(function (response) {\n        return _this4.rejectResponse(response.data, _this4.$translate.instant('metrics_err_conso'));\n      });\n    }\n  }, {\n    key: \"getTokens\",\n    value: function getTokens(serviceName) {\n      var _this5 = this;\n\n      this.metrics.Token().v6().resetAllCache();\n      return this.metrics.Token().v6().query({\n        serviceName: serviceName\n      }).$promise.then(function (tokenList) {\n        return _this5.$q.all(tokenList.map(function (tokenID) {\n          return _this5.metrics.Token().v6().get({\n            serviceName: serviceName,\n            tokenID: tokenID\n          }).$promise;\n        }));\n      });\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(serviceName, tokenID) {\n      return this.metrics.Token().v6().get({\n        serviceName: serviceName,\n        tokenID: tokenID\n      }).$promise;\n    }\n  }, {\n    key: \"addToken\",\n    value: function addToken(token) {\n      var _this6 = this;\n\n      return this.metrics.Token().v6().save(token).$promise.then(function (response) {\n        _this6.metrics.Token().v6().resetAllCache();\n\n        return _this6.acceptResponse(response, _this6.$translate.instant('metrics_token_created'));\n      }).catch(function (response) {\n        return _this6.rejectResponse(response.data, _this6.$translate.instant('metrics_token_err_create'));\n      });\n    }\n  }, {\n    key: \"updateToken\",\n    value: function updateToken(serviceName, tokenID, description) {\n      var _this7 = this;\n\n      return this.metrics.Token().v6().edit({\n        serviceName: serviceName,\n        tokenID: tokenID,\n        description: description\n      }).$promise.then(function (response) {\n        _this7.metrics.Token().v6().resetAllCache();\n\n        return _this7.acceptResponse(response, _this7.$translate.instant('metrics_token_updated'));\n      }).catch(function (response) {\n        return _this7.rejectResponse(response.data, _this7.$translate.instant('metrics_token_err_create'));\n      });\n    }\n  }, {\n    key: \"deleteToken\",\n    value: function deleteToken(serviceName, tokenID) {\n      var _this8 = this;\n\n      return this.metrics.Token().v6().delete({\n        serviceName: serviceName,\n        tokenID: tokenID\n      }).$promise.then(function (response) {\n        _this8.metrics.Token().v6().resetAllCache();\n\n        return _this8.acceptResponse(response, _this8.$translate.instant('metrics_token_revoked'));\n      }).catch(function (response) {\n        return _this8.rejectResponse(response.data, _this8.$translate.instant('metrics_err_delete_token'));\n      });\n    }\n  }, {\n    key: \"acceptResponse\",\n    value: function acceptResponse(data, message) {\n      return this.$q.resolve({\n        status: 'OK',\n        data: data,\n        message: this.CloudMessage.success(message)\n      });\n    }\n  }, {\n    key: \"rejectResponse\",\n    value: function rejectResponse(data, message) {\n      return this.$q.reject({\n        status: 'ERROR',\n        data: data,\n        message: this.CloudMessage.error(message)\n      });\n    }\n  }]);\n\n  return MetricService;\n}();\n\nangular.module('managerApp').service('MetricService', MetricService);",null]}