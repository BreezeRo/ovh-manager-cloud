{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/iplb-ssl-certificate.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/iplb-ssl-certificate.js","mtime":1539717374570},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  const iplbHeader = {\n    templateUrl: 'app/iplb/header/iplb-dashboard-header.html',\n    controller: 'IpLoadBalancerDashboardHeaderCtrl',\n    controllerAs: 'ctrl',\n  };\n\n  angular.module('managerApp').config(($stateProvider) => {\n    $stateProvider\n      .state('network.iplb.detail.ssl-certificate', {\n        url: '/sslCertificate',\n        redirectTo: 'network.iplb.detail.ssl-certificate.home',\n        views: {\n          iplbHeader,\n          iplbContent: {\n            template: '<div data-ui-view=\"iplbSslCertificate\"><div>',\n          },\n        },\n        translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n      })\n      .state('network.iplb.detail.ssl-certificate.home', {\n        url: '/',\n        views: {\n          iplbSslCertificate: {\n            templateUrl: 'app/iplb/sslCertificate/iplb-ssl-certificate.html',\n            controller: 'IpLoadBalancerSslCertificateCtrl',\n            controllerAs: 'ctrl',\n          },\n        },\n        translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n      })\n      .state('network.iplb.detail.ssl-certificate.add', {\n        url: '/sslCertificate/add',\n        views: {\n          iplbSslCertificate: {\n            templateUrl: 'app/iplb/sslCertificate/iplb-ssl-certificate-edit.html',\n            controller: 'IpLoadBalancerSslCertificateEditCtrl',\n            controllerAs: 'ctrl',\n          },\n        },\n        translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n      })\n      .state('network.iplb.detail.ssl-certificate.order', {\n        url: '/sslCertificate/order',\n        views: {\n          iplbSslCertificate: {\n            templateUrl: 'app/iplb/sslCertificate/order/iplb-ssl-certificate-order.html',\n            controller: 'IpLoadBalancerSslCertificateOrderCtrl',\n            controllerAs: 'ctrl',\n          },\n        },\n        translations: ['.'], \nresolve: {\ntranslations($q, $translate, asyncLoader) { const imports = [ import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.use()}.xml`)\n                    .catch(() => import(`/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/sslCertificate/translations/Messages_${$translate.fallbackLanguage()}.xml`))\n                    .then(i => i.default),\n                ]; imports.forEach(p => asyncLoader.addTranslations(p)); return $q.all(imports).then(() => $translate.refresh()); }},\n      });\n  });\n})();\n"]}