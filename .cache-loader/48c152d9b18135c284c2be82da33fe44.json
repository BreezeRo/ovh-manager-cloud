{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/key/dbaasts-project-details-key.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/key/dbaasts-project-details-key.controller.js","mtime":1539717142164},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('DBaasTsProjectDetailsKeyCtrl', [\"$q\", \"$state\", \"$stateParams\", \"$translate\", \"$uibModal\", \"$scope\", \"Toast\", \"OvhApiMe\", \"OvhApiDBaasTsProject\", \"DBaasTsProjectKey\", \"OvhApiDBaasTsRegion\", \"DBaasTsConstants\", function DBaasTsProjectDetailsKeyCtrl($q, $state, $stateParams, $translate, $uibModal, $scope, Toast, OvhApiMe, OvhApiDBaasTsProject, DBaasTsProjectKey, OvhApiDBaasTsRegion, DBaasTsConstants) {\n  // -- Vairables declaration --\n  var self = this;\n  var serviceName = $stateParams.serviceName;\n  self.loaders = {};\n  self.errors = {};\n  self.data = {}; // -- Edit key --\n\n  self.edit = function (key) {\n    return $state.go('^.dbaasts-project-details-key-edit', {\n      keyId: key.id\n    });\n  }; // -- Delete key --\n\n\n  self.delete = function (key) {\n    $uibModal.open({\n      templateUrl: 'app/dbaas/ts/project/details/key/delete/modal.html',\n      controllerAs: 'ctrl',\n      controller: [\"$uibModalInstance\", function controller($uibModalInstance) {\n        var modalSelf = this;\n        modalSelf.loaders = {\n          deleting: false\n        };\n\n        modalSelf.confirm = function () {\n          modalSelf.loaders.deleting = true;\n          DBaasTsProjectKey.v6().remove({\n            serviceName: serviceName,\n            keyId: key.id\n          }).$promise.then(function () {\n            // Remove deleted key\n            self.data.keys = _.reject(self.data.keys, {\n              id: key.id\n            }); // and clode modal\n\n            $uibModalInstance.close();\n            Toast.info($translate.instant('dtpdt_key_deletion_successful'));\n          }).catch(function (err) {\n            Toast.error([$translate.instant('dtpdt_key_deletion_error'), err.data && err.data.message || ''].join(' '));\n          }).finally(function () {\n            modalSelf.loaders.deleting = false;\n          });\n        };\n      }]\n    });\n  }; // -- Example of using a key --\n\n\n  self.showExample = function (key) {\n    $uibModal.open({\n      templateUrl: 'app/dbaas/ts/project/details/key/example/modal.html',\n      controller: 'DBaasTsProjectDetailsKeyCtrl.exampleUseToken',\n      controllerAs: 'ctrl',\n      resolve: {\n        params: function params() {\n          return {\n            key: key,\n            apiURL: self.region.url\n          };\n        }\n      }\n    });\n  };\n\n  self.showRegionInfo = function () {\n    $uibModal.open({\n      templateUrl: 'app/dbaas/ts/project/details/key/region-help/modal.html',\n      controllerAs: 'ctrl',\n      controller: function Ctrl() {\n        this.region = self.region;\n        this.guideURL = self.data.guideDBaasTsConceptsURL;\n      }\n    });\n  };\n\n  self.refresh = function () {\n    DBaasTsProjectKey.v6().resetQueryCache();\n    self.init();\n  };\n\n  this.resetCache = function () {\n    self.loaders.init = true;\n    window.location.reload();\n  }; // ---------INITIALIZATION---------\n\n\n  self.init = function () {\n    self.loaders.init = true;\n    var futureProject = OvhApiDBaasTsProject.v6().get({\n      serviceName: serviceName\n    }).$promise; // Load regions to display the project's region name and URL\n\n    var futureRegions = OvhApiDBaasTsRegion.v6().query().$promise; // Load keys\n\n    var futureKeys = DBaasTsProjectKey.v6().queryDetails(serviceName);\n    futureProject.then(function (project) {\n      futureKeys.then(function (keys) {\n        self.data.keys = keys;\n      });\n      futureRegions.then(function (regions) {\n        // Find the region for the project\n        self.region = _.find(regions, {\n          id: project.regionId\n        });\n      });\n      return $q.all(futureRegions, futureKeys);\n    }).catch(function (err) {\n      Toast.error([$translate.instant('dtpdt_key_loading_error'), err.data && err.data.message || ''].join(' '));\n      self.data.keys = null;\n      self.errors.init = true;\n    }).finally(function () {\n      self.loaders.init = false;\n    });\n  };\n\n  function initGuideURL() {\n    self.loaders.guide = true;\n    OvhApiMe.v6().get().$promise.then(function (me) {\n      var lang = me.ovhSubsidiary;\n      self.data.guideDBaasTsConceptsURL = DBaasTsConstants.guides.concepts[lang] || DBaasTsConstants.guides.concepts.FR;\n    }).finally(function () {\n      self.loaders.guide = false;\n    });\n  }\n\n  self.init();\n  initGuideURL();\n}]);",null]}