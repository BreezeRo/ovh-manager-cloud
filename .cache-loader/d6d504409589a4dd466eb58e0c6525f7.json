{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-zone.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-zone.service.js","mtime":1539717142206},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class IpLoadBalancerZoneService {\n  constructor($translate, OvhApiIpLoadBalancing, RegionService) {\n    this.$translate = $translate;\n    this.IpLoadBalancing = OvhApiIpLoadBalancing;\n    this.RegionService = RegionService;\n  }\n\n  getIPLBZones(serviceName) {\n    return this.IpLoadBalancing.Zone().v6().query({\n      serviceName,\n    }).$promise\n      .then(zones => zones.map(zone => ({\n        id: zone,\n        name: this.RegionService.getRegion(zone).microRegion.text,\n      })));\n  }\n\n  getZonesSelectData(serviceName) {\n    return this\n      .getIPLBZones(serviceName)\n      .then((iplbZones) => {\n        iplbZones.push({\n          id: 'all',\n          name: this.$translate.instant('iplb_zone_all'),\n        });\n\n        return iplbZones;\n      });\n  }\n\n  humanizeZone(zone) {\n    return this.RegionService.getRegion(zone).microRegion.text;\n  }\n}\n\nangular.module('managerApp').service('IpLoadBalancerZoneService', IpLoadBalancerZoneService);\n"]}