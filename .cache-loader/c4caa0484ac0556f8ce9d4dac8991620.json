{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/ssh/cloud-project-compute-ssh.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/ssh/cloud-project-compute-ssh.controller.js","mtime":1539717142036},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CloudProjectComputeSshCtrl =\n/*#__PURE__*/\nfunction () {\n  CloudProjectComputeSshCtrl.$inject = [\"OvhApiCloudProjectSshKey\", \"CloudProjectSSHKeyService\", \"$translate\", \"ControllerHelper\", \"CloudMessage\", \"$stateParams\", \"ovhDocUrl\"];\n\n  function CloudProjectComputeSshCtrl(OvhApiCloudProjectSshKey, CloudProjectSSHKeyService, $translate, ControllerHelper, CloudMessage, $stateParams, ovhDocUrl) {\n    _classCallCheck(this, CloudProjectComputeSshCtrl);\n\n    this.OvhApiCloudProjectSshKey = OvhApiCloudProjectSshKey;\n    this.CloudProjectSSHKeyService = CloudProjectSSHKeyService;\n    this.$translate = $translate;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.$stateParams = $stateParams;\n    this.ovhDocUrl = ovhDocUrl;\n    this.serviceName = $stateParams.projectId;\n    this.addSshKeyForm = null;\n    this.searchSshKeysForm = null;\n    this.table = {\n      sshKeysFilter: []\n    };\n    this.toggle = {\n      openAddSsh: false,\n      sshDeleteId: null\n    };\n    this.order = {\n      by: 'name',\n      reverse: false\n    };\n    this.search = null;\n  }\n\n  _createClass(CloudProjectComputeSshCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.initLoaders();\n      this.getSshKeys();\n      this.initGuides();\n      this.initNewSshKey();\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.createKey = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.CloudProjectSSHKeyService.createSSHKey(_this.serviceName, _this.sshKey);\n        },\n        errorHandler: function errorHandler(err) {\n          return _this.CloudMessage.error([_this.$translate.instant('cpc_ssh_add_submit_error'), err.data && err.data.message || ''].join(' '));\n        },\n        successHandler: function successHandler() {\n          _this.toggleAddSshKey();\n\n          _this.getSshKeys(true);\n\n          _this.CloudMessage.success(_this.$translate.instant('cpc_ssh_add_submit_success'));\n        }\n      });\n      this.keys = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.CloudProjectSSHKeyService.getSSHKeys(_this.serviceName);\n        },\n        errorHandler: function errorHandler(err) {\n          return _this.CloudMessage.error([_this.$translate.instant('cpc_ssh_error'), err.data && err.data.message || ''].join(' '));\n        },\n        successHandler: function successHandler() {\n          return _this.filterSshKeys();\n        }\n      });\n    }\n  }, {\n    key: \"getSshKeys\",\n    value: function getSshKeys(clearCache) {\n      if (this.keys.loading) {\n        return;\n      }\n\n      this.toggle.sshDeleteId = null;\n\n      if (clearCache) {\n        this.OvhApiCloudProjectSshKey.v6().resetQueryCache();\n      }\n\n      this.keys.load();\n    }\n  }, {\n    key: \"postSshKey\",\n    value: function postSshKey() {\n      var _this2 = this;\n\n      if (this.createKey.loading) {\n        return;\n      }\n\n      var notUnique = _.find(this.keys.data, function (sshkey) {\n        return sshkey.name === _this2.sshKey.name;\n      });\n\n      if (notUnique) {\n        this.CloudMessage.error(this.$translate.instant('cpc_ssh_add_submit_name_error'));\n        return;\n      }\n\n      this.createKey.load();\n    }\n  }, {\n    key: \"openDeleteSshKey\",\n    value: function openDeleteSshKey(_sshKey) {\n      var _this3 = this;\n\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/cloud/project/compute/ssh/delete/compute-ssh-delete.html',\n          controller: 'CloudProjectComputeSshDeleteCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            serviceName: function serviceName() {\n              return _this3.serviceName;\n            },\n            sshKey: function sshKey() {\n              return _sshKey;\n            }\n          }\n        },\n        successHandler: function successHandler() {\n          _this3.getSshKeys(true);\n\n          _this3.CloudMessage.success(_this3.$translate.instant('cpc_ssh_delete_success'));\n        },\n        errorHandler: function errorHandler(err) {\n          return _this3.CloudMessage.error([_this3.$translate.instant('cpc_ssh_delete_error'), err.data && err.data.message || ''].join(' '));\n        }\n      });\n    }\n  }, {\n    key: \"initNewSshKey\",\n    value: function initNewSshKey() {\n      this.sshKey = {\n        name: null,\n        publicKey: null\n      };\n    }\n  }, {\n    key: \"initGuides\",\n    value: function initGuides() {\n      this.guides = {\n        create: this.ovhDocUrl.getDocUrl('g1769.creating_ssh_keys'),\n        add: this.ovhDocUrl.getDocUrl('g1924.configuring_additionnal_ssh_key'),\n        change: this.ovhDocUrl.getDocUrl('g2069.replacing_your_lost_ssh_key_pair')\n      };\n    }\n  }, {\n    key: \"filterSshKeys\",\n    value: function filterSshKeys() {\n      var _this4 = this;\n\n      if (this.searchSshKeysForm && this.searchSshKeysForm.$valid) {\n        var filteredKeys = _.filter(this.keys.data, function (sshKey) {\n          return _this4.isSshKeyMatchSearchCriterias(sshKey);\n        });\n\n        this.table.sshKeysFilter = filteredKeys;\n\n        if (this.table.sshKeysFilter.length) {\n          this.orderBy();\n        }\n      }\n    }\n  }, {\n    key: \"isSshKeyMatchSearchCriterias\",\n    value: function isSshKeyMatchSearchCriterias(sshKey) {\n      if (this.search && sshKey.name) {\n        return sshKey.name.toLowerCase().indexOf(this.search.toLowerCase()) !== -1;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"toggleAddSshKey\",\n    value: function toggleAddSshKey() {\n      if (this.toggle.openAddSsh) {\n        this.initNewSshKey();\n      }\n\n      this.toggle.openAddSsh = !this.toggle.openAddSsh;\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(by) {\n      if (by) {\n        if (this.order.by === by) {\n          this.order.reverse = !this.order.reverse;\n        } else {\n          this.order.by = by;\n        }\n      }\n    }\n  }], [{\n    key: \"selectSshKey\",\n    value: function selectSshKey(id, active) {\n      if (active) {\n        setTimeout(function () {\n          var sshKeyObject = $(\"#sshkey_\".concat(id));\n          var areaHeight = sshKeyObject.prop('scrollHeight');\n          sshKeyObject.height(areaHeight).select();\n        }, 0);\n      }\n    }\n  }]);\n\n  return CloudProjectComputeSshCtrl;\n}();\n\nangular.module('managerApp').controller('CloudProjectComputeSshCtrl', CloudProjectComputeSshCtrl);",null]}