{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/format-si/format-si.filter.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/format-si/format-si.filter.js","mtime":1539717142262},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class FormatSi {\n    constructor() {\n      this.prefixes = {\n        24: 'Y',\n        21: 'Z',\n        18: 'E',\n        15: 'P',\n        12: 'T',\n        9: 'G',\n        6: 'M',\n        3: 'k',\n        0: '',\n        '-3': 'm',\n        '-6': 'Âµ',\n        '-9': 'n',\n        '-12': 'p',\n        '-15': 'f',\n        '-18': 'a',\n        '-21': 'z',\n        '-24': 'y',\n      };\n\n      return num => this.format(num);\n    }\n\n    format(num) {\n      if (num === 0) {\n        return '0';\n      }\n      let sig = Math.abs(num); // significand\n      let exponent = 0;\n      while (sig >= 1000 && exponent < 24) {\n        sig /= 1000;\n        exponent += 3;\n      }\n      while (sig < 1 && exponent > -24) {\n        sig *= 1000;\n        exponent -= 3;\n      }\n\n      const signPrefix = num < 0 ? '-' : '';\n      if (sig > 1000) {\n        return signPrefix + sig.toFixed(0) + this.prefixes[exponent];\n      }\n      return signPrefix + parseFloat(sig.toPrecision(3)) + this.prefixes[exponent];\n    }\n\n    static filter() {\n      FormatSi.instance = new FormatSi();\n      return FormatSi.instance;\n    }\n  }\n\n  angular.module('managerApp').filter('formatSi', FormatSi.filter);\n})();\n"]}