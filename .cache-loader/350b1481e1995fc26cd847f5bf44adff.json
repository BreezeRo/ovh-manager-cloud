{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/snapshot/add/cloud-project-compute-snapshot-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/snapshot/add/cloud-project-compute-snapshot-add.controller.js","mtime":1539717142032},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["\n\nangular.module('managerApp')\n  .controller('CloudProjectComputeSnapshotAddCtrl', function CloudProjectComputeSnapshotAddCtrl(\n    $uibModalInstance, $translate, $filter, params, CloudMessage, OvhApiCloudProjectSnapshot,\n    atInternet, CloudProjectComputeInfrastructureOrchestrator,\n    CloudProjectComputeSnapshotPriceService,\n  ) {\n    const self = this;\n\n    self.snapshot = {\n      vm: params,\n      name: [params.name, $filter('date')(new Date(), 'short')].join(' '),\n    };\n    self.loaders = {\n      backup: false,\n    };\n\n    self.snapshotPriceStruct = {\n      prices: [],\n      size: params.flavor.disk,\n      total: {},\n    };\n\n    self.backup = function backup() {\n      self.loaders.backup = true;\n      OvhApiCloudProjectSnapshot.v6().resetQueryCache();\n      CloudProjectComputeInfrastructureOrchestrator\n        .backupVm(self.snapshot.vm, self.snapshot.name).then(() => {\n          CloudMessage.success($translate.instant('cpc_snapshot_add_success', { snapshotname: self.snapshot.name }));\n          $uibModalInstance.close(self.snapshot);\n          atInternet.trackOrder({\n            name: `[SNAPSHOT]${self.snapshot.vm.flavor.groupName.replace(/[\\W_]+/g, '')}[${self.snapshot.vm.flavor.groupName}]`,\n            page: 'iaas::pci-project::compute::infrastructure::order',\n            priceTaxFree: self.snapshotPriceStruct.total.value,\n          });\n        }, (err) => {\n          CloudMessage.error([$translate.instant('cpc_snapshot_add_error'), (err.data && err.data.message) || ''].join(' '));\n        }).finally(() => {\n          self.loaders.backup = false;\n        });\n    };\n\n    self.getPriceData = function getPriceData() {\n      CloudProjectComputeSnapshotPriceService\n        .getSnapshotPrice({\n          size: self.snapshotPriceStruct.size,\n          serviceName: self.snapshot.vm.serviceName,\n          region: self.snapshot.vm.region,\n        })\n        .then((data) => {\n          self.snapshotPriceStruct.prices = [data];\n          self.snapshotPriceStruct.total = data.totalPrice;\n        });\n    };\n\n    self.cancel = function cancel() {\n      $uibModalInstance.dismiss(self.snapshot);\n    };\n\n    self.getPriceData();\n  });\n"]}