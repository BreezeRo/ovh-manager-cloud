{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/volume/snapshot/cloud-project-compute-volume-snapshot-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/volume/snapshot/cloud-project-compute-volume-snapshot-add.controller.js","mtime":1539717142042},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["\n\nangular.module('managerApp')\n  .controller('CloudProjectComputeVolumeSnapshotAddCtrl', function CloudProjectComputeVolumeSnapshotAddCtrl($scope, $stateParams, $uibModalInstance, params, CloudMessage, $translate, $filter, $q, OvhCloudPriceHelper, CloudProjectComputeVolumesOrchestrator) {\n    const self = this;\n    const serviceName = $stateParams.projectId;\n\n    self.snapshot = {\n      volume: params,\n      name: null,\n      price: null,\n      priceText: null,\n    };\n\n    self.loaders = {\n      init: false,\n      snapshot: false,\n    };\n\n    function init() {\n      self.loaders.init = true;\n      const volumeSnapshotConsumption = 'volume.snapshot.consumption';\n      OvhCloudPriceHelper.getPrices(serviceName).then((prices) => {\n        const price = prices[`${volumeSnapshotConsumption}.${self.snapshot.volume.region}`] || prices[volumeSnapshotConsumption];\n        if (price) {\n          self.snapshot.price = price.priceInUcents * self.snapshot.volume.size * moment.duration(1, 'months').asHours() / 100000000;\n          self.snapshot.priceText = price.price.text.replace(/\\d+(?:[.,]\\d+)?/, _.round(self.snapshot.price.toString(), 2));\n        }\n        self.snapshot.name = `${self.snapshot.volume.name} ${$filter('date')(new Date(), 'short')}`;\n      }).finally(() => {\n        self.loaders.init = false;\n      });\n    }\n\n    self.confirmSnapshot = function confirmSnapshot() {\n      self.loaders.snapshot = true;\n      CloudProjectComputeVolumesOrchestrator\n        .snapshotVolume(self.snapshot.volume, self.snapshot.name).then(() => {\n          $uibModalInstance.close(self.snapshot);\n          CloudMessage.info($translate.instant('cpcv_snapshot_creation_info'), { hideAfter: 3 });\n        }, (err) => {\n          CloudMessage.error([$translate.instant('cpcv_snapshot_creation_error'), (err.data && err.data.message) || ''].join(' '));\n        }).finally(() => {\n          self.loaders.snapshot = false;\n        });\n    };\n\n    self.cancel = function cancel() {\n      $uibModalInstance.dismiss(self.snapshot);\n    };\n\n    init();\n  });\n"]}