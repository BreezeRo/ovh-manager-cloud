{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas.controller.js","mtime":1539717142178},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DeskaasCtrl =\n/*#__PURE__*/\nfunction () {\n  DeskaasCtrl.$inject = [\"$q\", \"$translate\", \"OvhApiDeskaasService\"];\n\n  function DeskaasCtrl($q, $translate, OvhApiDeskaasService) {\n    _classCallCheck(this, DeskaasCtrl);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.OvhApiDeskaasService = OvhApiDeskaasService;\n    this.flags = {\n      initializing: true\n    };\n    this.services = [];\n  }\n\n  _createClass(DeskaasCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.flags.initializing = true;\n      this.$q.all([this.getServices()]).then(function () {\n        _this.flags.initializing = false;\n      });\n    }\n  }, {\n    key: \"registerService\",\n    value: function registerService(details, serviceInfo, user) {\n      this.services.push({\n        details: details,\n        serviceInfo: serviceInfo,\n        user: user\n      });\n    }\n  }, {\n    key: \"loadService\",\n    value: function loadService(serviceId) {\n      var _this2 = this;\n\n      var servicePromise = this.OvhApiDeskaasService.v6().serviceInfos({\n        serviceName: serviceId\n      }).$promise;\n      servicePromise.then(function (serviceInfo) {\n        var detailsPromise = _this2.OvhApiDeskaasService.v6().getDetails({\n          serviceName: serviceId\n        }).$promise;\n\n        detailsPromise.then(function (details) {\n          if (details.alias !== 'noAlias') {\n            _.set(details, 'displayName', \"\".concat(details.alias, \" (\").concat(details.serviceName, \")\"));\n          } else {\n            _.set(details, 'displayName', details.serviceName);\n          }\n\n          if (serviceInfo.status === 'ok') {\n            var userPromise = _this2.OvhApiDeskaasService.v6().getUser({\n              serviceName: serviceId\n            }).$promise;\n\n            userPromise.then(function (user) {\n              _.set(user, 'displayName', \"\".concat(user.name, \" (\").concat(user.email, \")\"));\n\n              _this2.registerService(details, serviceInfo, user);\n            });\n          } else {\n            _this2.registerService(details, serviceInfo, {\n              displayName: '-'\n            });\n          }\n        });\n      });\n      return servicePromise;\n    }\n  }, {\n    key: \"getServices\",\n    value: function getServices() {\n      var _this3 = this;\n\n      var promise = this.OvhApiDeskaasService.v6().getServices().$promise;\n      return promise.then(function (serviceIds) {\n        var promises = [];\n        serviceIds.forEach(function (serviceId) {\n          return promises.push(_this3.loadService(serviceId));\n        });\n        return _this3.$q.all(promises);\n      });\n    }\n  }]);\n\n  return DeskaasCtrl;\n}();\n\nangular.module('managerApp').controller('DeskaasCtrl', DeskaasCtrl);",null]}