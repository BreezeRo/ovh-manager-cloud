{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/vrack/common/iplb-vrack-helper.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/vrack/common/iplb-vrack-helper.service.js","mtime":1539717142224},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerVrackHelper =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerVrackHelper.$inject = [\"CloudPoll\", \"IpLoadBalancerVrackService\", \"OvhApiVrack\"];\n\n  function IpLoadBalancerVrackHelper(CloudPoll, IpLoadBalancerVrackService, OvhApiVrack) {\n    _classCallCheck(this, IpLoadBalancerVrackHelper);\n\n    this.CloudPoll = CloudPoll;\n    this.IpLoadBalancerVrackService = IpLoadBalancerVrackService;\n    this.OvhApiVrack = OvhApiVrack;\n  }\n\n  _createClass(IpLoadBalancerVrackHelper, [{\n    key: \"associateVrack\",\n    value: function associateVrack(serviceName, networkId, vrackCreationRules) {\n      var _this = this;\n\n      this.IpLoadBalancerVrackService.associateVrack(serviceName, networkId).then(function (task) {\n        _.set(vrackCreationRules, 'status', 'activating');\n\n        return _this.pollCreationRules(task);\n      }).then(function () {\n        return _this.IpLoadBalancerVrackService.getNetworkCreationRules(serviceName, {\n          resetCache: true\n        });\n      }).then(function (creationRules) {\n        _.extend(vrackCreationRules, creationRules);\n      });\n    }\n  }, {\n    key: \"deAssociateVrack\",\n    value: function deAssociateVrack(serviceName, vrackCreationRules) {\n      var _this2 = this;\n\n      this.IpLoadBalancerVrackService.deAssociateVrack(serviceName).then(function (task) {\n        _.set(vrackCreationRules, 'status', 'deactivating');\n\n        return _this2.pollCreationRules(task);\n      }).then(function () {\n        return _this2.IpLoadBalancerVrackService.getNetworkCreationRules(serviceName, {\n          resetCache: true\n        });\n      }).then(function (creationRules) {\n        _.extend(vrackCreationRules, creationRules);\n      });\n    }\n  }, {\n    key: \"pollCreationRules\",\n    value: function pollCreationRules(task) {\n      var _this3 = this;\n\n      return this.CloudPoll.poll({\n        item: task,\n        pollFunction: function pollFunction() {\n          return _this3.OvhApiVrack.v6().task({\n            serviceName: task.serviceName,\n            taskId: task.id\n          }).$promise.catch(function () {\n            return {\n              status: 'done'\n            };\n          });\n        },\n        stopCondition: function stopCondition(item) {\n          return item.status === 'done' || item.status === 'error';\n        }\n      }).$promise;\n    }\n  }]);\n\n  return IpLoadBalancerVrackHelper;\n}();\n\nangular.module('managerApp').service('IpLoadBalancerVrackHelper', IpLoadBalancerVrackHelper);",null]}