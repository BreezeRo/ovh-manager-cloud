{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/account/setup/logs-account-setup.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/account/setup/logs-account-setup.controller.js","mtime":1539717142075},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsAccountSetupCtrl {\n  constructor($q, $state, $stateParams, ControllerHelper, CloudMessage, LogsAccountService,\n    LogsHomeService, LogsDetailService) {\n    this.$q = $q;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsAccountService = LogsAccountService;\n    this.LogsHomeService = LogsHomeService;\n    this.LogsDetailService = LogsDetailService;\n    this.passwordValid = false;\n    this.passwordRules = this.LogsAccountService.getPasswordRules(false);\n\n    this.initLoaders();\n  }\n\n  initLoaders() {\n    this.service = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsDetailService.getServiceDetails(this.serviceName)\n        .then((service) => {\n          this.userName = service.username;\n          return service;\n        }),\n    }).load();\n    this.accountDetails = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsHomeService.getAccountDetails(this.serviceName)\n        .then((account) => {\n          this.fullName = `${account.me.firstname} ${account.me.name}`;\n          return account;\n        }),\n    }).load();\n  }\n\n  resetPasswordRules() {\n    this.passwordRules = this.LogsAccountService.getPasswordRules(true);\n  }\n\n  validatePassword() {\n    let allValid = true;\n    _.each(this.passwordRules, (rule) => {\n      _.set(rule, 'isValid', rule.validator(this.newPassword));\n      if (allValid) {\n        allValid = rule.isValid;\n      }\n      _.set(rule, 'isValidated', true);\n    });\n    this.passwordValid = allValid;\n  }\n\n  changePassword() {\n    if (this.form.$invalid || !this.passwordValid) {\n      return this.$q.reject();\n    }\n    this.CloudMessage.flushChildMessage();\n    this.saving = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.LogsAccountService\n        .changePassword(\n          this.serviceName,\n          this.newPassword,\n          true,\n        )\n        .then(() => {\n          this.$state.go('dbaas.logs.detail.home', { serviceName: this.serviceName }, { reload: true });\n        }),\n    });\n    return this.saving.load();\n  }\n}\n\nangular.module('managerApp').controller('LogsAccountSetupCtrl', LogsAccountSetupCtrl);\n"]}