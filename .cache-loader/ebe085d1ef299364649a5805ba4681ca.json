{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/cloud-project.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/cloud-project.controller.js","mtime":1539717374437},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectCtrl', [\"$scope\", \"$state\", \"$stateParams\", \"$transitions\", \"OvhApiCloud\", \"CloudProjectRightService\", function CloudProjectCtrl($scope, $state, $stateParams, $transitions, OvhApiCloud, CloudProjectRightService) {\n  var self = this;\n  var serviceName = $stateParams.projectId;\n  self.loaders = {\n    project: false\n  };\n  self.model = {\n    project: null,\n    hasWriteRight: true\n  };\n\n  self.includes = function includes(stateName) {\n    return $state.includes(stateName);\n  }; // reference to our rootScope state change listener\n\n\n  var stateChangeListener = null;\n\n  function init() {\n    self.loaders.project = true; // get current project\n\n    if (serviceName) {\n      OvhApiCloud.Project().v6().get({\n        serviceName: serviceName\n      }).$promise.then(function (project) {\n        self.model.project = project; // if project is suspended, redirect to error page\n\n        if (self.model.project.status === 'suspended' || self.model.project.status === 'creating') {\n          $state.go('iaas.pci-project.details');\n        } else {\n          CloudProjectRightService.userHaveReadWriteRights(serviceName).then(function (hasWriteRight) {\n            self.model.hasWriteRight = hasWriteRight;\n          });\n        }\n      }).catch(function () {\n        return $state.go('iaas.pci-project.details');\n      }).finally(function () {\n        self.loaders.project = false;\n      });\n    } else {\n      $state.go('iaas.pci-project-new');\n      return;\n    } // before a state change, check if the destination project is suspended,\n    // if it's the case just redirect to the error page\n\n\n    stateChangeListener = $transitions.onStart({}, function (transition) {\n      var toState = transition.to();\n      var toParams = transition.params(); // avoid infinite state redirection loop\n\n      if (toState && toState.name === 'iaas.pci-project.details') {\n        return;\n      } // check if project is loaded\n\n\n      if (!self.model.project) {\n        return;\n      } // redirection is only for suspended projects\n\n\n      if (self.model.project.status !== 'suspended' && self.model.project.status !== 'creating') {\n        return;\n      }\n\n      if (self.model.project.project_id === toParams.projectId) {\n        $state.go('iaas.pci-project.details');\n      }\n    });\n  } // when controller is destroyed we must remove global state change listener\n\n\n  $scope.$on('$destroy', function () {\n    if (stateChangeListener) {\n      stateChangeListener();\n    }\n  });\n  init();\n}]);",null]}