{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/tabs/tabs.component.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/ui-components/tabs/tabs.component.js","mtime":1539717142278},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nangular.module('managerApp').component('cuiTabs', {\n  template: \"\\n      <ul class=\\\"cui-tabs\\\"\\n          role=\\\"menubar\\\"\\n          data-ng-transclude></ul>\\n    \",\n  controllerAs: '$ctrl',\n  controller:\n  /*#__PURE__*/\n  function () {\n    cuiTabsController.$inject = [\"TabsService\"];\n\n    function cuiTabsController(TabsService) {\n      _classCallCheck(this, cuiTabsController);\n\n      this.TabsService = TabsService;\n    }\n\n    _createClass(cuiTabsController, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        this.tabs = [];\n      }\n    }, {\n      key: \"addTab\",\n      value: function addTab(tab) {\n        this.TabsService.registerTab(tab);\n        this.tabs = this.TabsService.getRegisteredTabs();\n      }\n    }]);\n\n    return cuiTabsController;\n  }(),\n  transclude: true\n}).directive('cuiTab', function () {\n  return {\n    replace: true,\n    restrict: 'E',\n    require: ['^^cuiTabs', 'cuiTab'],\n    controllerAs: '$ctrl',\n    controller: [\"$timeout\", function CuiTabController($timeout) {\n      var _this = this;\n\n      _classCallCheck(this, CuiTabController);\n\n      this.active = false;\n      this.isActivating = false;\n\n      this.updateActive = function (tabAttr) {\n        _this.active = tabAttr.active;\n        _this.isActivating = tabAttr.isActivating;\n\n        if (tabAttr.isActivating) {\n          $timeout(function () {\n            _.set(tabAttr, 'isActivating', false);\n\n            _this.updateActive(tabAttr);\n          }, 200);\n        }\n      };\n    }],\n    scope: true,\n    transclude: true,\n    template: \"\\n            <li class=\\\"cui-tabs__tab\\\"\\n                role=\\\"menuitem\\\"\\n                data-ng-class=\\\"{ 'cui-tabs__tab_active': $ctrl.active, 'cui-tabs__tab_animate': $ctrl.isActivating }\\\">\\n                <ng-transclude data-ng-if=\\\"!$ctrl.state\\\"></ng-transclude>\\n                <a data-ng-if=\\\"$ctrl.state && !$ctrl.disabled\\\"\\n                   ui-sref=\\\"{{ $ctrl.state + '(' + String($ctrl.stateParams) + ')' }}\\\">\\n                   <span data-ng-bind=\\\"$ctrl.text\\\"></span>\\n                </a>\\n                <a data-ng-if=\\\"$ctrl.state && $ctrl.disabled\\\" class=\\\"cui-tabs__tab_disabled\\\">\\n                   <span data-ng-bind=\\\"$ctrl.text\\\"></span>\\n                </a>\\n            </li>\\n        \",\n    bindToController: {\n      active: '<',\n      state: '@',\n      stateParams: '<',\n      text: '<',\n      disabled: '<'\n    },\n    link: function link($scope, $element, $attrs, $ctrls) {\n      var parentCtrl = $ctrls[0];\n      var childCtrl = $ctrls[1];\n\n      var tabAttr = _.pick(childCtrl, ['active', 'state', 'stateParams', 'text']); // We purge undefined attributes from the object.\n\n\n      tabAttr = _.pick(tabAttr, _.identity);\n\n      tabAttr.updateActive = function (active, isActivating) {\n        tabAttr.active = active;\n        tabAttr.isActivating = isActivating;\n        childCtrl.updateActive(tabAttr);\n      };\n\n      parentCtrl.addTab(tabAttr);\n    }\n  };\n});",null]}