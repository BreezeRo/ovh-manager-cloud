{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/async-loader.factory.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/async-loader.factory.js","mtime":1539717141931},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["// Inspired by angular-translate-partial-loader (see sources)\nexport default /* @ngInject */ function ($q) {\n  /**\n   * The tricky part of this loader is that we need to check\n   * if an import (addTranslations) has been called during all\n   * the pending imports. If it's the case we cannot return\n   * translations yet and we need to loop again in order to\n   * wait for all the imports to be finised.\n   */\n\n  // loaded translations\n  const translations = {};\n\n  // list of pending translation import\n  const pending = [];\n\n  // true when a new translation import occurs\n  let changed = false;\n\n  const loader = function loader() {\n    // when the function is first called, we have no changes\n    changed = false;\n\n    // when all pending import are resolved\n    return $q.all(pending).then(() => {\n      // if an import has been added during pending changes we need to loop\n      if (changed) {\n        return loader();\n        // otherwise it's fine we just return translations\n      }\n      return translations;\n    });\n  };\n\n  loader.addTranslations = function addTranslations(translationPromise) {\n    // a new import occurs, we keep trace of the change\n    changed = true;\n\n    // push the pending import\n    pending.push(translationPromise.then((tr) => {\n      Object.assign(translations, tr);\n    }));\n  };\n\n  return loader;\n}\n"]}