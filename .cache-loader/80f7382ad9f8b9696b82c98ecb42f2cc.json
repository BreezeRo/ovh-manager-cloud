{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/history/cloud-project-billing-history.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/history/cloud-project-billing-history.controller.js","mtime":1539717141958},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["\n\nangular.module('managerApp').controller('CloudProjectBillingHistoryCtrl',\n  function ($state, validParams) {\n    const self = this;\n    self.data = {};\n    self.firstDayCurrentMonth = null;\n\n    self.previousMonth = function () {\n      const lastMonth = self.data.monthBilling.subtract(1, 'month');\n      $state.go('iaas.pci-project.billing.history', {\n        year: lastMonth.year(),\n        month: lastMonth.month() + 1, // because moment indexes month from 0 to 11\n      });\n    };\n\n    self.nextMonth = function () {\n      const nextMonth = self.data.monthBilling.add(1, 'month');\n      $state.go('iaas.pci-project.billing.history', {\n        year: nextMonth.year(),\n        month: nextMonth.month() + 1, // because moment indexes month from 0 to 11\n      });\n    };\n\n    self.isLimitReached = function () {\n      return self.data.monthBilling.isSameOrAfter(self.firstDayCurrentMonth, 'day');\n    };\n\n    self.getBillingDateInfo = function () {\n      if (self.data.monthBilling.isValid()) {\n        return {\n          month: self.data.monthBilling.format('MMMM'),\n          year: self.data.monthBilling.year(),\n        };\n      }\n      return null;\n    };\n\n    function init() {\n      self.firstDayCurrentMonth = moment().startOf('month');\n\n      self.data.monthBilling = moment({\n        y: validParams.year,\n        M: validParams.month - 1, // because moment indexes month from 0 to 11\n        d: 1,\n      });\n    }\n\n    init();\n  });\n"]}