{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/loginInformation/cloud-project-compute-infrastructure-virtual-machine-login-information.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/virtualMachine/loginInformation/cloud-project-compute-infrastructure-virtual-machine-login-information.controller.js","mtime":1539717142011},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl {\n    constructor(\n      $uibModalInstance, params, $q, $state, $translate, CloudMessage, Poller,\n      OvhApiCloudProjectInstance, CloudImageService,\n    ) {\n      this.$uibModalInstance = $uibModalInstance;\n      this.$q = $q;\n      this.$state = $state;\n      this.$translate = $translate;\n      this.CloudMessage = CloudMessage;\n      this.Poller = Poller;\n      this.OvhApiCloudProjectInstance = OvhApiCloudProjectInstance;\n      this.CloudImageService = CloudImageService;\n\n      this.loading = true;\n      this.poller = false;\n      this.readOnlyError = false;\n      this.data = {\n        vm: params,\n        ip: null,\n        image: {},\n        isWindows: false,\n        hasApplication: false,\n        applicationInfo: [],\n      };\n    }\n\n    $onInit() {\n      this.loading = true;\n      this.getLoginInfo()\n        .catch((error) => {\n          this.CloudMessage.error(`${this.$translate.instant('login_information_error')} ${error.data.message}`);\n        })\n        .then(() => {\n          this.data.hasApplication = this.data.image.apps;\n          if (this.data.hasApplication) {\n            this.pollApplicationInfo(this.data.vm.serviceName, this.data.vm.id);\n          }\n        })\n        .finally(() => {\n          this.data.isWindows = this.data.image.type === 'windows';\n          this.loading = false;\n        });\n    }\n\n    displayLoginInfo() {\n      const user = this.data.image.user || 'user';\n      const ip = (this.data.ip && this.data.ip.ip) || 'X.X.X.X';\n\n      if (!this.data.isWindows) {\n        return `ssh ${user}@${ip}`;\n      }\n\n      return `rdesktop ${ip}`;\n    }\n\n    getLoginInfo() {\n      if (_.has(this.data.vm.ipAddresses, 'length') && this.data.vm.image) {\n        this.data.ip = this.constructor.getIp(this.data.vm.ipAddresses);\n        this.data.image = this.CloudImageService.constructor.augmentImage(this.data.vm.image);\n        return this.$q.resolve({});\n      }\n      return this.OvhApiCloudProjectInstance.v6().get({\n        serviceName: this.data.vm.serviceName,\n        instanceId: this.data.vm.id,\n      }).$promise\n        .then((instance) => {\n          if (!instance.image) {\n            return this.$q.reject({});\n          }\n          this.data.ip = this.constructor.getIp(instance.ipAddresses);\n          this.data.image = this.CloudImageService.constructor.augmentImage(instance.image);\n          return null;\n        });\n    }\n\n    static getIp(ipAddresses) {\n      return _.find(ipAddresses, { version: 4 }) || ipAddresses[0] || null;\n    }\n\n\n    pollApplicationInfo(serviceName, instanceId) {\n      this.poller = true;\n      this.Poller.poll(`/cloud/project/${serviceName}/instance/${instanceId}/applicationAccess`,\n        null,\n        {\n          method: 'POST',\n          successRule(appInfo) {\n            return appInfo.status === 'ok';\n          },\n          namespace: 'cloud.loginInformation',\n        }).then((appInfo) => {\n        this.data.applicationInfo = appInfo.accesses;\n      }, (error) => {\n        const readonly = error.statusText === 'ReadonlySession';\n        this.readOnlyError = readonly;\n        if (!readonly) {\n          this.CloudMessage.error(`${this.$translate.instant('login_information_error')} ${error.data.message}`);\n        }\n      }).finally(() => {\n        this.poller = false;\n      });\n    }\n\n    close() {\n      this.Poller.kill({ namespace: 'cloud.loginInformation' });\n      this.$uibModalInstance.dismiss();\n    }\n\n    goToConsole() {\n      this.Poller.kill({ namespace: 'cloud.loginInformation' });\n      this.$uibModalInstance.close(this.data.vm.id);\n    }\n  }\n\n  angular.module('managerApp').controller('CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl', CloudProjectComputeInfrastructureVirtualMachineLoginInformationCtrl);\n})();\n"]}