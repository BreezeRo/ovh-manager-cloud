{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-detail.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/iplb-detail.controller.js","mtime":1539717142204},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerDetailCtrl =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerDetailCtrl.$inject = [\"$stateParams\", \"CloudMessage\", \"CloudNavigation\", \"IpLoadBalancerConfigurationService\"];\n\n  function IpLoadBalancerDetailCtrl($stateParams, CloudMessage, CloudNavigation, IpLoadBalancerConfigurationService) {\n    _classCallCheck(this, IpLoadBalancerDetailCtrl);\n\n    this.$stateParams = $stateParams;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.IpLoadBalancerConfigurationService = IpLoadBalancerConfigurationService;\n    this.messages = [];\n    this.serviceName = $stateParams.serviceName;\n  }\n\n  _createClass(IpLoadBalancerDetailCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.CloudNavigation.init({\n        state: 'network.iplb.detail',\n        stateParams: {\n          serviceName: this.serviceName\n        }\n      });\n      this.CloudMessage.unSubscribe('network.iplb.detail');\n      this.messageHandler = this.CloudMessage.subscribe('network.iplb.detail', {\n        onMessage: function onMessage() {\n          return _this.refreshMessage();\n        }\n      });\n      this.checkPendingChanges();\n    }\n  }, {\n    key: \"refreshMessage\",\n    value: function refreshMessage() {\n      this.messages = this.messageHandler.getMessages();\n    }\n  }, {\n    key: \"checkPendingChanges\",\n    value: function checkPendingChanges() {\n      var _this2 = this;\n\n      this.IpLoadBalancerConfigurationService.getPendingChanges(this.serviceName).then(function (changes) {\n        return _.chain(changes).map('number').sum().value() > 0;\n      }).then(function (hasChanges) {\n        if (hasChanges) {\n          _this2.IpLoadBalancerConfigurationService.showRefreshWarning();\n        }\n      });\n    }\n  }]);\n\n  return IpLoadBalancerDetailCtrl;\n}();\n\nangular.module('managerApp').controller('IpLoadBalancerDetailCtrl', IpLoadBalancerDetailCtrl);",null]}