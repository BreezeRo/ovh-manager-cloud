{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/add/nasha-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/add/nasha-add.controller.js","mtime":1539717142230},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NashaAddCtrl =\n/*#__PURE__*/\nfunction () {\n  NashaAddCtrl.$inject = [\"$translate\", \"$state\", \"CloudMessage\", \"ControllerHelper\", \"NashaAddService\"];\n\n  function NashaAddCtrl($translate, $state, CloudMessage, ControllerHelper, NashaAddService) {\n    _classCallCheck(this, NashaAddCtrl);\n\n    this.$translate = $translate;\n    this.$state = $state;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.NashaAddService = NashaAddService;\n    this.data = {};\n    this.messages = {};\n    this.initLoaders();\n  }\n\n  _createClass(NashaAddCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.data = {\n        selectedDatacenter: null,\n        selectedModel: null,\n        selectedDuration: null,\n        order: null\n      };\n      this.loadMessages();\n      this.datacenters.load();\n      this.offers.load();\n      this.durations.load();\n    }\n  }, {\n    key: \"order\",\n    value: function order() {\n      var _this = this;\n\n      this.NashaAddService.order(this.data).then(function (response) {\n        return _this.$state.go('paas.nasha-order-complete', {\n          orderUrl: response.url\n        });\n      });\n    }\n  }, {\n    key: \"refreshMessage\",\n    value: function refreshMessage() {\n      this.messages = this.messageHandler.getMessages();\n    }\n  }, {\n    key: \"isLoadingOfferData\",\n    value: function isLoadingOfferData() {\n      return this.datacenters.loading || this.offers.loading || this.durations.loading;\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this2 = this;\n\n      this.datacenters = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.NashaAddService.getAvailableRegions();\n        }\n      });\n      this.offers = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.NashaAddService.getOffers();\n        }\n      });\n      this.durations = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.NashaAddService.getDurations();\n        }\n      });\n    }\n  }, {\n    key: \"loadMessages\",\n    value: function loadMessages() {\n      var _this3 = this;\n\n      var stateName = 'paas.nasha-add';\n      this.CloudMessage.unSubscribe(stateName);\n      this.messageHandler = this.CloudMessage.subscribe(stateName, {\n        onMessage: function onMessage() {\n          return _this3.refreshMessage();\n        }\n      });\n      this.CloudMessage.info(this.$translate.instant('nasha_order_datacenter_unavailable', {\n        region: this.$translate.instant('nasha_order_datacenter_gra'),\n        fallback: this.$translate.instant('nasha_order_datacenter_rbx')\n      }));\n    }\n  }]);\n\n  return NashaAddCtrl;\n}();\n\nangular.module('managerApp').controller('NashaAddCtrl', NashaAddCtrl);",null]}