{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/nasha.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/nasha.controller.js","mtime":1539717142235},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class NashaCtrl {\n  constructor($q, $state, $stateParams, $translate, CloudMessage, OvhApiDedicatedNasha,\n    ovhDocUrl, REDIRECT_URLS) {\n    this.$q = $q;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.OvhApiDedicatedNasha = OvhApiDedicatedNasha;\n    this.ovhDocUrl = ovhDocUrl;\n    this.REDIRECT_URLS = REDIRECT_URLS;\n\n    this.loading = false;\n    this.urlRenew = null;\n    this.data = {};\n    this.monitoring = {};\n    this.guides = {};\n    this.messages = [];\n    this.stateName = 'paas.nasha';\n  }\n\n  $onInit() {\n    this.data = {\n      information: null,\n      nasha: null,\n      bars: [],\n    };\n\n    this.monitoring = {\n      enabled: false,\n      loading: false,\n    };\n\n    this.initGuides();\n    this.loadNasha();\n    this.loadMessages();\n  }\n\n  loadNasha() {\n    this.loading = true;\n    this.$q.all({\n      nasha: this.OvhApiDedicatedNasha.Aapi()\n        .get({ serviceName: this.$stateParams.nashaId }).$promise,\n      nashaInfo: this.OvhApiDedicatedNasha.v6()\n        .getServiceInfos({ serviceName: this.$stateParams.nashaId }).$promise,\n    })\n      .then((data) => {\n        this.data.nasha = data.nasha;\n\n        _.forEach(this.data.nasha.use, (part, key) => {\n          _.set(part, 'name', this.$translate.instant(`nasha_storage_usage_type_${key}`));\n          return part;\n        });\n\n        this.monitoring.enabled = data.nasha.monitored;\n        this.data.information = data.nashaInfo;\n        this.urlRenew = this.REDIRECT_URLS.renew\n          .replace('{serviceType}', 'DEDICATED_NASHA')\n          .replace('{serviceName}', this.data.nasha.serviceName);\n\n        if (this.data.information.status === 'expired') {\n          this.CloudMessage.error(this.$translate.instant('nasha_expired'));\n        }\n      })\n      .catch(() => this.CloudMessage.error(this.$translate.instant('nasha_dashboard_loading_error')))\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n\n  initGuides() {\n    this.guides.title = this.$translate.instant('nasha_guide_title');\n    this.guides.footer = this.$translate.instant('nash_guide_footer');\n    this.guides.list = [];\n    this.guides.list.push({\n      name: this.$translate.instant('nash_guide_name'),\n      url: this.ovhDocUrl.getDocUrl('cloud/storage/nas'),\n    });\n  }\n\n  updateMonitoringState(state) {\n    if (!this.monitoring.loading) {\n      this.monitoring.enabled = state;\n      this.monitoring.loading = true;\n      this.OvhApiDedicatedNasha.v6().updateDetail({\n        serviceName: this.data.nasha.serviceName,\n        customName: this.data.nasha.customName,\n        monitored: state,\n      }).$promise\n        .then(() => {\n          this.monitoring.loading = false;\n          this.CloudMessage.success(this.$translate.instant(`nasha_dashboard_update_success_${state ? 'enabled' : 'disabled'}`));\n        })\n        .catch((error) => {\n          this.monitoring.loading = false;\n          this.monitoring.enabled = !state;\n          this.CloudMessage.error(`${this.$translate.instant('nasha_dashboard_update_error')} ${error.message}`);\n        });\n    }\n  }\n\n  loadMessages() {\n    this.CloudMessage.unSubscribe(this.stateName);\n    this.messageHandler = this.CloudMessage.subscribe(this.stateName, {\n      onMessage: () => this.refreshMessage(),\n    });\n  }\n\n  refreshMessage() {\n    this.messages = this.messageHandler.getMessages();\n  }\n}\n\n\nangular.module('managerApp').controller('NashaCtrl', NashaCtrl);\n"]}