{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/logs-home.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/logs-home.controller.js","mtime":1539717142082},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsHomeCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsHomeCtrl.$inject = [\"$q\", \"$scope\", \"$state\", \"$stateParams\", \"$translate\", \"bytesFilter\", \"ControllerHelper\", \"LogsConstants\", \"LogsHomeService\", \"LogsTokensService\", \"LogsHelperService\", \"LogsDetailService\"];\n\n  function LogsHomeCtrl($q, $scope, $state, $stateParams, $translate, bytesFilter, ControllerHelper, LogsConstants, LogsHomeService, LogsTokensService, LogsHelperService, LogsDetailService) {\n    _classCallCheck(this, LogsHomeCtrl);\n\n    this.$q = $q;\n    this.$scope = $scope;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.$translate = $translate;\n    this.bytesFilter = bytesFilter;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsHomeService = LogsHomeService;\n    this.LogsTokensService = LogsTokensService;\n    this.LogsHelperService = LogsHelperService;\n    this.LogsDetailService = LogsDetailService;\n    this.LogsConstants = LogsConstants;\n  }\n\n  _createClass(LogsHomeCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.service = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsDetailService.getServiceDetails(_this.serviceName).then(function (service) {\n            _this.initLoaders();\n\n            _this.isAccountDisabled = _this.LogsHelperService.isAccountDisabled(service);\n            _this.lastUpdatedDate = moment(service.updatedAt).format('LL');\n\n            if (service.state === _this.LogsConstants.SERVICE_STATE_TO_CONFIG) {\n              _this.goToAccountSetupPage();\n            } else {\n              _this.dataUsageGraphData = _this.LogsConstants.DATA_USAGE_GRAPH_CONFIGURATION;\n\n              _this.runLoaders().then(function () {\n                return _this.prepareDataUsageGraphData();\n              });\n            }\n\n            return service;\n          });\n        }\n      });\n      this.service.load();\n    }\n  }, {\n    key: \"goToAccountSetupPage\",\n    value: function goToAccountSetupPage() {\n      return this.gotoState('dbaas.logs.detail.setup');\n    }\n    /**\n     * opens UI modal to change password\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"openChangePasswordModal\",\n    value: function openChangePasswordModal() {\n      var _this2 = this;\n\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/dbaas/logs/detail/account/password/logs-account-password.html',\n          controller: 'LogsAccountPasswordCtrl',\n          controllerAs: 'ctrl',\n          backdrop: 'static'\n        }\n      }).finally(function () {\n        return _this2.ControllerHelper.scrollPageToTop();\n      });\n    }\n    /**\n     * Prepares the data usage graph\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"prepareDataUsageGraphData\",\n    value: function prepareDataUsageGraphData() {\n      var _this3 = this;\n\n      var offerLimit = this.account.data.offer.esStorage * this.LogsConstants.OFFER_STORAGE_MULTIPLIER;\n\n      var maxDataReceived = _.max(this.storageData.data.usageData[0]);\n\n      this.dataUsageGraphData.labels = this.storageData.data.timestamps.map(function (timestamp) {\n        return moment(timestamp).format('DD MMM');\n      });\n      this.dataUsageGraphData.data = this.storageData.data.usageData;\n      this.dataUsageGraphData.series = [this.$translate.instant('logs_home_data_received'), this.$translate.instant('logs_home_number_of_documents')];\n\n      if (offerLimit <= maxDataReceived * 1.5) {\n        this.dataUsageGraphData.data.push(this.storageData.data.timestamps.map(function () {\n          return offerLimit;\n        }));\n        this.dataUsageGraphData.series.push(this.$translate.instant('logs_home_offer_limit'));\n      }\n\n      this.dataUsageGraphData.options.scales.yAxes[0].ticks = {\n        suggestedMin: 0,\n        suggestedMax: maxDataReceived * 1.3 || 5,\n        callback: function callback(value) {\n          return value % 1 === 0 ? _this3.bytesFilter(value, 2, true) : '';\n        }\n      };\n      this.dataUsageGraphData.options.scales.yAxes[1].ticks = {\n        suggestedMin: 0,\n        suggestedMax: _.max(this.dataUsageGraphData.data[1]) * 1.3 || 5,\n        callback: function callback(value) {\n          return value % 1 === 0 ? value : '';\n        }\n      };\n      this.dataUsageGraphData.options.tooltips.callbacks = {\n        label: function label(tooltipItem, data) {\n          if (tooltipItem.datasetIndex > 1) {\n            return '';\n          }\n\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          label += tooltipItem.datasetIndex === 0 ? _this3.bytesFilter(tooltipItem.yLabel, 2, true) : _this3.LogsHomeService.constructor.humanizeNumber(tooltipItem.yLabel);\n          return label;\n        }\n      };\n    }\n  }, {\n    key: \"changeName\",\n    value: function changeName() {\n      return this.gotoState('dbaas.logs.detail.home.account');\n    }\n  }, {\n    key: \"goToAllStreams\",\n    value: function goToAllStreams() {\n      return this.gotoState('dbaas.logs.detail.streams');\n    }\n  }, {\n    key: \"goToAllDashboards\",\n    value: function goToAllDashboards() {\n      return this.gotoState('dbaas.logs.detail.dashboards');\n    }\n  }, {\n    key: \"goToChangeOffer\",\n    value: function goToChangeOffer() {\n      return this.gotoState('dbaas.logs.detail.offer');\n    }\n    /**\n     * takes to options UI page if account is pro else shows offer upgrade required modal\n     */\n\n  }, {\n    key: \"goToOptionsPage\",\n    value: function goToOptionsPage() {\n      if (this.LogsHelperService.constructor.isBasicOffer(this.account.data)) {\n        return this.LogsHelperService.showOfferUpgradeModal(this.serviceName);\n      }\n\n      return this.gotoState('dbaas.logs.detail.options');\n    }\n    /**\n     * Redirects to the tokens page\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"editTokens\",\n    value: function editTokens() {\n      return this.gotoState('dbaas.logs.detail.tokens');\n    }\n    /**\n     * Opens the edit password dialog\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"editPassword\",\n    value: function editPassword() {\n      this.openChangePasswordModal();\n    }\n  }, {\n    key: \"gotoState\",\n    value: function gotoState(state) {\n      return this.$state.go(state, {\n        serviceName: this.serviceName\n      });\n    }\n    /**\n     * initializes the loaders\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this4 = this;\n\n      this.accountDetails = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsHomeService.getAccountDetails(_this4.serviceName);\n        }\n      });\n      this.account = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsHomeService.getAccount(_this4.serviceName);\n        }\n      });\n      this.options = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsHomeService.getOptions(_this4.serviceName);\n        }\n      });\n      this.serviceInfos = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsHomeService.getServiceInfos(_this4.serviceName);\n        }\n      });\n\n      if (!this.isAccountDisabled) {\n        this.tokenIds = this.ControllerHelper.request.getArrayLoader({\n          loaderFunction: function loaderFunction() {\n            return _this4.LogsTokensService.getTokensIds(_this4.serviceName);\n          }\n        });\n        this.defaultCluster = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this4.LogsTokensService.getDefaultCluster(_this4.serviceName);\n          }\n        });\n        this.storageData = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this4.LogsHomeService.getDataUsage(_this4.serviceName);\n          }\n        });\n        this.coldStorage = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this4.LogsHomeService.getColdstorage(_this4.serviceName);\n          }\n        });\n      }\n    }\n    /**\n     * Opens the Messages and Ports information dialog\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"openMessagesAndPorts\",\n    value: function openMessagesAndPorts() {\n      var _this5 = this;\n\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/dbaas/logs/detail/home/formatsports/logs-home-formatsports.html',\n          controller: 'LogsHomeFormatsportsCtrl',\n          controllerAs: 'ctrl',\n          resolve: {\n            accountDetails: function accountDetails() {\n              return _this5.accountDetails.data;\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Runs the loaders\n     *\n     * @memberof LogsHomeCtrl\n     */\n\n  }, {\n    key: \"runLoaders\",\n    value: function runLoaders() {\n      var loaderPromises = [];\n      loaderPromises.push(this.accountDetails.load());\n      loaderPromises.push(this.account.load());\n      loaderPromises.push(this.options.load());\n      loaderPromises.push(this.serviceInfos.load());\n\n      if (!this.isAccountDisabled) {\n        loaderPromises.push(this.tokenIds.load());\n        loaderPromises.push(this.defaultCluster.load());\n        loaderPromises.push(this.storageData.load());\n        loaderPromises.push(this.coldStorage.load());\n      }\n\n      return this.$q.all(loaderPromises);\n    }\n  }]);\n\n  return LogsHomeCtrl;\n}();\n\nangular.module('managerApp').controller('LogsHomeCtrl', LogsHomeCtrl);",null]}