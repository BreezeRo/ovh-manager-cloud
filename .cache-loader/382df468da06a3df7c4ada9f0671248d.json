{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics-detail.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics-detail.controller.js","mtime":1539717142068},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n(function () {\n  var MetricsDetailCtrl =\n  /*#__PURE__*/\n  function () {\n    MetricsDetailCtrl.$inject = [\"$filter\", \"$q\", \"$scope\", \"$stateParams\", \"CloudMessage\", \"MetricService\"];\n\n    function MetricsDetailCtrl($filter, $q, $scope, $stateParams, CloudMessage, MetricService) {\n      _classCallCheck(this, MetricsDetailCtrl);\n\n      this.$filter = $filter;\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$stateParams = $stateParams;\n      this.CloudMessage = CloudMessage;\n      this.serviceName = $stateParams.serviceName;\n      this.MetricService = MetricService;\n      this.service = {};\n      this.loadingService = false;\n      this.messages = [];\n    }\n\n    _createClass(MetricsDetailCtrl, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        var _this = this;\n\n        this.loadData();\n        this.loadMessage();\n        this.$scope.$on('changeDescription', function (event, data) {\n          _this.service.description = data;\n        });\n      }\n    }, {\n      key: \"loadData\",\n      value: function loadData() {\n        var _this2 = this;\n\n        this.loadingService = true;\n        this.MetricService.getService(this.serviceName).then(function (service) {\n          _this2.service = service.data;\n        }).finally(function () {\n          _this2.loadingService = false;\n        });\n      }\n    }, {\n      key: \"loadMessage\",\n      value: function loadMessage() {\n        var _this3 = this;\n\n        this.CloudMessage.unSubscribe('dbaas.metrics.detail');\n        this.messageHandler = this.CloudMessage.subscribe('dbaas.metrics.detail', {\n          onMessage: function onMessage() {\n            return _this3.refreshMessage();\n          }\n        });\n      }\n    }, {\n      key: \"refreshMessage\",\n      value: function refreshMessage() {\n        this.messages = this.messageHandler.getMessages();\n      }\n    }]);\n\n    return MetricsDetailCtrl;\n  }();\n\n  angular.module('managerApp').controller('MetricsDetailCtrl', MetricsDetailCtrl);\n})();",null]}