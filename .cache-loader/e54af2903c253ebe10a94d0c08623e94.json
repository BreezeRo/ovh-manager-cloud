{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/dashboards/crud/logs-dashboards-crud.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/dashboards/crud/logs-dashboards-crud.controller.js","mtime":1539717142079},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsDashboardsCrudCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsDashboardsCrudCtrl.$inject = [\"$q\", \"$state\", \"$stateParams\", \"$uibModalInstance\", \"LogsDashboardsService\", \"ControllerHelper\", \"CloudMessage\", \"LogsStreamsService\"];\n\n  function LogsDashboardsCrudCtrl($q, $state, $stateParams, $uibModalInstance, LogsDashboardsService, ControllerHelper, CloudMessage, LogsStreamsService) {\n    _classCallCheck(this, LogsDashboardsCrudCtrl);\n\n    this.$q = $q;\n    this.$stateParams = $stateParams;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsDashboardsService = LogsDashboardsService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsStreamsService = LogsStreamsService;\n    this.isEdit = false;\n    this.isDuplicate = $state.$current.name === 'dbaas.logs.detail.dashboards.duplicate';\n    this.dashboardName = this.$stateParams.dashboardName;\n    this.initLoaders();\n  }\n  /**\n   * initializes options list\n   *\n   * @memberof LogsDashboardsCrudCtrl\n   */\n\n\n  _createClass(LogsDashboardsCrudCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.options = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsDashboardsService.getSubscribedOptions(_this.serviceName);\n        }\n      });\n      this.options.load();\n      this.mainOffer = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsDashboardsService.getMainOffer(_this.serviceName);\n        }\n      });\n      this.mainOffer.load();\n\n      if (this.isDuplicate) {\n        this.streams = this.ControllerHelper.request.getArrayLoader({\n          loaderFunction: function loaderFunction() {\n            return _this.LogsStreamsService.getOwnStreams(_this.serviceName);\n          }\n        });\n        this.streams.load();\n        this.isEdit = false;\n        this.title = 'logs_dashboards_duplicate_title';\n        this.dashboard = this.LogsDashboardsService.constructor.getNewDashboard();\n\n        if (!this.dashboardName) {\n          this.ControllerHelper.request.getHashLoader({\n            loaderFunction: function loaderFunction() {\n              return _this.LogsDashboardsService.getDashboard(_this.serviceName, _this.$stateParams.dashboardId).then(function (aapiDashboard) {\n                _this.dashboardName = aapiDashboard.title;\n                return aapiDashboard;\n              });\n            }\n          }).load();\n        }\n      } else if (this.$stateParams.dashboardId) {\n        this.isEdit = true;\n        this.title = 'logs_dashboards_update_title';\n        this.dashboard = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this.LogsDashboardsService.getAapiDashboard(_this.serviceName, _this.$stateParams.dashboardId).then(function (dashboard) {\n              return dashboard.info;\n            });\n          }\n        });\n        this.dashboard.load();\n      } else {\n        this.isEdit = false;\n        this.title = 'logs_dashboards_add';\n        this.dashboard = this.LogsDashboardsService.constructor.getNewDashboard();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      if (this.isDuplicate) {\n        this.duplicateDashboard();\n      }\n\n      if (this.isEdit) {\n        this.updateDashboard();\n      }\n\n      if (!this.isEdit && !this.isDuplicate) {\n        this.createDashboard();\n      }\n    }\n    /**\n     * update dashboard\n     *\n     * @memberof LogsDashboardsCrudCtrl\n     */\n\n  }, {\n    key: \"updateDashboard\",\n    value: function updateDashboard() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsDashboardsService.updateDashboard(_this2.serviceName, _this2.dashboard.data).finally(function () {\n            _this2.$uibModalInstance.close();\n\n            _this2.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n    /**\n     * create new dashboard\n     *\n     * @memberof LogsDashboardsCrudCtrl\n     */\n\n  }, {\n    key: \"createDashboard\",\n    value: function createDashboard() {\n      var _this3 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsDashboardsService.createDashboard(_this3.serviceName, _this3.dashboard.data).finally(function () {\n            _this3.$uibModalInstance.close();\n\n            _this3.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n    /**\n     * create new dashboard from another dahsboard\n     *\n     * @memberof LogsDashboardsCrudCtrl\n     */\n\n  }, {\n    key: \"duplicateDashboard\",\n    value: function duplicateDashboard() {\n      var _this4 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsDashboardsService.duplicateDashboard(_this4.serviceName, _this4.dashboard.data, _this4.$stateParams.dashboardId).finally(function () {\n            _this4.$uibModalInstance.close();\n\n            _this4.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }]);\n\n  return LogsDashboardsCrudCtrl;\n}();\n\nangular.module('managerApp').controller('LogsDashboardsCrudCtrl', LogsDashboardsCrudCtrl);",null]}