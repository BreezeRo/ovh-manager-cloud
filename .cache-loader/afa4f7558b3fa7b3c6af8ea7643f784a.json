{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/key/addOrEdit/dbaasts-project-details-key-add.controllers.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/key/addOrEdit/dbaasts-project-details-key-add.controllers.js","mtime":1539717142163},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('DBaasTsProjectDetailsKeyAddOrEditCtrl',\n  function DBaasTsProjectDetailsKeyAddOrEditCtrl($q, $state, $stateParams, $translate,\n    OvhApiDBaasTsProjectKey, Toast) {\n    // -- Variable declaration --\n\n    const self = this;\n    const { serviceName, keyId } = $stateParams;\n\n    self.loaders = {\n      init: false,\n      addOrEdit: false,\n    };\n\n    self.data = {\n      permissions: _.indexBy(['READ', 'WRITE']),\n      // Detect edition if a key id is present\n      edition: !!keyId,\n    };\n\n    self.model = {\n      permissions: [self.data.permissions.READ],\n      tags: [{}], // Initialize tags with an empty object\n    };\n\n    // -- Initialization\n\n    function init() {\n      // Retrieve the key in edition\n      if (self.data.edition) {\n        self.loaders.init = true;\n        OvhApiDBaasTsProjectKey.v6().get({\n          serviceName,\n          keyId,\n        }).$promise.then((key) => {\n          self.loaders.init = false;\n          self.model = key;\n          // If no tags initialize tags with an empty array\n          if (!key.tags) {\n            self.model.tags = [];\n          }\n        }).catch((err) => {\n          Toast.error([$translate.instant('dtpdt_init_error'), (err.data && err.data.message) || ''].join(' '));\n        }).finally(() => {\n          self.loaders.init = false;\n        });\n      }\n    }\n\n    init();\n\n    // -- Create or update the key\n\n    self.saveKey = function saveKey() {\n      self.loaders.addOrEdit = true;\n\n      let successMsg;\n      let errorMsg;\n      let req;\n\n      // Filter empty keys in the tags\n      self.model.tags = _.filter(self.model.tags, tag => tag.key);\n\n      self.model.serviceName = serviceName;\n\n      if (self.data.edition) {\n        successMsg = 'dtpdt_edit_successful';\n        errorMsg = 'dtpdt_edit_error';\n        req = OvhApiDBaasTsProjectKey.v6().update({\n          serviceName,\n          keyId,\n        }, self.model);\n      } else {\n        successMsg = 'dtpdt_creation_successful';\n        errorMsg = 'dtpdt_creation_error';\n        req = OvhApiDBaasTsProjectKey.v6().create({\n          serviceName,\n        }, self.model);\n      }\n\n      req.$promise.then(() => {\n        $state.go('^.dbaasts-project-details-key');\n        Toast.info($translate.instant(successMsg));\n      }).catch((err) => {\n        Toast.error([$translate.instant(errorMsg), (err.data && err.data.message) || ''].join(' : '));\n        self.loaders.addOrEdit = false;\n      });\n    };\n\n    // -- Add / Remove a tag\n\n    self.addTag = function addTag() {\n      self.model.tags.push({});\n    };\n\n    self.removeTag = function removeTag(index) {\n      self.model.tags.splice(index, 1);\n    };\n  });\n"]}