{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics-detail.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/metrics-detail.controller.js","mtime":1539717142068},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class MetricsDetailCtrl {\n    constructor($filter, $q, $scope, $stateParams, CloudMessage, MetricService) {\n      this.$filter = $filter;\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$stateParams = $stateParams;\n      this.CloudMessage = CloudMessage;\n      this.serviceName = $stateParams.serviceName;\n      this.MetricService = MetricService;\n      this.service = {};\n      this.loadingService = false;\n      this.messages = [];\n    }\n\n    $onInit() {\n      this.loadData();\n      this.loadMessage();\n      this.$scope.$on('changeDescription', (event, data) => {\n        this.service.description = data;\n      });\n    }\n\n    loadData() {\n      this.loadingService = true;\n      this.MetricService.getService(this.serviceName)\n        .then((service) => {\n          this.service = service.data;\n        })\n        .finally(() => { this.loadingService = false; });\n    }\n\n    loadMessage() {\n      this.CloudMessage.unSubscribe('dbaas.metrics.detail');\n      this.messageHandler = this.CloudMessage.subscribe('dbaas.metrics.detail', { onMessage: () => this.refreshMessage() });\n    }\n\n    refreshMessage() {\n      this.messages = this.messageHandler.getMessages();\n    }\n  }\n\n  angular.module('managerApp').controller('MetricsDetailCtrl', MetricsDetailCtrl);\n})();\n"]}