{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/account/logs-home-account.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/home/account/logs-home-account.controller.js","mtime":1539717142081},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsHomeAccountCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsHomeAccountCtrl.$inject = [\"$location\", \"$stateParams\", \"$uibModalInstance\", \"CloudMessage\", \"ControllerHelper\", \"LogsHomeService\", \"LogsConstants\"];\n\n  function LogsHomeAccountCtrl($location, $stateParams, $uibModalInstance, CloudMessage, ControllerHelper, LogsHomeService, LogsConstants) {\n    _classCallCheck(this, LogsHomeAccountCtrl);\n\n    this.$location = $location;\n    this.serviceName = $stateParams.serviceName;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.LogsConstants = LogsConstants;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsHomeService = LogsHomeService;\n    this.initLoaders();\n  }\n\n  _createClass(LogsHomeAccountCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.accountDetails.load().then(function () {\n        _this.displayName = _this.accountDetails.data.service.displayName;\n      });\n    }\n    /**\n     * initializes the account details and contacts\n     *\n     * @memberof LogsHomeAccountCtrl\n     */\n\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this2 = this;\n\n      this.accountDetails = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsHomeService.getAccountDetails(_this2.serviceName);\n        }\n      });\n    }\n    /**\n     * Closes the info pop-up\n     *\n     * @memberof LogsHomeAccountCtrl\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n    /**\n     * Updates the contact\n     *\n     * @memberof LogsHomeAccountCtrl\n     */\n\n  }, {\n    key: \"updateDisplayName\",\n    value: function updateDisplayName() {\n      var _this3 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsHomeService.updateDisplayName(_this3.serviceName, _this3.accountDetails.data.service.displayName).finally(function () {\n            _this3.ControllerHelper.scrollPageToTop();\n\n            _this3.$uibModalInstance.close();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }]);\n\n  return LogsHomeAccountCtrl;\n}();\n\nangular.module('managerApp').controller('LogsHomeAccountCtrl', LogsHomeAccountCtrl);",null]}