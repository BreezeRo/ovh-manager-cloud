{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/reboot/vps-reboot.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/modal/shortcut/reboot/vps-reboot.controller.js","mtime":1539717142297},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VpsRebootCtrl {\n  constructor($translate, $uibModalInstance, ControllerHelper, CloudMessage, serviceName,\n    VpsService) {\n    this.$translate = $translate;\n    this.$uibModalInstance = $uibModalInstance;\n    this.CloudMessage = CloudMessage;\n    this.serviceName = serviceName;\n    this.VpsService = VpsService;\n    this.ControllerHelper = ControllerHelper;\n\n    this.loader = {\n      init: false,\n    };\n    this.model = {};\n    this.selected = {\n      rescue: false,\n    };\n  }\n\n  $onInit() {\n    this.loader.init = true;\n    this.VpsService.getTaskInError(this.serviceName)\n      .then((tasks) => { this.loadVpsRescueMode(tasks); });\n  }\n\n  loadVpsRescueMode(tasks) {\n    if (!_(tasks).isArray() || (_(tasks).isArray() && _(tasks).isEmpty())) {\n      this.VpsService.getSelectedVps(this.serviceName)\n        .then((data) => { this.model = data; })\n        .catch(() => this.CloudMessage.error(this.$translate.instant('vps_configuration_reboot_fail')))\n        .finally(() => { this.loader.init = false; });\n    } else {\n      this.CloudMessage.error(this.$translate.instant('vps_configuration_polling_fail'));\n      this.loader.init = false;\n    }\n  }\n\n  cancel() {\n    this.$uibModalInstance.dismiss();\n  }\n\n  confirm() {\n    this.save = this.ControllerHelper.request.getHashLoader({\n      loaderFunction: () => this.VpsService.reboot(this.serviceName, this.selected.rescue)\n        .then(() => this.CloudMessage.success(this.$translate.instant('vps_configuration_reboot_success', { serviceName: this.serviceName })))\n        .catch(() => this.CloudMessage.error(this.$translate.instant('vps_configuration_reboot_fail')))\n        .finally(() => this.$uibModalInstance.close()),\n    });\n    return this.save.load();\n  }\n}\n\nangular.module('managerApp').controller('VpsRebootCtrl', VpsRebootCtrl);\n"]}