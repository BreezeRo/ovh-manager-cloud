{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/alerts/home/alerts-home.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/alerts/home/alerts-home.controller.js","mtime":1539717142146},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsStreamsAlertsHomeCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsStreamsAlertsHomeCtrl.$inject = [\"$state\", \"$stateParams\", \"$translate\", \"CloudMessage\", \"ControllerHelper\", \"LogsStreamsService\", \"LogsConstants\", \"LogsStreamsAlertsService\"];\n\n  function LogsStreamsAlertsHomeCtrl($state, $stateParams, $translate, CloudMessage, ControllerHelper, LogsStreamsService, LogsConstants, LogsStreamsAlertsService) {\n    _classCallCheck(this, LogsStreamsAlertsHomeCtrl);\n\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsStreamsService = LogsStreamsService;\n    this.LogsConstants = LogsConstants;\n    this.LogsStreamsAlertsService = LogsStreamsAlertsService;\n    this.serviceName = this.$stateParams.serviceName;\n    this.streamId = this.$stateParams.streamId;\n    this.initLoaders();\n  }\n\n  _createClass(LogsStreamsAlertsHomeCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.runLoaders();\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      this.$state.go('dbaas.logs.detail.streams');\n    }\n    /**\n     * Runs all the loaders to fetch data from APIs\n     *\n     * @memberof LogsStreamsAlertsHomeCtrl\n     */\n\n  }, {\n    key: \"runLoaders\",\n    value: function runLoaders() {\n      this.alertIds.load();\n      this.stream.load();\n    }\n    /**\n     * initializes the alertsIDs and current stream\n     *\n     * @memberof LogsStreamsAlertsHomeCtrl\n     */\n\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.alertIds = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsAlertsService.getAlertIds(_this.serviceName, _this.streamId);\n        }\n      });\n      this.stream = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getStream(_this.serviceName, _this.streamId);\n        }\n      });\n    }\n    /**\n       * Loads a number of alerts specified by the pageSize, starting from the specified offset\n       *\n       * @param {any} offset\n       * @param {any} pageSize\n       * @returns promise which will be resolve to the loaded alerts data\n       * @memberof LogsStreamsAlertsHomeCtrl\n       */\n\n  }, {\n    key: \"loadAlerts\",\n    value: function loadAlerts(_ref) {\n      var _this2 = this;\n\n      var offset = _ref.offset,\n          pageSize = _ref.pageSize;\n      this.alerts = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsStreamsAlertsService.getAlerts(_this2.serviceName, _this2.streamId, _this2.alertIds.data.slice(offset - 1, offset + pageSize - 1));\n        }\n      });\n      return this.alerts.load().then(function (alerts) {\n        return {\n          data: alerts,\n          meta: {\n            totalCount: _this2.alertIds.data.length\n          }\n        };\n      });\n    }\n    /**\n       * Shows the confirmation modal box for alert deletion confirmation\n       * and deletes the alert if the user confirms the deletion\n       *\n       * @param {any} alert - the alert object\n       * @memberof LogsStreamsAlertsHomeCtrl\n       */\n\n  }, {\n    key: \"showDeleteConfirm\",\n    value: function showDeleteConfirm(alert) {\n      var _this3 = this;\n\n      this.CloudMessage.flushChildMessage();\n      return this.ControllerHelper.modal.showDeleteModal({\n        titleText: this.$translate.instant('streams_alerts_delete'),\n        textHtml: this.$translate.instant('streams_alerts_delete_message', {\n          alert: alert.title\n        })\n      }).then(function () {\n        return _this3.remove(alert);\n      });\n    }\n    /**\n     * Deletes the alert\n     *\n     * @param {any} alert - the alert object\n     * @memberof LogsStreamsAlertsHomeCtrl\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(alert) {\n      var _this4 = this;\n\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsStreamsAlertsService.deleteAlert(_this4.serviceName, _this4.streamId, alert).then(function () {\n            return _this4.runLoaders();\n          });\n        }\n      });\n      this.alertIds.loading = true;\n      this.delete.load();\n    }\n    /**\n     * Redirects to the new alert add page\n     *\n     * @param {any} type - the type of the alert to add\n     * @memberof LogsStreamsAlertsHomeCtrl\n     */\n\n  }, {\n    key: \"addAlert\",\n    value: function addAlert(type) {\n      this.$state.go('dbaas.logs.detail.streams.alerts.add', {\n        serviceName: this.serviceName,\n        streamId: this.streamId,\n        type: this.LogsConstants.alertType[type]\n      });\n    }\n    /**\n     * Redirects to the alert edit page\n     *\n     * @param {any} alert\n     * @memberof LogsStreamsAlertsHomeCtrl\n     */\n\n  }, {\n    key: \"editAlert\",\n    value: function editAlert(alert) {\n      this.$state.go('dbaas.logs.detail.streams.alerts.edit', {\n        serviceName: this.serviceName,\n        streamId: this.streamId,\n        alertId: alert.alertId\n      });\n    }\n  }]);\n\n  return LogsStreamsAlertsHomeCtrl;\n}();\n\nangular.module('managerApp').controller('LogsStreamsAlertsHomeCtrl', LogsStreamsAlertsHomeCtrl);",null]}