{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/openstack/users/openrc/openstack-users-openrc.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/openstack/users/openrc/openstack-users-openrc.controller.js","mtime":1539717142045},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp')\n  .controller('OpenstackUsersOpenrcCtrl', function OpenstackUsersOpenrcCtrl($scope, OvhApiCloud,\n    $httpParamSerializer, $uibModalInstance, CONFIG_API, openstackUser, $stateParams, $translate,\n    URLS, OvhApiMe, RegionService) {\n    const self = this;\n\n    self.regionService = RegionService;\n    self.openstackUser = openstackUser;\n    self.projectId = $stateParams.projectId;\n\n    self.form = {\n      regions: [],\n    };\n\n    self.data = {\n      region: null,\n      guideURL: null,\n    };\n\n    self.loaders = {\n      regions: false,\n      download: false,\n      guide: false,\n    };\n\n    function initGuideURL() {\n      self.loaders.guide = true;\n      OvhApiMe.v6().get().$promise.then((me) => {\n        const lang = me.ovhSubsidiary;\n        self.data.guideURL = URLS.guides.openstack[lang];\n      }).finally(() => {\n        self.loaders.guide = false;\n      });\n    }\n\n    function getRegions() {\n      self.loaders.regions = true;\n      return OvhApiCloud.Project().Region().v6().query({\n        serviceName: self.projectId,\n      }).$promise.then((regions) => {\n        self.form.regions = regions;\n        if (self.form.regions) {\n          self.data.region = _.first(self.form.regions);\n        }\n      }).finally(() => {\n        self.loaders.regions = false;\n      });\n    }\n\n    function init() {\n      initGuideURL();\n      getRegions();\n    }\n\n    function buildOpenrcUrl() {\n      let url = [\n        (_.find(CONFIG_API.apis, { serviceType: 'aapi' }) || {}).urlPrefix,\n        OvhApiCloud.Project().User().Aapi().services.openrc.url,\n        '?',\n        $httpParamSerializer({\n          region: self.data.region,\n          download: 1,\n        }),\n      ].join('');\n\n      const replacements = {\n        serviceName: self.projectId,\n        userId: openstackUser.id,\n      };\n\n      // Build URL\n      Object.keys(replacements).forEach((paramName) => {\n        url = url.replace(`:${paramName}`, replacements[paramName]);\n      });\n\n      return url;\n    }\n\n    self.downloadOpenrcFile = function () {\n      const url = buildOpenrcUrl();\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      self.close();\n    };\n\n    self.close = function () {\n      $uibModalInstance.close();\n    };\n\n    self.cancel = function () {\n      $uibModalInstance.dismiss();\n    };\n\n    init();\n  });\n"]}