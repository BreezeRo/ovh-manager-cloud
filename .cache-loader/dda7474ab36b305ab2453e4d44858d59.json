{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/vps-action.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/vps-action.service.js","mtime":1539717142307},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VpsActionService {\n  constructor(ControllerHelper) {\n    this.ControllerHelper = ControllerHelper;\n  }\n\n  rescue(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/password/vps-password.html',\n        controller: 'VpsPasswordCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  reboot(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/reboot/vps-reboot.html',\n        controller: 'VpsRebootCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  reinstall(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/reinstall/vps-reinstall.html',\n        controller: 'VpsReinstallCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  kvm(serviceName, noVNC) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/kvm/vps-kvm.html',\n        controller: 'VpsKvmCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          noVNC: () => noVNC,\n        },\n      },\n    });\n  }\n\n  monitoringSla(serviceName, state, preview) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/monitoring-sla/vps-monitoring-sla.html',\n        controller: 'VpsMonitoringSlaCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          preview: () => preview || false,\n          state: () => state,\n        },\n      },\n    });\n  }\n\n  displayIps(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/display-ips/vps-display-ips.html',\n        controller: 'VpsDisplayIpsCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  reverseDns(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/shortcut/reverse-dns/vps-reverse-dns.html',\n        controller: 'VpsReverseDnsCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  deleteSecondaryDns(serviceName, domain) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/secondary-dns/delete-secondary-dns.html',\n        controller: 'DeleteSecondaryDnsCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          domain: () => domain,\n        },\n      },\n    });\n  }\n\n  addSecondaryDns(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/secondary-dns/add-secondary-dns.html',\n        controller: 'AddSecondaryDnsCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  deleteBackupStorage(serviceName, access) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/backup-storage/delete-backup-storage.html',\n        controller: 'DeleteBackupStorageCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          access: () => access,\n        },\n      },\n    });\n  }\n\n  addBackupStorage(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/backup-storage/add-backup-storage.html',\n        controller: 'AddBackupStorageCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  resetPasswordBackupStorage(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/backup-storage/password-backup-storage.html',\n        controller: 'PasswordBackupStorageCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  editBackupStorage(serviceName, row) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/backup-storage/edit-backup-storage.html',\n        controller: 'EditBackupStorageCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          row: () => row,\n        },\n      },\n    });\n  }\n\n  restore(serviceName, restorePoint) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/veeam/restore/vps-restore.html',\n        controller: 'VpsRestoreCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          RestorePoint: () => restorePoint,\n        },\n      },\n    });\n  }\n\n  mount(serviceName, restorePoint) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/veeam/mount/vps-mount.html',\n        controller: 'VpsMountCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          RestorePoint: () => restorePoint,\n          mount: () => true,\n        },\n      },\n    });\n  }\n\n  unmount(serviceName, restorePoint) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/veeam/mount/vps-mount.html',\n        controller: 'VpsMountCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          RestorePoint: () => restorePoint,\n          mount: () => false,\n        },\n      },\n    });\n  }\n\n  orderAdditionalDisk() {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/additional-disk/order-disk.html',\n        controller: 'OrderAdditionalDiskCtrl',\n        controllerAs: '$ctrl',\n      },\n    });\n  }\n\n  deleteSnapshot(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/snapshot/snapshot-delete.html',\n        controller: 'VpsDeleteSnapshotCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  takeSnapshot(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/snapshot/snapshot-take.html',\n        controller: 'VpsTakeSnapshotCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  restoreSnapshot(serviceName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/snapshot/snapshot-restore.html',\n        controller: 'VpsRestoreSnapshotCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n        },\n      },\n    });\n  }\n\n  terminateOption(serviceName, optionName) {\n    return this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/vps/modal/option/vps-option-terminate.html',\n        controller: 'VpsOptionTerminateCtrl',\n        controllerAs: '$ctrl',\n        resolve: {\n          serviceName: () => serviceName,\n          vpsOption: () => optionName,\n        },\n      },\n    });\n  }\n\n  terminateAdditionalDiskOption(serviceName) {\n    return this.terminateOption(serviceName, 'additionalDisk');\n  }\n\n  terminateBackupStorageOption(serviceName) {\n    return this.terminateOption(serviceName, 'ftpBackup');\n  }\n\n  terminateSnapshotOption(serviceName) {\n    return this.terminateOption(serviceName, 'snapshot');\n  }\n\n  terminateVeeamOption(serviceName) {\n    return this.terminateOption(serviceName, 'automatedBackup');\n  }\n\n  terminateWindows(serviceName) {\n    return this.terminateOption(serviceName, 'windows');\n  }\n}\n\nangular.module('managerApp').service('VpsActionService', VpsActionService);\n"]}