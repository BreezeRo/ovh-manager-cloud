{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/home/logs-aliases-home.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/aliases/home/logs-aliases-home.controller.js","mtime":1539717142076},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsAliasesHomeCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsAliasesHomeCtrl.$inject = [\"$state\", \"$stateParams\", \"$translate\", \"LogsAliasesService\", \"ControllerHelper\", \"CloudMessage\"];\n\n  function LogsAliasesHomeCtrl($state, $stateParams, $translate, LogsAliasesService, ControllerHelper, CloudMessage) {\n    _classCallCheck(this, LogsAliasesHomeCtrl);\n\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.$translate = $translate;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsAliasesService = LogsAliasesService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.initLoaders();\n  }\n  /**\n   * initializes aliases and quota object by making API call to get data\n   *\n   * @memberof LogsAliasesHomeCtrl\n   */\n\n\n  _createClass(LogsAliasesHomeCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.quota = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsAliasesService.getQuota(_this.serviceName);\n        }\n      });\n      this.aliases = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsAliasesService.getAliases(_this.serviceName);\n        }\n      });\n      this.quota.load();\n      this.aliases.load();\n    }\n    /**\n     * navigates to add alias page\n     *\n     * @memberof LogsAliasesHomeCtrl\n     */\n\n  }, {\n    key: \"add\",\n    value: function add() {\n      this.$state.go('dbaas.logs.detail.aliases.home.add', {\n        serviceName: this.serviceName\n      });\n    }\n    /**\n     * navigates to edit alias page\n     *\n     * @param {any} alias\n     * @memberof LogsAliasesHomeCtrl\n     */\n\n  }, {\n    key: \"edit\",\n    value: function edit(alias) {\n      this.$state.go('dbaas.logs.detail.aliases.home.edit', {\n        serviceName: this.serviceName,\n        aliasId: alias.aliasId\n      });\n    }\n    /**\n     * navigates to link content page\n     *\n     * @param {any} aapiAlias\n     * @memberof LogsAliasesHomeCtrl\n     */\n\n  }, {\n    key: \"attachContent\",\n    value: function attachContent(aapiAlias) {\n      this.$state.go('dbaas.logs.detail.aliases.link', {\n        serviceName: this.serviceName,\n        aliasId: aapiAlias.info.aliasId,\n        defaultContent: aapiAlias.indexes.length > 0 ? this.LogsAliasesService.contentTypeEnum.INDICES : this.LogsAliasesService.contentTypeEnum.STREAMS\n      });\n    }\n    /**\n     * show delete alias confirmation modal\n     *\n     * @param {any} alias to delete\n     * @memberof LogsAliasesHomeCtrl\n     */\n\n  }, {\n    key: \"showDeleteConfirm\",\n    value: function showDeleteConfirm(alias) {\n      var _this2 = this;\n\n      this.CloudMessage.flushChildMessage();\n      return this.ControllerHelper.modal.showDeleteModal({\n        titleText: this.$translate.instant('logs_aliases_delete_title'),\n        textHtml: this.$translate.instant('logs_alias_delete_message', {\n          alias: alias.name\n        })\n      }).then(function () {\n        return _this2.delete(alias);\n      });\n    }\n    /**\n     * delete alias\n     *\n     * @param {any} alias to delete\n     * @memberof LogsAliasesHomeCtrl\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(alias) {\n      var _this3 = this;\n\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsAliasesService.deleteAlias(_this3.serviceName, alias).then(function () {\n            return _this3.initLoaders();\n          }).catch(function () {\n            return _this3.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      this.delete.load();\n    }\n  }, {\n    key: \"getElasticSearchUrl\",\n    value: function getElasticSearchUrl(alias) {\n      return this.LogsAliasesService.getElasticSearchUrl(alias);\n    }\n  }]);\n\n  return LogsAliasesHomeCtrl;\n}();\n\nangular.module('managerApp').controller('LogsAliasesHomeCtrl', LogsAliasesHomeCtrl);",null]}