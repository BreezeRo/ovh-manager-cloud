{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas-change-password/deskaas-change-password.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/deskaas/deskaas-change-password/deskaas-change-password.controller.js","mtime":1539717142173},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('DeskaasChangePasswordCtrl', function ($uibModalInstance, OvhApiDeskaasService, service) {\n  const self = this;\n\n  self.policies = {};\n\n  self.values = {\n    password: '',\n    generatePwd: false,\n  };\n\n  self.flags = {\n    init: false,\n  };\n\n  self.cancel = function () {\n    $uibModalInstance.dismiss('cancel');\n  };\n\n  self.ok = function () {\n    if (!self.values.generatePwd && !self.values.password) {\n      $uibModalInstance.dismiss('cancel');\n      return;\n    }\n\n    $uibModalInstance.close(self.values);\n  };\n\n  function createExpression(policies) {\n    let exp = '';\n\n    // lookaheads to enforce mandatory patterns\n    if (policies.letterMandatory) {\n      exp += '(?=.*[a-zA-Z])';\n    }\n\n    if (policies.lowercaseLetterMandatory) {\n      exp += '(?=.*[a-z])';\n    }\n\n    if (policies.uppercaseLetterMandatory) {\n      exp += '(?=.*[A-Z])';\n    }\n\n    if (policies.digitMandatory) {\n      exp += '(?=.*\\\\d)';\n    }\n\n    exp += '[^';\n\n    // match to filter on invalid chars and length\n    if (policies.deniedChars && policies.deniedChars.length > 0) {\n      _.forEach(policies.deniedChars, (char) => {\n        exp += `\\\\x${char.charCodeAt(0).toString(16)}`;\n      });\n    }\n\n    exp += `\\\\s]{${policies.minLength},${policies.maxLength}}`;\n\n    return exp;\n  }\n\n  function init() {\n    self.flags.init = true;\n\n    OvhApiDeskaasService.v6().getPwdPolicy({ serviceName: service }, null).$promise\n      .then((policies) => {\n        self.policies = policies;\n\n        self.policies.deniedCharsString = policies.deniedChars.join(', ');\n        self.policies.pattern = createExpression(policies);\n      })\n      .finally(() => {\n        self.flags.init = false;\n      });\n  }\n\n  init();\n});\n"]}