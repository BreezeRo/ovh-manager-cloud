{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/snapshot-order/vps-snapshot-order.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/snapshot-order/vps-snapshot-order.controller.js","mtime":1539717142304},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class VpsOrderSnapshotCtrl {\n  constructor($stateParams, $translate, $window, CloudMessage, CloudNavigation, VpsService) {\n    this.$translate = $translate;\n    this.serviceName = $stateParams.serviceName;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.VpsService = VpsService;\n\n    this.loaders = {\n      init: false,\n      options: false,\n    };\n\n    this.model = {\n      vps: null,\n      optionDetails: null,\n      url: null,\n      contractsValidated: false,\n    };\n  }\n\n  $onInit() {\n    this.previousState = this.CloudNavigation.getPreviousState();\n  }\n\n  loadVps() {\n    this.loaders.init = true;\n    this.VpsService.getSelectedVps(this.serviceName)\n      .then((data) => {\n        this.model.vps = data;\n        this.loadOptionDetails();\n      })\n      .catch(error => this.CloudMessage.error(error.message || this.$translate.instant('vps_configuration_activate_snapshot_fail')))\n      .finally(() => { this.loaders.init = false; });\n  }\n\n  loadOptionDetails() {\n    this.loaders.options = true;\n    this.VpsService.getOptionSnapshotFormated(this.serviceName)\n      .then((data) => { this.model.optionDetails = data; })\n      .catch(error => this.CloudMessage.error(error.message || this.$translate.instant('vps_configuration_activate_snapshot_fail')))\n      .finally(() => { this.loaders.options = false; });\n  }\n\n  orderOption() {\n    if (this.model.optionDetails && this.model.contractsValidated) {\n      this.VpsService.orderOption(this.serviceName, 'snapshot', this.model.optionDetails.duration.duration)\n        .then(({ url }) => {\n          this.model.url = url;\n        })\n        .catch(() => this.CloudMessage.error(this.$translate.instant('vps_configuration_activate_snapshot_fail')));\n    } else if (this.model.contractsValidated) {\n      this.CloudMessage.error(this.$translate.instant('vps_configuration_activate_snapshot_fail'));\n    }\n  }\n\n  cancel() {\n    this.previousState.go();\n  }\n\n  confirm() {\n    this.displayBC();\n  }\n\n  displayBC() {\n    this.$window.open(\n      this.model.url,\n      '_blank',\n    );\n  }\n}\n\nangular.module('managerApp').controller('VpsOrderSnapshotCtrl', VpsOrderSnapshotCtrl);\n"]}