{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/additional-disk/vps-additional-disk.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/vps/additional-disk/vps-additional-disk.controller.js","mtime":1539717142286},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VpsAdditionalDiskCtrl =\n/*#__PURE__*/\nfunction () {\n  VpsAdditionalDiskCtrl.$inject = [\"$q\", \"$stateParams\", \"$translate\", \"CloudMessage\", \"VpsActionService\", \"VpsService\"];\n\n  function VpsAdditionalDiskCtrl($q, $stateParams, $translate, CloudMessage, VpsActionService, VpsService) {\n    _classCallCheck(this, VpsAdditionalDiskCtrl);\n\n    this.$q = $q;\n    this.serviceName = $stateParams.serviceName;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.VpsActionService = VpsActionService;\n    this.VpsService = VpsService;\n    this.loaders = {\n      init: false,\n      disk: false\n    };\n    this.additionnalDisks = [];\n    this.hasAdditionalDiskOption = null;\n  }\n\n  _createClass(VpsAdditionalDiskCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.hasAdditionalDisk();\n    }\n  }, {\n    key: \"hasAdditionalDisk\",\n    value: function hasAdditionalDisk() {\n      var _this = this;\n\n      this.loaders.init = true;\n      this.VpsService.hasAdditionalDiskOption(this.serviceName).then(function () {\n        _this.hasAdditionalDiskOption = true;\n\n        if (_this.hasAdditionalDiskOption) {\n          _this.loadAdditionalDisks();\n        }\n      }).catch(function () {\n        _this.hasAdditionalDiskOption = false;\n      }).finally(function () {\n        _this.loaders.init = false;\n      });\n    }\n  }, {\n    key: \"loadAdditionalDisks\",\n    value: function loadAdditionalDisks() {\n      var _this2 = this;\n\n      this.loaders.disk = true;\n      this.VpsService.getDisks(this.serviceName).then(function (data) {\n        var promises = _.map(data, function (elem) {\n          return _this2.VpsService.getDiskInfo(_this2.serviceName, elem);\n        });\n\n        return _this2.$q.all(promises).then(function (diskInfos) {\n          _this2.additionnalDisks = _this2.VpsService.showOnlyAdditionalDisk(diskInfos);\n        });\n      }).catch(function (error) {\n        _this2.CloudMessage.error(_this2.$translate.instant('vps_additional_disk_info_fail'));\n\n        return _this2.$q.reject(error);\n      }).finally(function () {\n        _this2.loaders.disk = false;\n      });\n    }\n  }, {\n    key: \"canOrder\",\n    value: function canOrder() {\n      return _.isEmpty(this.additionnalDisks);\n    }\n  }]);\n\n  return VpsAdditionalDiskCtrl;\n}();\n\nangular.module('managerApp').controller('VpsAdditionalDiskCtrl', VpsAdditionalDiskCtrl);",null]}