{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/consumption/current/cloud-project-billing-consumption-current.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/billing/consumption/current/cloud-project-billing-consumption-current.controller.js","mtime":1539717141955},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectBillingConsumptionCurrentCtrl',\n  function CloudProjectBillingConsumptionCurrentCtrl($q, $translate, $stateParams, CloudMessage,\n    CloudProjectBillingService, OvhApiCloudProjectUsageCurrent) {\n    const self = this;\n    self.data = {};\n\n    function init() {\n      self.loading = true;\n\n      return OvhApiCloudProjectUsageCurrent.v6()\n        .get({ serviceName: $stateParams.projectId }).$promise\n        .then(billingInfo => CloudProjectBillingService.getConsumptionDetails(\n          billingInfo,\n          billingInfo,\n        ))\n        .then((data) => {\n          self.data = data;\n        })\n        .catch((err) => {\n          CloudMessage.error([$translate.instant('cpb_error_message'), (err.data && err.data.message) || ''].join(' '));\n          return $q.reject(err);\n        })\n        .finally(() => {\n          self.loading = false;\n        });\n    }\n\n    init();\n  });\n"]}