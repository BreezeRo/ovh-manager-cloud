{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/home/logs-streams-home.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/home/logs-streams-home.controller.js","mtime":1539717142151},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsStreamsHomeCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsStreamsHomeCtrl.$inject = [\"$state\", \"$stateParams\", \"$translate\", \"LogsStreamsService\", \"ControllerHelper\", \"CloudMessage\", \"UrlHelper\"];\n\n  function LogsStreamsHomeCtrl($state, $stateParams, $translate, LogsStreamsService, ControllerHelper, CloudMessage, UrlHelper) {\n    _classCallCheck(this, LogsStreamsHomeCtrl);\n\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsStreamsService = LogsStreamsService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.UrlHelper = UrlHelper;\n    this.initLoaders();\n  }\n  /**\n   * initializes streams and quota object by making API call to get data\n   *\n   * @memberof LogsStreamsHomeCtrl\n   */\n\n\n  _createClass(LogsStreamsHomeCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.quota = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getQuota(_this.serviceName);\n        }\n      });\n      this.streams = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getStreams(_this.serviceName);\n        }\n      });\n      this.quota.load();\n      this.streams.load();\n    }\n    /**\n     * navigates to add stream page\n     *\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"add\",\n    value: function add() {\n      this.$state.go('dbaas.logs.detail.streams.add', {\n        serviceName: this.serviceName\n      });\n    }\n    /**\n     * create stream\n     *\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this2 = this;\n\n      this.LogsStreamsService.createStream(this.serviceName).then(function () {\n        return _this2.initLoaders();\n      });\n    }\n    /**\n     * navigates to edit stream page\n     *\n     * @param {any} stream\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"edit\",\n    value: function edit(stream) {\n      this.$state.go('dbaas.logs.detail.streams.edit', {\n        serviceName: this.serviceName,\n        streamId: stream.info.streamId\n      });\n    }\n    /**\n     * show delete stream confirmation modal\n     *\n     * @param {any} stream to delete\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"showDeleteConfirm\",\n    value: function showDeleteConfirm(stream) {\n      var _this3 = this;\n\n      this.CloudMessage.flushChildMessage();\n      this.ControllerHelper.modal.showDeleteModal({\n        titleText: this.$translate.instant('logs_stream_delete_title'),\n        textHtml: this.$translate.instant('logs_stream_delete_message', {\n          stream: stream.info.title\n        })\n      }).then(function () {\n        return _this3.remove(stream);\n      });\n    }\n    /**\n     * delete stream\n     *\n     * @param {any} stream to delete\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(stream) {\n      var _this4 = this;\n\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this4.LogsStreamsService.deleteStream(_this4.serviceName, stream.info).then(function () {\n            return _this4.initLoaders();\n          }).finally(function () {\n            return _this4.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      this.delete.load();\n    }\n    /**\n     * navigates to the alerts page\n     *\n     * @param {any} stream, stream for which alerts should be managed\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"manageAlerts\",\n    value: function manageAlerts(stream) {\n      this.CloudMessage.flushChildMessage();\n      this.$state.go('dbaas.logs.detail.streams.alerts', {\n        serviceName: this.serviceName,\n        streamId: stream.info.streamId\n      });\n    }\n    /**\n     * navigates to the alerts page\n     *\n     * @param {any} stream, stream for which alerts should be managed\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"gotoArchives\",\n    value: function gotoArchives(stream) {\n      this.CloudMessage.flushChildMessage();\n      this.$state.go('dbaas.logs.detail.streams.archives', {\n        serviceName: this.serviceName,\n        streamId: stream.info.streamId\n      });\n    }\n    /**\n     * navigates to follow live stream page\n     *\n     * @param {any} stream, stream to follow live\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"followLive\",\n    value: function followLive(stream) {\n      this.CloudMessage.flushChildMessage();\n      this.$state.go('dbaas.logs.detail.streams.follow', {\n        serviceName: this.serviceName,\n        streamId: stream.info.streamId\n      });\n    }\n    /**\n     * extracts graylog web URL from stream\n     *\n     * @param {any} stream, stream for which URL needs to be extracted\n     * @return {string} graylog url\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"getGraylogUrl\",\n    value: function getGraylogUrl(stream) {\n      return this.LogsStreamsService.getStreamGraylogUrl(stream);\n    }\n  }, {\n    key: \"copyToken\",\n    value: function copyToken(stream) {\n      this.LogsStreamsService.copyStreamToken(stream);\n      this.ControllerHelper.scrollPageToTop();\n    }\n  }]);\n\n  return LogsStreamsHomeCtrl;\n}();\n\nangular.module('managerApp').controller('LogsStreamsHomeCtrl', LogsStreamsHomeCtrl);",null]}