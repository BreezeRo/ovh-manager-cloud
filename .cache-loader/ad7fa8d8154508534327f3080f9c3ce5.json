{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-modal-helper.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/helper/controller-modal-helper.service.js","mtime":1539717142185},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ControllerModalHelper =\n/*#__PURE__*/\nfunction () {\n  ControllerModalHelper.$inject = [\"$q\", \"$translate\", \"$uibModal\"];\n\n  function ControllerModalHelper($q, $translate, $uibModal) {\n    _classCallCheck(this, ControllerModalHelper);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.$uibModal = $uibModal;\n    this.unhandledError = ['backdrop click', 'escape key press'];\n  }\n\n  _createClass(ControllerModalHelper, [{\n    key: \"showModal\",\n    value: function showModal() {\n      var _this = this;\n\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var modalConfig = _.assign({\n        windowTopClass: 'cui-modal'\n      }, config.modalConfig);\n\n      var modalInstance = this.$uibModal.open(modalConfig);\n      var deferred = this.$q.defer();\n      modalInstance.result.then(function (result) {\n        if (config.successHandler) {\n          config.successHandler(result);\n        }\n\n        deferred.resolve(result);\n      }).catch(function (err) {\n        // We check for backdrop click as error.\n        // It happens when we click a button behind the modal.\n        // We don't want an error message for that.\n        if (!_.includes(_this.unhandledError, err)) {\n          if (config.errorHandler) {\n            config.errorHandler(err);\n          }\n\n          deferred.reject(err);\n        }\n      });\n      return deferred.promise;\n    }\n  }, {\n    key: \"showWarningModal\",\n    value: function showWarningModal() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.showModal({\n        modalConfig: {\n          templateUrl: 'app/ui-components/modal/warning-modal/warning-modal.html',\n          controller: 'WarningModalController',\n          controllerAs: '$ctrl',\n          resolve: {\n            params: function params() {\n              return config;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showInfoModal\",\n    value: function showInfoModal() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.showModal({\n        modalConfig: {\n          templateUrl: 'app/ui-components/modal/info-modal/info-modal.html',\n          controller: 'InfoModalController',\n          controllerAs: '$ctrl',\n          resolve: {\n            params: function params() {\n              return config;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showConfirmationModal\",\n    value: function showConfirmationModal() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.showModal({\n        modalConfig: {\n          templateUrl: 'app/ui-components/modal/confirmation-modal/confirmation-modal.html',\n          controller: 'ConfirmationModalController',\n          controllerAs: '$ctrl',\n          resolve: {\n            params: function params() {\n              return config;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showNameChangeModal\",\n    value: function showNameChangeModal() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.showModal({\n        modalConfig: {\n          templateUrl: 'app/ui-components/modal/name-change-modal/name-change-modal.html',\n          controller: 'NameChangeModalCtrl',\n          controllerAs: '$ctrl',\n          resolve: {\n            params: function params() {\n              return config;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showDeleteModal\",\n    value: function showDeleteModal() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _.set(config, 'submitButtonText', config.submitButtonText || this.$translate.instant('common_delete'));\n\n      return this.showConfirmationModal(config);\n    }\n  }]);\n\n  return ControllerModalHelper;\n}();\n\nangular.module('managerApp').service('ControllerModalHelper', ControllerModalHelper);",null]}