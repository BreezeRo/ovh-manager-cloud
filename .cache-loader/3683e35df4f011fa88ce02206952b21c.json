{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/index/add/logs-index-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/index/add/logs-index-add.controller.js","mtime":1539717142083},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsIndexAddModalCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsIndexAddModalCtrl.$inject = [\"$q\", \"$stateParams\", \"$uibModalInstance\", \"ControllerHelper\", \"indexInfo\", \"options\", \"quota\", \"LogsIndexService\"];\n\n  function LogsIndexAddModalCtrl($q, $stateParams, $uibModalInstance, ControllerHelper, indexInfo, options, quota, LogsIndexService) {\n    _classCallCheck(this, LogsIndexAddModalCtrl);\n\n    this.$stateParams = $stateParams;\n    this.$q = $q;\n    this.ControllerHelper = ControllerHelper;\n    this.indexInfo = indexInfo;\n    this.options = options;\n    this.quota = quota;\n    this.suffixPattern = '^[a-z0-9_-]+$';\n    this.LogsIndexService = LogsIndexService;\n    this.$uibModalInstance = $uibModalInstance;\n    this.serviceName = $stateParams.serviceName;\n    this.index = this.LogsIndexService.getNewIndex();\n  }\n\n  _createClass(LogsIndexAddModalCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.isEdit = this.constructor.checkIsEdit(this.indexInfo);\n\n      if (this.isEdit) {\n        this.populateIndex();\n      } else {\n        this.clearIndex();\n      }\n    }\n  }, {\n    key: \"clearIndex\",\n    value: function clearIndex() {\n      this.title = 'logs_index_modal_add_title';\n      this.index.description = '';\n      this.index.alertNotifyEnabled = false;\n      this.index.suffix = '';\n      this.index.optionId = null;\n    }\n  }, {\n    key: \"populateIndex\",\n    value: function populateIndex() {\n      this.title = 'logs_index_modal_edit_title';\n      this.index.description = this.indexInfo.description;\n      this.index.alertNotifyEnabled = this.indexInfo.alertNotifyEnabled;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.$uibModalInstance.dismiss();\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      if (this.isEdit) {\n        return this.editIndex();\n      }\n\n      return this.saveIndex();\n    }\n  }, {\n    key: \"saveIndex\",\n    value: function saveIndex() {\n      var _this = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsIndexService.createIndex(_this.serviceName, _this.index).then(function (response) {\n            return _this.$uibModalInstance.close(response);\n          }).catch(function (response) {\n            return _this.$uibModalInstance.dismiss(response);\n          }).finally(function () {\n            return _this.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }, {\n    key: \"editIndex\",\n    value: function editIndex() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsIndexService.updateIndex(_this2.serviceName, _this2.indexInfo, _this2.index).then(function (response) {\n            return _this2.$uibModalInstance.close(response);\n          }).catch(function (response) {\n            return _this2.$uibModalInstance.dismiss(response);\n          }).finally(function () {\n            return _this2.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }], [{\n    key: \"checkIsEdit\",\n    value: function checkIsEdit(indexInfo) {\n      return indexInfo !== undefined;\n    }\n  }]);\n\n  return LogsIndexAddModalCtrl;\n}();\n\nangular.module('managerApp').controller('LogsIndexAddModalCtrl', LogsIndexAddModalCtrl);",null]}