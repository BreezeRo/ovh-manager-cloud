{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/home/iplb-home-status.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/home/iplb-home-status.service.js","mtime":1539717142201},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerHomeStatusService =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerHomeStatusService.$inject = [\"$q\", \"$translate\", \"OvhApiIpLoadBalancing\", \"ServiceHelper\"];\n\n  function IpLoadBalancerHomeStatusService($q, $translate, OvhApiIpLoadBalancing, ServiceHelper) {\n    _classCallCheck(this, IpLoadBalancerHomeStatusService);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.OvhApiIpLoadBalancing = OvhApiIpLoadBalancing;\n    this.ServiceHelper = ServiceHelper;\n    this.apiToUiStatus = {\n      ok: 'success',\n      unknown: 'help',\n      warn: 'warning',\n      error: 'error'\n    };\n    this.iplbItemWeight = {\n      service: 1,\n      frontends: 2,\n      farms: 3,\n      servers: 4\n    };\n  }\n\n  _createClass(IpLoadBalancerHomeStatusService, [{\n    key: \"getIPLBStatus\",\n    value: function getIPLBStatus(serviceName) {\n      var _this = this;\n\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        toArray: false\n      };\n      return this.OvhApiIpLoadBalancing.v6().status({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        var transformedResponse = {};\n\n        var promises = _.map(_.keys(_.pick(response, _.keys(_this.iplbItemWeight))), function (iplbItem) {\n          response[iplbItem].itemName = iplbItem;\n          return _this.transformIplbItem(serviceName, response[iplbItem]).then(function (item) {\n            transformedResponse[iplbItem] = item;\n          });\n        });\n\n        return _this.$q.all(promises).then(function () {\n          if (config.toArray) {\n            return _.map(_.keys(transformedResponse), function (iplbItem) {\n              return transformedResponse[iplbItem];\n            });\n          }\n\n          return transformedResponse;\n        });\n      }).catch(this.ServiceHelper.errorHandler('iplb_status_loading_error'));\n    }\n  }, {\n    key: \"transformIplbItem\",\n    value: function transformIplbItem(serviceName, iplbItem) {\n      switch (iplbItem.itemName) {\n        case 'service':\n          return this.buildServiceStatusItem(serviceName, iplbItem);\n\n        default:\n          return this.buildOtherStatusItem(iplbItem);\n      }\n    }\n  }, {\n    key: \"buildServiceStatusItem\",\n    value: function buildServiceStatusItem(serviceName, iplbItem) {\n      var _this2 = this;\n\n      return this.OvhApiIpLoadBalancing.v6().get({\n        serviceName: serviceName\n      }).$promise.then(function (response) {\n        return {\n          itemName: iplbItem.itemName,\n          displayName: response.displayName || response.serviceName,\n          status: _defineProperty({}, _this2.apiToUiStatus[iplbItem.status], {\n            code: _this2.apiToUiStatus[iplbItem.status],\n            number: 1,\n            text: _this2.$translate.instant(\"iplb_status_\".concat(_this2.apiToUiStatus[iplbItem.status], \"_\").concat(iplbItem.itemName))\n          }),\n          total: 1,\n          weight: _this2.iplbItemWeight[iplbItem.itemName]\n        };\n      });\n    }\n  }, {\n    key: \"buildOtherStatusItem\",\n    value: function buildOtherStatusItem(iplbItem) {\n      var _this3 = this;\n\n      var transformedItem = {\n        itemName: iplbItem.itemName,\n        displayName: this.$translate.instant(\"iplb_home_tile_status_\".concat(iplbItem.itemName), {\n          number: iplbItem.total\n        }),\n        status: {},\n        total: iplbItem.total,\n        weight: this.iplbItemWeight[iplbItem]\n      };\n\n      _.forEach(_.keys(iplbItem.status), function (status) {\n        transformedItem.status[_this3.apiToUiStatus[status]] = {\n          code: _this3.apiToUiStatus[status],\n          number: iplbItem.status[status],\n          text: _this3.$translate.instant(\"iplb_status_\".concat(_this3.apiToUiStatus[status], \"_\").concat(iplbItem.itemName), {\n            activeCount: iplbItem.status[status],\n            totalCount: iplbItem.total\n          })\n        };\n      });\n\n      return this.$q.when(transformedItem);\n    }\n  }]);\n\n  return IpLoadBalancerHomeStatusService;\n}();\n\nangular.module('managerApp').service('IpLoadBalancerHomeStatusService', IpLoadBalancerHomeStatusService);",null]}