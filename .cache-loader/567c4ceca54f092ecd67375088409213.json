{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/vrack/iplb-vrack-edit.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/vrack/iplb-vrack-edit.controller.js","mtime":1539717142225},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerVrackEditCtrl =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerVrackEditCtrl.$inject = [\"$q\", \"$stateParams\", \"$translate\", \"CloudMessage\", \"CloudNavigation\", \"ControllerHelper\", \"IpLoadBalancerServerFarmService\", \"IpLoadBalancerVrackService\"];\n\n  function IpLoadBalancerVrackEditCtrl($q, $stateParams, $translate, CloudMessage, CloudNavigation, ControllerHelper, IpLoadBalancerServerFarmService, IpLoadBalancerVrackService) {\n    _classCallCheck(this, IpLoadBalancerVrackEditCtrl);\n\n    this.$q = $q;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.CloudNavigation = CloudNavigation;\n    this.ControllerHelper = ControllerHelper;\n    this.IpLoadBalancerServerFarmService = IpLoadBalancerServerFarmService;\n    this.IpLoadBalancerVrackService = IpLoadBalancerVrackService;\n    this.serviceName = $stateParams.serviceName;\n    this.networkId = $stateParams.networkId;\n    this.initLoaders();\n    this.initModel();\n  }\n\n  _createClass(IpLoadBalancerVrackEditCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.previousState = this.CloudNavigation.getPreviousState();\n      this.creationRules.load();\n      this.privateNetwork.load().then(function () {\n        if (_.keys(_this.privateNetwork.data).length) {\n          _.forEach(_.keys(_this.model), function (key) {\n            _this.model[key].value = _this.privateNetwork.data[key];\n          });\n        }\n\n        return _this.privateNetworkFarms.load();\n      }).then(function () {\n        if (!_this.privateNetworkFarms.data.length) {\n          _this.addFarm();\n\n          return;\n        }\n\n        _.forEach(_this.privateNetworkFarms.data, function (farm) {\n          _.set(farm, 'displayName', farm.displayName || farm.farmId);\n        });\n\n        _this.model.farmId.value = _this.privateNetworkFarms.data;\n      });\n      this.farms.load().then(function () {\n        _.forEach(_this.farms.data, function (farm) {\n          _.set(farm, 'displayName', farm.displayName || farm.farmId);\n        });\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.saving = true;\n      this.CloudMessage.flushChildMessage();\n      return (!this.editing() ? this.addNetwork() : this.editNetwork()).then(function () {\n        return _this2.previousState.go();\n      }).finally(function () {\n        _this2.saving = false;\n      });\n    }\n  }, {\n    key: \"isLoading\",\n    value: function isLoading() {\n      return this.privateNetwork.loading || this.creationRules.loading;\n    }\n  }, {\n    key: \"editing\",\n    value: function editing() {\n      return this.networkId;\n    }\n  }, {\n    key: \"getAvailableFarm\",\n    value: function getAvailableFarm(forceValue) {\n      var _this3 = this;\n\n      var filteredValue = _.filter(this.farms.data, function (farm) {\n        return !_.includes(_.map(_this3.model.farmId.value, function (value) {\n          return value.farmId;\n        }), farm.farmId);\n      });\n\n      if (forceValue) {\n        filteredValue.push(_.find(this.farms.data, function (farm) {\n          return farm.farmId === forceValue;\n        }));\n      }\n\n      return filteredValue;\n    }\n  }, {\n    key: \"canAddFarm\",\n    value: function canAddFarm() {\n      var availableFarmCount = this.getAvailableFarm().length;\n      return availableFarmCount > 0 && this.model.farmId.value.length < this.farms.data.length;\n    }\n  }, {\n    key: \"addFarm\",\n    value: function addFarm() {\n      this.model.farmId.value.push({\n        farmId: null,\n        displayName: null\n      });\n    }\n  }, {\n    key: \"removeFarm\",\n    value: function removeFarm(index) {\n      this.model.farmId.value.splice(index, 1);\n    }\n  }, {\n    key: \"addNetwork\",\n    value: function addNetwork() {\n      return this.IpLoadBalancerVrackService.addPrivateNetwork(this.serviceName, this.getCleanModel());\n    }\n  }, {\n    key: \"editNetwork\",\n    value: function editNetwork() {\n      return this.IpLoadBalancerVrackService.editPrivateNetwork(this.serviceName, this.getCleanModel());\n    }\n  }, {\n    key: \"getCleanModel\",\n    value: function getCleanModel() {\n      var _this4 = this;\n\n      var cleanModel = {};\n\n      _.forEach(_.keys(this.model), function (key) {\n        if (!_this4.model[key].disabled()) {\n          switch (key) {\n            case 'farmId':\n              cleanModel[key] = _.map(_.filter(_this4.model[key].value, function (farm) {\n                return farm.farmId;\n              }), function (farm) {\n                return farm.farmId;\n              });\n              break;\n\n            default:\n              cleanModel[key] = _this4.model[key].value;\n          }\n        }\n      });\n\n      cleanModel.vrackNetworkId = this.networkId;\n      return cleanModel;\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this5 = this;\n\n      this.creationRules = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this5.IpLoadBalancerVrackService.getNetworkCreationRules(_this5.serviceName);\n        }\n      });\n      this.privateNetwork = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this5.editing() ? _this5.IpLoadBalancerVrackService.getPrivateNetwork(_this5.serviceName, _this5.networkId) : _this5.$q.when({});\n        }\n      });\n      this.privateNetworkFarms = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this5.editing() ? _this5.IpLoadBalancerVrackService.getPrivateNetworkFarms(_this5.serviceName, _this5.networkId) : _this5.$q.when([]);\n        }\n      });\n      this.farms = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this5.IpLoadBalancerServerFarmService.getServerFarms(_this5.serviceName);\n        }\n      });\n    }\n  }, {\n    key: \"initModel\",\n    value: function initModel() {\n      var _this6 = this;\n\n      this.model = {\n        displayName: {\n          id: 'displayName',\n          label: this.$translate.instant('iplb_vrack_private_network_add_edit_field_display_name_label'),\n          type: 'text',\n          value: undefined,\n          required: false,\n          minLength: 0,\n          maxLength: 100,\n          disabled: function disabled() {\n            return _this6.creationRules.data.status !== 'active';\n          },\n          inputSize: 4\n        },\n        vlan: {\n          id: 'vlan',\n          label: this.$translate.instant('iplb_vrack_private_network_add_edit_field_vlan_label'),\n          type: 'number',\n          value: undefined,\n          required: false,\n          minLength: 0,\n          maxLength: Infinity,\n          disabled: function disabled() {\n            return _this6.creationRules.data.status !== 'active';\n          },\n          helperText: this.$translate.instant('iplb_vrack_private_network_add_edit_field_vlan_helper'),\n          inputSize: 1\n        },\n        subnet: {\n          id: 'subnet',\n          label: this.$translate.instant('iplb_vrack_private_network_add_edit_field_subnet_label'),\n          type: 'text',\n          value: undefined,\n          required: true,\n          minLength: 0,\n          maxLength: Infinity,\n          disabled: function disabled() {\n            return _this6.editing() && _this6.creationRules.data.status !== 'active';\n          },\n          helperText: this.$translate.instant('iplb_vrack_private_network_add_edit_field_subnet_helper'),\n          inputSize: 2\n        },\n        natIp: {\n          id: 'natIp',\n          label: this.$translate.instant('iplb_vrack_private_network_add_edit_field_nat_ip_label'),\n          type: 'text',\n          value: undefined,\n          required: true,\n          minLength: 0,\n          maxLength: Infinity,\n          disabled: function disabled() {\n            return _this6.creationRules.data.status !== 'active';\n          },\n          helperText: this.$translate.instant('iplb_vrack_private_network_add_edit_field_nat_ip_helper'),\n          inputSize: 2\n        },\n        farmId: {\n          label: this.$translate.instant('iplb_vrack_private_network_add_edit_field_farm_label'),\n          value: [],\n          disabled: function disabled() {\n            return false;\n          }\n        }\n      };\n    }\n  }]);\n\n  return IpLoadBalancerVrackEditCtrl;\n}();\n\nangular.module('managerApp').controller('IpLoadBalancerVrackEditCtrl', IpLoadBalancerVrackEditCtrl);",null]}