{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/list/logs-list.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/list/logs-list.controller.js","mtime":1539717142155},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsListCtrl {\n  constructor($state, CloudMessage, LogsListService, ControllerHelper, LogsConstants,\n    LogsHelperService, OrderHelperService) {\n    this.$state = $state;\n    this.CloudMessage = CloudMessage;\n    this.LogsListService = LogsListService;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsConstants = LogsConstants;\n    this.LogsHelperService = LogsHelperService;\n    this.OrderHelperService = OrderHelperService;\n    this.messages = [];\n\n    this.initLoaders();\n  }\n\n  $onInit() {\n    this.CloudMessage.unSubscribe('dbaas.logs.list');\n    this.messageHandler = this.CloudMessage.subscribe('dbaas.logs.list', { onMessage: () => this.refreshMessage() });\n    this.OrderHelperService.buildUrl(this.LogsConstants.ORDER_URL)\n      .then((url) => {\n        this.orderURL = url;\n      });\n  }\n\n  refreshMessage() {\n    this.messages = this.messageHandler.getMessages();\n  }\n\n  goToOptionsPage(service) {\n    if (service.isBasicOffer) {\n      this.LogsHelperService.showOfferUpgradeModal(service.serviceName);\n    } else {\n      this.$state.go('dbaas.logs.detail.options', {\n        serviceName: service.serviceName,\n      });\n    }\n  }\n\n  goToOfferPage(service) {\n    this.$state.go('dbaas.logs.detail.offer', {\n      serviceName: service.serviceName,\n    });\n  }\n\n  initLoaders() {\n    this.accounts = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsListService.getServices(),\n    });\n    this.accounts.load();\n  }\n}\n\nangular.module('managerApp').controller('LogsListCtrl', LogsListCtrl);\n"]}