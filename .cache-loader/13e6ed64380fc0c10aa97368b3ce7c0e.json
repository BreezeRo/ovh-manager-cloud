{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/settings/dbaasts-project-details-settings.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/ts/project/details/settings/dbaasts-project-details-settings.controller.js","mtime":1539717142166},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('DBaasTsProjectDetailsSettingsCtrl', [\"$q\", \"$scope\", \"$state\", \"$stateParams\", \"$rootScope\", \"$translate\", \"$uibModal\", \"Toast\", \"OvhApiDBaasTsProject\", \"OvhApiDBaasTsRegion\", \"Poller\", \"SidebarMenu\", function DBaasTsProjectDetailsSettingsCtrl($q, $scope, $state, $stateParams, $rootScope, $translate, $uibModal, Toast, OvhApiDBaasTsProject, OvhApiDBaasTsRegion, Poller, SidebarMenu) {\n  // ---------VARIABLE DECLARATION---------\n  var self = this;\n  var serviceName = $stateParams.serviceName;\n  self.loaders = {\n    init: false\n  };\n\n  function pollUntilActive(serviceNameParam) {\n    Poller.poll(\"/dbaas/timeseries/\".concat(serviceNameParam), null, {\n      successRule: function successRule(project) {\n        OvhApiDBaasTsProject.v6().resetCache();\n        return project.status === 'ACTIVE';\n      },\n      namespace: 'dbaas.ts.project.creation'\n    }).then(function () {\n      // Project ready, go to the main state\n      Toast.info($translate.instant('dtpds_project_created'));\n      $state.go('dbaas.dbaasts-project.dbaasts-project-details.dbaasts-project-details-key');\n    });\n    $scope.$on('$destroy', function () {\n      Poller.kill({\n        namespace: 'dbaas.ts.project.creation'\n      });\n    });\n  }\n\n  function loadProject() {\n    return OvhApiDBaasTsProject.v6().get({\n      serviceName: serviceName\n    }).$promise.then(function (project) {\n      self.model = project;\n      self.initialConfig = !project.regionId || project.regionId.length === 0;\n      self.importRunabove = false;\n      self.payAsYouGo = project.offerId === 'payg_account';\n      self.titleKey = 'dtpds_title';\n\n      switch (project.status) {\n        case 'UNCONFIGURED':\n          self.titleKey = 'dtpds_title_unconfigured';\n          break;\n\n        case 'DELETED':\n          // Should not happen, deleted projects aren't displayed\n          break;\n\n        case 'ACTIVE':\n          // No specific help for active projects\n          break;\n\n        case 'CREATION':\n          self.titleKey = 'dtpds_title_creation'; // Transient state that shouldn't last more than 1 minute. Do automatic reloading\n\n          OvhApiDBaasTsProject.v6().resetCache();\n          pollUntilActive(serviceName);\n          break;\n\n        default:\n          break;\n      }\n\n      return project;\n    });\n  } // ---------Edit project---------\n\n\n  self.editProject = function () {\n    var project = self.model;\n    var config = {\n      // serviceName: project.serviceName, // this is the id\n      displayName: project.displayName\n    };\n\n    if (self.initialConfig) {\n      // Initial configuration\n      if (self.importRunabove) {\n        config.importRa = true;\n        config.raTokenId = project.raTokenId;\n        config.raTokenKey = project.raTokenKey;\n      } else {\n        config.regionId = self.region.id;\n      }\n    }\n\n    OvhApiDBaasTsProject.v6().setup({\n      serviceName: serviceName\n    }, config).$promise.then(function () {\n      // Refresh sidebar\n      var menuItem = SidebarMenu.getItemById(self.model.serviceName);\n\n      if (menuItem) {\n        menuItem.title = self.model.displayName;\n      }\n\n      Toast.info($translate.instant('dtpds_project_edit_successful')); // Reload project\n\n      OvhApiDBaasTsProject.v6().resetCache();\n      return loadProject();\n    }).catch(function (err) {\n      Toast.error([$translate.instant('dtpds_project_edit_error'), err.data && err.data.message || ''].join(' '));\n    }).finally(function () {\n      self.loader.init = false;\n    });\n  }; // ---------INITIALIZATION---------\n\n\n  function init() {\n    self.loaders.init = true; // Listen to project events raised by the sidebar when a project is renamed\n\n    $scope.$on('dbaasts-reloadproject', function (_, serviceName) {\n      // eslint-disable-line\n      if (serviceName === $stateParams.serviceName) {\n        loadProject();\n      }\n    });\n    var futureRegions = OvhApiDBaasTsRegion.v6().query().$promise;\n    var futureProject = loadProject();\n    return $q.all([futureRegions, futureProject]).then(function (values) {\n      self.regions = _.first(values);\n      self.loaders.init = false; // Init selected region\n\n      if (self.model.regionId) {\n        self.regions.forEach(function (r) {\n          if (r.id === self.model.regionId) {\n            self.region = r;\n          }\n        });\n      }\n    }, function (err) {\n      Toast.error([$translate.instant('dtpds_init_loading_error'), err.data && err.data.message || ''].join(' '));\n    }).finally(function () {\n      self.loaders.init = false;\n    });\n  }\n\n  init();\n}]);",null]}