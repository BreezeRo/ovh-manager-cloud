{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/list/logs-list.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/list/logs-list.controller.js","mtime":1539717142155},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsListCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsListCtrl.$inject = [\"$state\", \"CloudMessage\", \"LogsListService\", \"ControllerHelper\", \"LogsConstants\", \"LogsHelperService\", \"OrderHelperService\"];\n\n  function LogsListCtrl($state, CloudMessage, LogsListService, ControllerHelper, LogsConstants, LogsHelperService, OrderHelperService) {\n    _classCallCheck(this, LogsListCtrl);\n\n    this.$state = $state;\n    this.CloudMessage = CloudMessage;\n    this.LogsListService = LogsListService;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsConstants = LogsConstants;\n    this.LogsHelperService = LogsHelperService;\n    this.OrderHelperService = OrderHelperService;\n    this.messages = [];\n    this.initLoaders();\n  }\n\n  _createClass(LogsListCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      this.CloudMessage.unSubscribe('dbaas.logs.list');\n      this.messageHandler = this.CloudMessage.subscribe('dbaas.logs.list', {\n        onMessage: function onMessage() {\n          return _this.refreshMessage();\n        }\n      });\n      this.OrderHelperService.buildUrl(this.LogsConstants.ORDER_URL).then(function (url) {\n        _this.orderURL = url;\n      });\n    }\n  }, {\n    key: \"refreshMessage\",\n    value: function refreshMessage() {\n      this.messages = this.messageHandler.getMessages();\n    }\n  }, {\n    key: \"goToOptionsPage\",\n    value: function goToOptionsPage(service) {\n      if (service.isBasicOffer) {\n        this.LogsHelperService.showOfferUpgradeModal(service.serviceName);\n      } else {\n        this.$state.go('dbaas.logs.detail.options', {\n          serviceName: service.serviceName\n        });\n      }\n    }\n  }, {\n    key: \"goToOfferPage\",\n    value: function goToOfferPage(service) {\n      this.$state.go('dbaas.logs.detail.offer', {\n        serviceName: service.serviceName\n      });\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this2 = this;\n\n      this.accounts = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsListService.getServices();\n        }\n      });\n      this.accounts.load();\n    }\n  }]);\n\n  return LogsListCtrl;\n}();\n\nangular.module('managerApp').controller('LogsListCtrl', LogsListCtrl);",null]}