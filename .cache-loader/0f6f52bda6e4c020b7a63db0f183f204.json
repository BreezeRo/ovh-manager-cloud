{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/delete/cloud-project-delete.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/delete/cloud-project-delete.controller.js","mtime":1539717142042},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('CloudProjectDeleteCtrl',\n  function CloudProjectDeleteCtrl($scope, $uibModalInstance, $translate, CloudMessage, $stateParams,\n    $q, OvhApiCloudProjectInstance, OvhApiCloudProjectVolume, OvhApiCloudProjectSnapshot, $state,\n    OvhApiCloudProjectStorage, OvhApiCloudProjectIpFailover, OvhApiCloudProjectIpV6,\n    OvhApiCloudProject, OvhApiCloudProjectUsageCurrent, OvhApiCloudProjectCredit,\n    CloudProjectBillingService, TARGET) {\n    const self = this;\n    const { projectId } = $stateParams;\n    const now = moment();\n\n    self.resources = {\n      instance: 0,\n      volume: 0,\n      snapshot: 0,\n      storage: 0,\n      ipFailoverOvh: 0,\n      ipFailoverCloud: 0,\n    };\n\n    self.bill = undefined;\n    self.hasCredits = false;\n\n    self.error = false;\n\n    self.loaders = {\n      init: false,\n      deleting: false,\n    };\n\n    function getConsumption() {\n      return OvhApiCloudProjectUsageCurrent.v6()\n        .get({\n          serviceName: projectId,\n        }).$promise\n        .then(response => CloudProjectBillingService.getConsumptionDetails(response, response))\n        .then((data) => {\n          self.bill = `${data.totals.hourly.total.toFixed(2)} ${data.totals.currencySymbol}`;\n        })\n        .catch(err => $q.reject(err));\n    }\n\n    function getCredits() {\n      function isNotExpired(credit) {\n        const { validity } = credit;\n        return (!validity.from || now.isAfter(validity.from))\n          && (!validity.to || now.isBefore(validity.to));\n      }\n\n      return OvhApiCloudProjectCredit.Aapi()\n        .query({\n          serviceName: projectId,\n        }).$promise\n        .then((credits) => {\n          self.hasCredits = credits.some(credit => isNotExpired(credit)\n            && credit.available_credit.value > 0);\n        });\n    }\n\n    function initRemainingResources() {\n      return $q.all({\n        instance: OvhApiCloudProjectInstance.v6().query({ serviceName: projectId }).$promise,\n        volume: OvhApiCloudProjectVolume.v6().query({ serviceName: projectId }).$promise,\n        snapshot: OvhApiCloudProjectSnapshot.v6().query({ serviceName: projectId }).$promise,\n        storage: OvhApiCloudProjectStorage.v6().query({ projectId }).$promise,\n        ipFailoverOvh: OvhApiCloudProjectIpFailover.v6().query({ serviceName: projectId }).$promise,\n        ipFailoverCloud: OvhApiCloudProjectIpV6.query({ serviceName: projectId }).$promise,\n      }).then((result) => {\n        self.resources = _.mapValues(result, arr => arr.length);\n      });\n    }\n\n    this.init = function () {\n      if (TARGET !== 'US') {\n        self.loaders.init = true;\n        $q.all([\n          getConsumption(),\n          getCredits(),\n          initRemainingResources(),\n        ]).then(() => {\n          self.error = false;\n        }, () => {\n          self.error = true;\n        }).finally(() => {\n          self.loaders.init = false;\n        });\n      }\n    };\n\n    // ---------MODAL---------\n\n    function deleteProject() {\n      self.loaders.deleting = true;\n      return OvhApiCloudProject.v6().delete({\n        serviceName: projectId,\n      }, {}).$promise.then(() => {\n        self.errors = false;\n      }, (err) => {\n        self.errors = true;\n        return $q.reject(err);\n      }).finally(() => {\n        self.loaders.deleting = false;\n      });\n    }\n\n    self.confirm = function () {\n      return deleteProject().then(() => {\n        CloudMessage.success($translate.instant('cloud_project_delete_email_sent'));\n        $uibModalInstance.close();\n      }, () => {\n        CloudMessage.error($translate.instant('cloud_project_delete_error'));\n      });\n    };\n\n    self.cancel = $uibModalInstance.dismiss;\n\n    self.goToSupport = function () {\n      self.cancel();\n      $state.go('otrs-list');\n    };\n\n    self.resetCache = function () {\n      OvhApiCloudProjectInstance.v6().resetQueryCache();\n      OvhApiCloudProjectVolume.v6().resetQueryCache();\n      OvhApiCloudProjectSnapshot.v6().resetQueryCache();\n      OvhApiCloudProjectIpFailover.v6().resetQueryCache();\n      OvhApiCloudProjectIpV6.resetQueryCache();\n      self.init();\n    };\n\n    self.init();\n  });\n"]}