{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/add/nasha-add.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/add/nasha-add.service.js","mtime":1539717142233},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NashaAddService =\n/*#__PURE__*/\nfunction () {\n  NashaAddService.$inject = [\"$q\", \"$translate\", \"OrderHelperService\", \"OvhApiMe\", \"OvhApiOrder\", \"ServiceHelper\"];\n\n  function NashaAddService($q, $translate, OrderHelperService, OvhApiMe, OvhApiOrder, ServiceHelper) {\n    _classCallCheck(this, NashaAddService);\n\n    this.$q = $q;\n    this.$translate = $translate;\n    this.OrderHelperService = OrderHelperService;\n    this.OvhApiMe = OvhApiMe;\n    this.OvhApiOrder = OvhApiOrder;\n    this.ServiceHelper = ServiceHelper;\n  }\n\n  _createClass(NashaAddService, [{\n    key: \"getAvailableRegions\",\n    value: function getAvailableRegions() {\n      return this.OvhApiOrder.v6().schema().$promise.then(function (response) {\n        return _.filter(response.models['dedicated.NasHAZoneEnum'].enum, function (datacenter) {\n          return datacenter !== 'gra';\n        });\n      }).catch(this.ServiceHelper.errorHandler('nasha_order_loading_error'));\n    }\n  }, {\n    key: \"getOffers\",\n    value: function getOffers() {\n      var _this = this;\n\n      return this.OvhApiMe.v6().get().$promise.then(function (user) {\n        return _this.OvhApiOrder.Cart().v6().post({}, {\n          ovhSubsidiary: user.ovhSubsidiary\n        }).$promise;\n      }).then(function (cart) {\n        return _this.OvhApiOrder.Cart().Product().v6().get({\n          cartId: cart.cartId,\n          productName: 'nasha'\n        }).$promise.then(function (offers) {\n          return {\n            cart: cart,\n            offers: offers\n          };\n        });\n      }).then(function (response) {\n        _.forEach(response.offers, function (offer) {\n          _.set(offer, 'productName', _this.$translate.instant(\"nasha_order_nasha_\".concat(offer.planCode)));\n        });\n\n        _this.OvhApiOrder.Cart().v6().assign({\n          cartId: response.cart.cartId\n        }).$promise.then(function () {\n          return _this.OvhApiOrder.Cart().v6().delete({\n            cartId: response.cart.cartId\n          });\n        });\n\n        return response.offers;\n      }).catch(this.ServiceHelper.errorHandler('nasha_order_loading_error'));\n    }\n  }, {\n    key: \"getDurations\",\n    value: function getDurations() {\n      return this.$q.when([{\n        value: 1,\n        text: \"01 \".concat(this.$translate.instant('nas_order_month'))\n      }, {\n        value: 3,\n        text: \"03 \".concat(this.$translate.instant('nas_order_month'))\n      }, {\n        value: 6,\n        text: \"06 \".concat(this.$translate.instant('nas_order_month'))\n      }, {\n        value: 12,\n        text: \"12 \".concat(this.$translate.instant('nas_order_month'))\n      }]);\n    }\n  }, {\n    key: \"order\",\n    value: function order(model) {\n      return this.OrderHelperService.getExpressOrderUrl({\n        productId: 'nasha',\n        duration: \"P\".concat(model.selectedDuration, \"M\"),\n        planCode: model.selectedModel,\n        pricingMode: 'default',\n        quantity: 1,\n        configuration: [{\n          label: 'datacenter',\n          values: [model.selectedDatacenter.toUpperCase()]\n        }]\n      }).then(function (response) {\n        return {\n          url: response\n        };\n      }).catch(this.ServiceHelper.errorHandler('nasha_order_validation_error'));\n    }\n  }]);\n\n  return NashaAddService;\n}();\n\nangular.module('managerApp').service('NashaAddService', NashaAddService);",null]}