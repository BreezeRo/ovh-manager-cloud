{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/region.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/cloud/project/compute/infrastructure/region.service.js","mtime":1539717142002},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class CloudRegionService {\n  static addOverQuotaInfos(region, quota) {\n    const quotaByRegion = _.find(quota, { region: _.get(region, 'microRegion.code') });\n    const instanceQuota = _.get(quotaByRegion, 'instance', false);\n    if (instanceQuota) {\n      if (\n        instanceQuota.maxInstances !== -1\n        && instanceQuota.usedInstances >= instanceQuota.maxInstances\n      ) {\n        _.set(region, 'disabled', 'QUOTA_INSTANCE');\n      } else if (instanceQuota.maxRam !== -1 && instanceQuota.usedRAM >= instanceQuota.maxRam) {\n        _.set(region, 'disabled', 'QUOTA_RAM');\n      } else if (\n        instanceQuota.maxCores !== -1\n        && instanceQuota.usedCores >= instanceQuota.maxCores\n      ) {\n        _.set(region, 'disabled', 'QUOTA_VCPUS');\n      }\n    }\n  }\n\n  static checkSshKey(region, sshKeyRegions) {\n    const found = _.indexOf(sshKeyRegions, _.get(region, 'microRegion.code'));\n    if (!region.disabled && found === -1) {\n      _.set(region, 'disabled', 'SSH_KEY');\n    } else if (region.disabled === 'SSH_KEY' && found > -1) {\n      delete region.disabled; // eslint-disable-line\n    }\n  }\n}\n\nangular.module('managerApp').service('CloudRegionService', CloudRegionService);\n"]}