{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/billing/volume-list/billing-volume-list.component.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/components/cloud/project/billing/volume-list/billing-volume-list.component.controller.js","mtime":1539717142378},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('BillingVolumeListComponentCtrl', [\"$filter\", \"$q\", \"$translate\", \"$stateParams\", \"DetailsPopoverService\", \"OvhApiCloudProjectVolume\", \"Toast\", \"OvhApiMe\", function ($filter, $q, $translate, $stateParams, DetailsPopoverService, OvhApiCloudProjectVolume, Toast, OvhApiMe) {\n  var self = this;\n  self.DetailsPopoverService = DetailsPopoverService;\n  self.volumeConsumptionDetails = [];\n  self.currencySymbol = '';\n  self.loading = false;\n  self.data = {};\n\n  function getVolumesDetails() {\n    return OvhApiCloudProjectVolume.v6().query({\n      serviceName: $stateParams.projectId\n    }).$promise.then(function (volumes) {\n      return volumes;\n    });\n  }\n\n  function updateVolumeConsumptionDetails(allProjectVolumes, volumeConsumptions) {\n    _.forEach(volumeConsumptions, function (volumeConsumption) {\n      var volumeConsumptionDetail = {};\n      volumeConsumptionDetail.totalPrice = \"\".concat(volumeConsumption.totalPrice.toFixed(2), \" \").concat(self.currencySymbol);\n      volumeConsumptionDetail.volumeId = volumeConsumption.volumeId;\n      volumeConsumptionDetail.quantity = volumeConsumption.quantity.value;\n      volumeConsumptionDetail.region = volumeConsumption.region;\n      volumeConsumptionDetail.type = volumeConsumption.type;\n      volumeConsumptionDetail.amount = volumeConsumption.quantity.value;\n\n      var volumeDetail = _.find(allProjectVolumes, function (x) {\n        return x.id === volumeConsumption.volumeId;\n      });\n\n      if (volumeDetail) {\n        volumeConsumptionDetail.name = volumeDetail.name;\n        volumeConsumptionDetail.size = volumeDetail.size;\n        volumeConsumptionDetail.status = volumeDetail.status;\n      } else {\n        volumeConsumptionDetail.name = volumeConsumption.volumeId;\n        volumeConsumptionDetail.status = 'deleted';\n      }\n\n      self.volumeConsumptionDetails.push(volumeConsumptionDetail);\n    });\n  }\n\n  function initVolumes() {\n    return getVolumesDetails().then(function (allProjectVolumes) {\n      return updateVolumeConsumptionDetails(allProjectVolumes, self.volumes);\n    });\n  }\n\n  function initUserCurrency() {\n    return OvhApiMe.v6().get().$promise.then(function (me) {\n      self.currencySymbol = me.currency.symbol;\n    });\n  }\n\n  self.$onInit = function () {\n    self.loading = true;\n    initUserCurrency().then(function () {\n      return initVolumes();\n    }).catch(function (err) {\n      Toast.error([$translate.instant('cpb_error_message'), err.data && err.data.message || ''].join(' '));\n      $q.reject(err);\n    }).finally(function () {\n      self.loading = false;\n    });\n  };\n}]);",null]}