{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/metrics-token-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/dbaas-metrics/token/add/metrics-token-add.controller.js","mtime":1539717142070},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["(() => {\n  class MetricsTokenAddCtrl {\n    constructor($state, $stateParams, $translate, MetricService) {\n      this.$state = $state;\n      this.serviceName = $stateParams.serviceName;\n      this.$translate = $translate;\n      this.MetricService = MetricService;\n\n      this.token = {};\n      this.token.labels = [{ key: null, value: null }];\n\n      this.permissions = [];\n    }\n\n    $onInit() {\n      this.token.permission = 'read';\n      this.token.serviceName = this.serviceName;\n      this.permissions.push({ value: 'read', text: this.$translate.instant('metrics_token_add_permission_read') });\n      this.permissions.push({ value: 'write', text: this.$translate.instant('metrics_token_add_permission_write') });\n    }\n\n    confirm() {\n      this.loading = true;\n      this.checkLabels();\n      this.MetricService.addToken(this.token)\n        .then(() => this.$state.go('dbaas.metrics.detail.token', { serviceName: this.serviceName }))\n        .finally(() => {\n          this.loading = false;\n        });\n    }\n\n    static cancel() {\n      window.history.back();\n    }\n\n    addLabel() {\n      this.token.labels.push({ key: null, value: null });\n    }\n\n    removeLabel(label) {\n      const index = _.indexOf(this.token.labels, label);\n      if (index !== -1) {\n        this.token.labels.splice(index, 1);\n      }\n    }\n\n    static checkLabel(label) {\n      return (label.key !== null && label.value !== null);\n    }\n\n    checkLabels() {\n      this.token.labels = this.token.labels.filter(label => this.constructor.checkLabel(label));\n    }\n  }\n\n  angular.module('managerApp').controller('MetricsTokenAddCtrl', MetricsTokenAddCtrl);\n})();\n"]}