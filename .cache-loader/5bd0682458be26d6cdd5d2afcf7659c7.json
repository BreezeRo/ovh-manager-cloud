{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/partition/add/nasha-partition-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/nasha/partition/add/nasha-partition-add.controller.js","mtime":1539717142242},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["angular.module('managerApp').controller('NashaPartitionAddCtrl', [\"$stateParams\", \"$scope\", \"$q\", \"$uibModalInstance\", \"$translate\", \"OvhApiDedicatedNasha\", \"CloudMessage\", function ($stateParams, $scope, $q, $uibModalInstance, $translate, OvhApiDedicatedNasha, CloudMessage) {\n  var self = this;\n  self.nasha = null;\n  self.protocols = [];\n  self.protocols = null;\n  self.loading = false;\n  self.newPartition = {\n    partitionName: null,\n    size: 10,\n    protocol: null\n  };\n  self.error = {\n    name: false\n  };\n  self.namePattern = /^[A-Za-z0-9]{1,20}$/;\n\n  self.isPartitionValid = function () {\n    return self.newPartition.partitionName // Partition name is set\n    && self.newPartition.size // partition size is set\n    && self.newPartition.protocol // protocol is set\n    && self.newPartition.size >= 10 // partition size is minimum 10 GB\n    // partition size is less or equal than the maax returned by the pi\n    && self.newPartition.size <= self.nasha.zpoolSize;\n  };\n\n  self.addPartition = function () {\n    self.loading = true;\n    OvhApiDedicatedNasha.Partition().v6().create({\n      serviceName: self.nasha.serviceName\n    }, {\n      partitionName: self.newPartition.partitionName,\n      protocol: self.newPartition.protocol,\n      size: self.newPartition.size\n    }).$promise.then(function (result) {\n      $uibModalInstance.close({\n        partition: self.newPartition,\n        tasks: [result.data.taskId],\n        isNew: true\n      });\n      CloudMessage.success($translate.instant('nasha_partitions_action_add_success', {\n        partitionName: self.newPartition.name\n      }));\n    }).catch(function () {\n      $uibModalInstance.dismiss();\n      CloudMessage.error($translate.instant('nasha_partitions_action_add_failure', {\n        partitionName: self.newPartition.name\n      }));\n    }).finally(function () {\n      self.loading = false;\n    });\n  };\n\n  self.dismiss = function () {\n    $uibModalInstance.dismiss();\n  };\n\n  function init() {\n    self.loading = true;\n    $q.all({\n      nasha: OvhApiDedicatedNasha.v6().get({\n        serviceName: $stateParams.nashaId\n      }).$promise,\n      schema: OvhApiDedicatedNasha.v6().schema().$promise\n    }).then(function (data) {\n      self.protocols = data.schema.models['dedicated.storage.ProtocolEnum'].enum;\n      self.nasha = data.nasha;\n    }).finally(function () {\n      self.loading = false;\n    });\n  }\n\n  init();\n}]);",null]}