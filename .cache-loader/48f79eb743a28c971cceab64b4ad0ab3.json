{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/add/logs-streams-add.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/streams/add/logs-streams-add.controller.js","mtime":1539717142144},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsStreamsAddCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsStreamsAddCtrl.$inject = [\"$q\", \"$state\", \"$stateParams\", \"LogsStreamsService\", \"ControllerHelper\", \"CloudMessage\", \"LogsConstants\"];\n\n  function LogsStreamsAddCtrl($q, $state, $stateParams, LogsStreamsService, ControllerHelper, CloudMessage, LogsConstants) {\n    _classCallCheck(this, LogsStreamsAddCtrl);\n\n    this.$q = $q;\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.serviceName = this.$stateParams.serviceName;\n    this.LogsStreamsService = LogsStreamsService;\n    this.ControllerHelper = ControllerHelper;\n    this.CloudMessage = CloudMessage;\n    this.LogsConstants = LogsConstants;\n    this.isEdit = false;\n    this.compressionAlgorithms = this.LogsStreamsService.getCompressionAlgorithms();\n    this.storageDurations = this.LogsStreamsService.getStorageDurations();\n    this.coldStoragePrice = {\n      price: ''\n    };\n    this.initLoaders();\n  }\n  /**\n   * initializes options list\n   *\n   * @memberof LogsStreamsHomeCtrl\n   */\n\n\n  _createClass(LogsStreamsAddCtrl, [{\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      this.options = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getSubscribedOptions(_this.serviceName);\n        }\n      });\n      this.options.load();\n      this.mainOffer = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getMainOffer(_this.serviceName);\n        }\n      });\n      this.catalog = this.ControllerHelper.request.getArrayLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getOrderCatalog(_this.ovhSubsidiary);\n        }\n      });\n      this.accountDetails = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsStreamsService.getAccountDetails(_this.serviceName);\n        }\n      });\n      this.accountDetails.load().then(function () {\n        _this.ovhSubsidiary = _this.accountDetails.data.me.ovhSubsidiary;\n\n        _this.$q.all([_this.mainOffer.load(), _this.catalog.load()]).then(function () {\n          if (_this.mainOffer.data.planCode === _this.LogsConstants.basicOffer && !_this.isEdit) {\n            _this.stream.data.webSocketEnabled = false;\n          }\n\n          var selectedCatalog = _this.catalog.data.plans.find(function (plan) {\n            return plan.planCode === _this.mainOffer.data.planCode;\n          });\n\n          var coldstorage = selectedCatalog.addonsFamily.find(function (addon) {\n            return addon.family === _this.LogsConstants.COLDSTORAGE;\n          });\n          _this.coldStoragePrice.price = coldstorage.addons[0].plan.details.pricings.default[0].price.text;\n        });\n      });\n\n      if (this.$stateParams.streamId) {\n        this.isEdit = true;\n        this.stream = this.ControllerHelper.request.getHashLoader({\n          loaderFunction: function loaderFunction() {\n            return _this.LogsStreamsService.getStream(_this.serviceName, _this.$stateParams.streamId);\n          }\n        });\n        this.stream.load();\n      } else {\n        this.isEdit = false;\n        this.stream = this.LogsStreamsService.getNewStream();\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (this.isEdit) {\n        this.updateStream();\n      } else {\n        this.createStream();\n      }\n    }\n    /**\n     * update stream\n     *\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"updateStream\",\n    value: function updateStream() {\n      var _this2 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this2.LogsStreamsService.updateStream(_this2.serviceName, _this2.stream.data).then(function () {\n            return _this2.$state.go('dbaas.logs.detail.streams');\n          }).catch(function () {\n            return _this2.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n    /**\n     * create new stream\n     *\n     * @memberof LogsStreamsHomeCtrl\n     */\n\n  }, {\n    key: \"createStream\",\n    value: function createStream() {\n      var _this3 = this;\n\n      if (this.form.$invalid) {\n        return this.$q.reject();\n      }\n\n      this.CloudMessage.flushChildMessage();\n      this.saving = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this3.LogsStreamsService.createStream(_this3.serviceName, _this3.stream.data).then(function () {\n            return _this3.$state.go('dbaas.logs.detail.streams');\n          }).catch(function () {\n            return _this3.ControllerHelper.scrollPageToTop();\n          });\n        }\n      });\n      return this.saving.load();\n    }\n  }]);\n\n  return LogsStreamsAddCtrl;\n}();\n\nangular.module('managerApp').controller('LogsStreamsAddCtrl', LogsStreamsAddCtrl);",null]}