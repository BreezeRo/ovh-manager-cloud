{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/options/manage/logs-options-manage.service.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/options/manage/logs-options-manage.service.js","mtime":1539717142137},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsOptionsManageService =\n/*#__PURE__*/\nfunction () {\n  LogsOptionsManageService.$inject = [\"LogsStreamsService\", \"LogsAliasesService\", \"LogsIndexService\", \"LogsDashboardsService\", \"LogsInputsService\", \"LogsRolesService\"];\n\n  function LogsOptionsManageService(LogsStreamsService, LogsAliasesService, LogsIndexService, LogsDashboardsService, LogsInputsService, LogsRolesService) {\n    _classCallCheck(this, LogsOptionsManageService);\n\n    this.LogsAliasesService = LogsAliasesService;\n    this.LogsStreamsService = LogsStreamsService;\n    this.LogsIndexService = LogsIndexService;\n    this.LogsDashboardsService = LogsDashboardsService;\n    this.LogsRolesService = LogsRolesService;\n    this.LogsInputsService = LogsInputsService;\n  }\n\n  _createClass(LogsOptionsManageService, [{\n    key: \"getAllStreams\",\n    value: function getAllStreams(serviceName) {\n      return this.LogsStreamsService.getStreamDetails(serviceName);\n    }\n  }, {\n    key: \"getAllAliases\",\n    value: function getAllAliases(serviceName) {\n      return this.LogsAliasesService.getAliasesDetails(serviceName);\n    }\n  }, {\n    key: \"getAllDashboards\",\n    value: function getAllDashboards(serviceName) {\n      return this.LogsDashboardsService.getDashboardsDetails(serviceName);\n    }\n  }, {\n    key: \"getAllIndices\",\n    value: function getAllIndices(serviceName) {\n      return this.LogsIndexService.getIndices(serviceName);\n    }\n  }, {\n    key: \"getAllRoles\",\n    value: function getAllRoles(serviceName) {\n      return this.LogsRolesService.getRoles(serviceName);\n    }\n  }, {\n    key: \"getAllInputs\",\n    value: function getAllInputs(serviceName) {\n      return this.LogsInputsService.getInputs(serviceName);\n    }\n  }]);\n\n  return LogsOptionsManageService;\n}();\n\nangular.module('managerApp').service('LogsOptionsManageService', LogsOptionsManageService);",null]}