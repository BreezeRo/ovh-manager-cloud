{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/options/manage/logs-options-manage.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/detail/options/manage/logs-options-manage.controller.js","mtime":1539717142137},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["class LogsOptionsManageCtrl {\n  constructor($state, $stateParams, $window, CloudMessage, ControllerHelper, LogsOptionsService,\n    LogsOptionsManageService, CurrencyService, OrderHelperService) {\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$window = $window;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsOptionsService = LogsOptionsService;\n    this.LogsOptionsManageService = LogsOptionsManageService;\n    this.CurrencyService = CurrencyService;\n    this.OrderHelperService = OrderHelperService;\n\n    this.serviceName = this.$stateParams.serviceName;\n    this.initLoaders();\n  }\n\n  initLoaders() {\n    this.getManagedOptions = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsService.getManagedOptions(this.serviceName),\n    });\n\n    this.getAllDashboards = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllDashboards(this.serviceName),\n    });\n\n    this.getAllStreams = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllStreams(this.serviceName),\n    });\n\n    this.getAllIndices = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllIndices(this.serviceName),\n    });\n\n    this.getAllAliases = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllAliases(this.serviceName),\n    });\n\n    this.getAllRoles = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllRoles(this.serviceName),\n    });\n\n    this.getAllInputs = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsManageService.getAllInputs(this.serviceName),\n    });\n\n    this.getManagedOptions.load();\n    this.getAllAliases.load();\n    this.getAllDashboards.load();\n    this.getAllIndices.load();\n    this.getAllStreams.load();\n    this.getAllRoles.load();\n    this.getAllInputs.load();\n  }\n\n  terminateOption(option) {\n    this.removeOption = this.ControllerHelper.request.getArrayLoader({\n      loaderFunction: () => this.LogsOptionsService.terminateOption(this.serviceName, option),\n    });\n  }\n\n  overview(info) {\n    this.ControllerHelper.modal.showModal({\n      modalConfig: {\n        templateUrl: 'app/dbaas/logs/detail/options/manage/overview/logs-options-overview.html',\n        controller: 'LogsOptionsManageOverviewCtrl',\n        controllerAs: 'ctrl',\n        resolve: {\n          option: () => info,\n          aliases: () => this.getAllAliases.data,\n          dashboards: () => this.getAllDashboards.data,\n          indices: () => this.getAllIndices.data,\n          streams: () => this.getAllStreams.data,\n          roles: () => this.getAllRoles.data,\n          inputs: () => this.getAllInputs.data,\n        },\n      },\n    });\n  }\n\n  deactivate(option) {\n    this.CloudMessage.flushChildMessage();\n    this.LogsOptionsService.terminateModal(\n      option,\n    ).then(() => {\n      this.delete = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: () => this.LogsOptionsService.terminateOption(this.serviceName, option)\n          .then(() => this.initLoaders())\n          .finally(() => this.ControllerHelper.scrollPageToTop()),\n      });\n      this.delete.load();\n    });\n  }\n\n  reactivate(option) {\n    this.LogsOptionsService.showReactivateInfo(option);\n  }\n\n  back() {\n    this.$state.go('dbaas.logs.detail.options.home', {\n      serviceName: this.serviceName,\n    });\n  }\n}\n\nangular.module('managerApp').controller('LogsOptionsManageCtrl', LogsOptionsManageCtrl);\n"]}