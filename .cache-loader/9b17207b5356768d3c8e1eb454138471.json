{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/header/logs-dashboard-header.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/dbaas/logs/header/logs-dashboard-header.controller.js","mtime":1539717142155},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LogsDashboardHeaderCtrl =\n/*#__PURE__*/\nfunction () {\n  LogsDashboardHeaderCtrl.$inject = [\"$stateParams\", \"ControllerHelper\", \"LogsDetailService\", \"SidebarMenu\", \"LogsHelperService\"];\n\n  function LogsDashboardHeaderCtrl($stateParams, ControllerHelper, LogsDetailService, SidebarMenu, LogsHelperService) {\n    _classCallCheck(this, LogsDashboardHeaderCtrl);\n\n    this.$stateParams = $stateParams;\n    this.ControllerHelper = ControllerHelper;\n    this.LogsDetailService = LogsDetailService;\n    this.SidebarMenu = SidebarMenu;\n    this.serviceName = $stateParams.serviceName;\n    this.disableTabs = true;\n    this.LogsHelperService = LogsHelperService;\n    this.initLoaders();\n  }\n\n  _createClass(LogsDashboardHeaderCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.menuItem = this.SidebarMenu.getItemById(this.serviceName); //  If the menu is not yet loaded, we fetch IPLB's displayName.  Dirty patch.\n\n      if (!this.menuItem) {\n        this.menuItem = {\n          title: this.serviceName\n        };\n      }\n\n      this.runLoaders();\n      this.guides = this.LogsHelperService.getGuides();\n    }\n  }, {\n    key: \"initLoaders\",\n    value: function initLoaders() {\n      var _this = this;\n\n      //  No error handling since we don't want to break anything for a title.\n      this.configuration = this.ControllerHelper.request.getHashLoader({\n        loaderFunction: function loaderFunction() {\n          return _this.LogsDetailService.getServiceDetails(_this.serviceName);\n        },\n        successHandler: function successHandler() {\n          _this.title = _this.configuration.data.displayName || _this.configuration.data.serviceName;\n          _this.disableTabs = _this.LogsHelperService.isAccountDisabled(_this.configuration.data) || _this.LogsHelperService.accountSetupRequired(_this.configuration.data);\n        }\n      });\n    }\n  }, {\n    key: \"runLoaders\",\n    value: function runLoaders() {\n      this.configuration.load();\n    }\n  }]);\n\n  return LogsDashboardHeaderCtrl;\n}();\n\nangular.module('managerApp').controller('LogsDashboardHeaderCtrl', LogsDashboardHeaderCtrl);",null]}