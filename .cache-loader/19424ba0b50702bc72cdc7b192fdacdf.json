{"remainingRequest":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js??ref--10-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js??ref--11-1!/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/frontends/iplb-frontends.controller.js","dependencies":[{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/client/app/iplb/frontends/iplb-frontends.controller.js","mtime":1539717142197},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/.babelrc","mtime":1539717141926},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/babel-loader/lib/index.js","mtime":1539597349061},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/cache-loader/dist/cjs.js","mtime":1539679504371},{"path":"/Users/jleveugle/Documents/Work/github/ovh-ux/ovh-manager-cloud/node_modules/@ovh-ux/manager-webpack-config/loaders/ui-router-translations.js","mtime":1539950864368}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IpLoadBalancerFrontendsCtrl =\n/*#__PURE__*/\nfunction () {\n  IpLoadBalancerFrontendsCtrl.$inject = [\"$state\", \"$stateParams\", \"$translate\", \"CloudMessage\", \"ControllerHelper\", \"IpLoadBalancerActionService\", \"IpLoadBalancerFrontendsService\"];\n\n  function IpLoadBalancerFrontendsCtrl($state, $stateParams, $translate, CloudMessage, ControllerHelper, IpLoadBalancerActionService, IpLoadBalancerFrontendsService) {\n    _classCallCheck(this, IpLoadBalancerFrontendsCtrl);\n\n    this.$state = $state;\n    this.$stateParams = $stateParams;\n    this.$translate = $translate;\n    this.CloudMessage = CloudMessage;\n    this.ControllerHelper = ControllerHelper;\n    this.IpLoadBalancerActionService = IpLoadBalancerActionService;\n    this.IpLoadBalancerFrontendService = IpLoadBalancerFrontendsService;\n  }\n\n  _createClass(IpLoadBalancerFrontendsCtrl, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.init();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      this.loading = true;\n      this.IpLoadBalancerFrontendService.getFrontends(this.$stateParams.serviceName).then(function (results) {\n        _this.loading = false;\n        _this.frontends = results;\n      });\n    }\n  }, {\n    key: \"loadFarm\",\n    value: function loadFarm(frontend) {\n      if (!frontend.defaultFarmId) {\n        _.set(frontend, 'defaultFarm', null);\n      }\n\n      return this.IpLoadBalancerFrontendService.getFarm(frontend.protocol, this.$stateParams.serviceName, frontend.defaultFarmId).then(function (farm) {\n        return {\n          defaultFarm: farm\n        };\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(frontend) {\n      this.$state.go('network.iplb.detail.frontends.update', {\n        serviceName: this.$stateParams.serviceName,\n        frontendId: frontend.frontendId\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(frontend) {\n      var _this2 = this;\n\n      this.IpLoadBalancerActionService.deleteFrontend(this.$stateParams.serviceName, frontend).then(function () {\n        return _this2.init();\n      });\n    }\n  }, {\n    key: \"preview\",\n    value: function preview(_frontend) {\n      this.ControllerHelper.modal.showModal({\n        modalConfig: {\n          templateUrl: 'app/iplb/frontends/preview/iplb-frontends-preview.html',\n          controller: 'IpLoadBalancerFrontendPreviewCtrl',\n          controllerAs: 'IpLoadBalancerFrontendPreviewCtrl',\n          resolve: {\n            frontend: function frontend() {\n              return _frontend;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(frontend) {\n      // frontend.disabled = !frontend.disabled;\n      this.IpLoadBalancerFrontendService.toggleFrontend(frontend.protocol, this.$stateParams.serviceName, _.assign({}, frontend, {\n        disabled: !frontend.disabled\n      })).then(function () {\n        // Apply value on model\n        _.set(frontend, 'disabled', !frontend.disabled);\n      });\n    }\n  }]);\n\n  return IpLoadBalancerFrontendsCtrl;\n}();\n\nangular.module('managerApp').controller('IpLoadBalancerFrontendsCtrl', IpLoadBalancerFrontendsCtrl);",null]}